{"version":3,"sources":["utils/qs.js","components/Webcam/Webcam.js","components/CameraList/CameraList.js","components/NameField/NameField.js","components/Tester/InProcessScreen.js","components/Tester/Tester.js","components/Table/TableHeader.js","components/Table/TableRow.js","components/Table/TableData.js","components/Table/PageNum.js","components/Table/PageInput.js","components/Table/TableFooter.js","components/Table/Table.js","components/Table/DataCollection.js","components/Modal.js","components/Status.js","components/Toggle/Toggle.js","components/CompleteAnimation/Checkmark/Checkmark.js","components/CompleteAnimation/Fireworks/Fireworks.js","components/CompleteAnimation/CompleteAnimation.js","components/ProgressBar.js","app/App.js","index.js","assets/svg/collapse-chevron.svg","assets/svg/expand-chevron.svg","assets/svg/beg.svg","assets/svg/end.svg","utils/ip.js","assets/svg/up-chevron.svg","assets/svg/down-chevron.svg"],"names":["qs","id","parsedUrl","URL","window","location","href","searchParams","has","get","Webcam","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isRecording","recorder","videoSrc","videoEle","startTime","video","React","createRef","today","Date","getFullYear","getMonth","getDate","getTime","react_default","a","createElement","className","onClick","startRecording","controls","autoPlay","playsInline","muted","ref","props","videoRef","name","Component","CameraList","_useState","useState","_useState2","slicedToArray","availableCams","setAvailableCams","_useState3","_useState4","recordingStatus","setRecordingStatus","_useState5","_useState6","availableMics","setAvailableMics","_useState7","_useState8","pluggedInDevices","setPluggedInDevices","helper_extractRelevantCamInfo","device","camera_info","deviceId","label","groupId","initCams","navigator","mediaDevices","enumerateDevices","then","devices","videoDevices","micDevices","num","reduce","accumulator","kind","updateDetectedNumCams","helper_getNumCams","map","toLowerCase","includes","indexOf","push","helper_addToMicDevices","videodevices","devicePrior","filter","cam","mic_info","helper_addToVideoDevices","document","getElementById","click","disabled","catch","err","console","log","message","Array","prototype","diff","i","isMac","startFaceTimeCam","faceTimeDevice","defaultMic","cogoToast","success","position","hideAfter","hide","addNewCamMic","resolve","undefined","Promise","checkIfMac","Exception","allDevices","detectedTwoDevices","idAoni","newPluggedInID","length","warn","_getNewMicCam","newCam","newMic","error","getNewMicCam","_getNewMicCam2","newMicID","newCamDevice","temp","substring","initCamsDummy","stopAllCams","startAllCams","getUserMedia","audio","exact","frameRate","ideal","width","height","camera","RecordRTC","recorderType","MediaStreamRecorder","type","desiredSampRate","numberOfAudioChannels","disableLogs","getState","current","srcObject","NotYetLoadedException","triggerRecordStatusUpdate","dummy","stopRecording","blob","getBlob","socket","emit","sentence_index","camera_id","updateConnectionStatus","resumeAllCams","_unused","resumeRecording","useEffect","addCamState","on","addCam","comp_camsList","components_Webcam_Webcam","key","debug","debugControls","style","marginBottom","renderCams","NameField","saveName","value","randomNumber","Math","floor","random","setRandom","no","url_state","history","pushState","updateTesterContents","updateGreenLightStatus","isNameEmpty","replace","detectEnter","e","innerText","which","startBtn","buttons","placeholder","onKeyPress","autoFocus","required","InProcessScreen","recording","setRecordState","done_recording","setDoneRecording","reset_state","reset","nameSet","setName","updateSentence","data","getRecordState","curr_sentence_index","content","curr_sentence","showFileSavingLoader","stopTimer","updateRecordProgress","record","startTimer","displaySentenceToBeRead","debugMode","recordedYet","recordedProgress","disableNextButtonIfCurrNotRead","emoji","sentence","msg","makeEmojiLayout","recordedClassName","recordTimeEle","recordTimeMsg","transition","color","recordGreenLight","numFilesSaved","requiredNumCams","connectedToServer","text","data_length","detectedNumCams","NameField_NameField_NameField","getContents","Tester","intervalID","setIntervalID","clearInterval","innerHTML","time","setInterval","hour","min","sec","slice","createInterval","comp_totalProgress","comp_saveProgress","hidden","TableHeader","TableRow","getClassOfRowItem","read","index","TableData","updateDataOnPageChange","_this2","page","curr_page","max_per_page","beg","end","rowItems","TableRow_TableRow","PageNum","selected","updatePage","PageInput","handleChange","event","Number","target","handleSubmit","preventDefault","onSubmit","htmlFor","onChange","TableFooter","page_num","mid_point","max_page","total_data","toFixed","nums_list","from","x","PageNum_PageNum","PageInput_PageInput","src","alt","prev","next","Table","TableHeader_TableHeader","TableData_TableData","sentencesPerPageInTable","TableFooter_TableFooter","DataCollection","Table_Table_Table","Modal","_useModali","useModali","animated","title","dist_default","Button","buttonCancel","isStyleCancel","toggleCompleteModal","buttonConfirm","isStyleDestructive","confirmFunc","toast","info","_useModali2","completeModal","onLoadFunc","getElementsByClassName","modalID","Status","Infinity","remainingWords","setRemainingWords","startTimeTotalSecs","getSeconds","diffSecs","hours","mins","totalRecordingTime","displayTime","tick","showTime","initTime","SomeError","date","getHours","getMinutes","Toggle","toggle","addEventListener","onChangeFunc","checked","updateDebugMode","Checkmark","version","xmlns","xlink","y","viewBox","enableBackground","xmlSpace","fill","stroke","strokeMiterlimit","d","strokeWidth","cx","cy","r","strokeLinecap","points","strokeDasharray","Fireworks","CompleteAnimation","Fireworks_Fireworks","Checkmark_Checkmark","ProgressBar","percent","curr","total","alignmentStyle","align","margin","strokeColor","shape","es","trailWidth","trailColor","App","curr_index","ip_address","showNoCamsRef","hideServerOfflineRef","Desktop","_ref","children","useMediaQuery","minWidth","Tablet","_ref2","maxWidth","Mobile","_ref3","Default","_ref4","setState","randomFile","newsentences","readTextFile","getRandom","terminal","handler_hoverMouseOutDebug","handler_hoverMouseOverDebug","classList","remove","handler_hoverMouseOutBottom","handler_hoverMouseOverBottom","override","numFilesSavedInd","Fragment","main_userView","comp_debug","comp_tester","comp_bottomAdmin","recordProgress","isMobile","marginTop","top","left","helper_toggleHideBottom","down_chevron","comp_dataCollection","comp_cameraList","main_adminView","textAlign","main_playground","comp_debugHover","comp_completeAnimation","CompleteAnimation_CompleteAnimation","DataCollection_DataCollection","updateName","currSentence","currSentenceIndex","currPageInTable","components_Tester_Tester","first_sentence","numFilesSavedTotal","totalTime","updateTotalTime","disp_showFileSavingLoader","getSentenceText","getSentenceIndex","computerID","computerStatus","toggleCamState","helper_toggleCamState","admin_resetCams","comp_status","totalWords","helper_checkIfMobileView","comp_modals","buttonConfirmId","admin_resetProgress","getStatus","helper_toggleModal","handler_debugToggle","readOnly","ip","handler_IPOnChange","handler_useThisCompAsServer","helper_toggleHideDebug","up_chevron","disp_showFileSavedMessage","updateFilesSaved","numFiles","successMessage","ip_util","clientGetIP","split","loading","helper_setServerIP","debugCogoToastOnRef","debugCogoToastOffRef","showDebugOn","showDebugOff","handler_fileSaveSuccess","style_makeEmojiToastLayout","updateCompID","status","style_addThisCpuIcon","str","find","re","RegExp","ref_hideLoader","NotOnPageError","disp_showServerConencted","add","initSocketListeners","helper_showServerNotOnline","JSON","stringify","progress","connectedOrder","connectedOrderMap","update","$merge","refreshRates","conectedOrderNum","setTimeout","reload","max","new_page","bool","admin_refreshAll","origin","pathname","helper_emitInitialSocketMessages","helper_showNoCamsConnected","disconnect","io","helper_addHoverEventListeners","debugHoverArea","bottomHoverArea","helper_removeHoverEventListeners","removeEventListener","handler_keydown","inputServerIP","activeElement","react_router_dom","Helmet","react_router","path","component","fontSize","pinyin","handler_keyup","file","stateName","_this3","fetch","response","sum","serverID","opts","hostname","mode","ok","_context","t0","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","return","ReactDOM","render","src_app_App","module","exports","__webpack_require__","p","ifaces","require","networkInterfaces","nodeGetIP","address","keys","forEach","ifname","iface","family","internal","onNewIP","pc","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","iceServers","noop","localIPs","ipRegex","ipIterate","createDataChannel","createOffer","sdp","line","match","setLocalDescription","onicecandidate","ice","candidate"],"mappings":"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","file":"static/js/main.411ee19a.chunk.js","sourcesContent":["// let qs = (function (a) {\r\n//   console.log(\"in qs:\" + window.location.href)\r\n//   if (a === \"\") return {};\r\n//   var b = {};\r\n//   for (var i = 0; i < a.length; ++i) {\r\n//     var p = a[i].split('=', 2);\r\n//     if (p.length === 1)\r\n//       b[p[0]] = \"\";\r\n//     else\r\n//       b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\r\n//   }\r\n//   return b;\r\n// })(window.location.search.substr(1).split('&'));\r\n\r\nconst qs = function(id) {\r\n  let parsedUrl = new URL(window.location.href);\r\n  if (parsedUrl.searchParams.has(id)) {\r\n    return parsedUrl.searchParams.get(id);\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\nexport default qs;","import React from 'react';\r\nimport './Webcam.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Webcam extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isRecording: false,\r\n      recorder: null,\r\n      videoSrc: null,\r\n      videoEle: null,\r\n      startTime: 'time',\r\n    };\r\n    this.video = React.createRef();\r\n  }\r\n  getCurrentTime() {\r\n    let today = new Date();\r\n    let date =\r\n      today.getFullYear() +\r\n      '-' +\r\n      (today.getMonth() + 1) +\r\n      '-' +\r\n      today.getDate();\r\n    let time = today.getTime(); //today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    return date + '-' + time;\r\n  }\r\n  \r\n  render() {\r\n    // console.log(this.props.videoRef);\r\n    return (\r\n      <div className='vid_card' onClick={this.startRecording}>\r\n        <video\r\n          className='cam'\r\n          controls\r\n          autoPlay\r\n          playsInline\r\n          muted\r\n          ref={this.props.videoRef}\r\n        />\r\n        <p className='cam_label'>{this.props.name}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nWebcam.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  videoRef: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Webcam;\r\n","/* eslint-disable no-console */\r\nimport React, { useState, useEffect } from 'react';\r\n// import sample_cam from '../../assets/svg/sample-cam.svg';\r\nimport Webcam from '../Webcam/Webcam.js';\r\nimport RecordRTC, { MediaStreamRecorder } from 'recordrtc';\r\nimport qs from '../../utils/qs'\r\nimport cogoToast from 'cogo-toast';\r\n// import PropTypes from 'prop-types';\r\n\r\nexport default function CameraList(props) {\r\n  const [availableCams, setAvailableCams] = useState([]);\r\n  const [recordingStatus, setRecordingStatus] = useState(\"recording-status-loading...\");\r\n  const [availableMics, setAvailableMics] = useState([]);\r\n  const [pluggedInDevices, setPluggedInDevices] = useState([]);\r\n\r\n  const helper_extractRelevantCamInfo = device => {\r\n    return {\r\n      camera_info: {\r\n        id: device.deviceId,\r\n        label: device.label,\r\n        groupId: device.groupId\r\n      },\r\n      ref: React.createRef(),\r\n      recorder: null\r\n    };\r\n  }\r\n  const helper_addToVideoDevices = (device, videodevices) => {\r\n    device = helper_extractRelevantCamInfo(device);\r\n    // console.log(availableCams);\r\n    const devicePrior = availableCams.filter(cam => {\r\n      return cam.camera_info.id === device.camera_info.id\r\n    })[0];\r\n    // console.log(devicePrior);\r\n    if (devicePrior) {\r\n      // console.log('found prior device');\r\n      device.mic_info = devicePrior.mic_info;\r\n    } else {\r\n      // console.log('using first cam mic!!!')\r\n      device.mic_info = availableMics[0];\r\n    }\r\n    videodevices.push(device);\r\n  }\r\n  const helper_addToMicDevices = (device, micDevices) => {\r\n    if (micDevices.indexOf(device.deviceId) < 0)\r\n      micDevices.push(device);\r\n  }\r\n  const helper_getNumCams = devices => {\r\n    const num = devices.reduce((accumulator, device) => {\r\n      return device.kind === 'videoinput' ? accumulator + 1 : accumulator;\r\n    }, 0);\r\n    props.updateDetectedNumCams(num);\r\n    return num;\r\n  }\r\n\r\n  const initCams = () => {\r\n    if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\r\n      console.log('enumerateDevices() not supported.');\r\n    } else {\r\n      navigator.mediaDevices.enumerateDevices().then(devices => {\r\n        let videoDevices = [];\r\n        let micDevices = [];\r\n        helper_getNumCams(devices);\r\n\r\n        // console.log(\"number of cams detected: \" + numCams);\r\n        devices.map(function(device) {\r\n          if (device.kind === 'audioinput') {\r\n            if (\r\n              !device.label.toLowerCase().includes('default') &&\r\n              !device.label.toLowerCase().includes('communications') && \r\n              !device.label.toLowerCase().includes('built-in')\r\n            ) {\r\n              helper_addToMicDevices(device, micDevices);\r\n            }\r\n          }            \r\n          if (device.kind === 'videoinput') {\r\n            helper_addToVideoDevices(device, videoDevices);\r\n          }\r\n          return null;\r\n        });\r\n        setAvailableMics(micDevices);\r\n        setAvailableCams(videoDevices);\r\n\r\n        document.getElementById('startBtn').click();\r\n        document.getElementById('startBtn').disabled = true;\r\n        // console.log('getAvailableDevices success!');\r\n      })\r\n      .catch(function(err) {\r\n        console.log(err.name + ': ' + err.message);\r\n      });\r\n    }\r\n  }\r\n  // const initMics = () => {\r\n  //   let id = 0;\r\n  //   availableCams.map(cam => {\r\n  //     if (availableMics[id]) cam.mic_info = availableMics[id++].deviceId;\r\n  //   });\r\n  // }\r\n\r\n  Array.prototype.diff = function(a) {\r\n    return this.filter(function(i) {\r\n      return a.indexOf(i) < 0;\r\n    });\r\n  };\r\n\r\n  const getNewMicCam = (newPluggedInID, allDevices) => {\r\n    const newCam = allDevices.filter(device => {\r\n      return (\r\n        newPluggedInID.indexOf(device.deviceId) >= 0 &&\r\n        device.kind === 'videoinput'\r\n      );\r\n    });\r\n    // should only contain one \r\n    const newMic = allDevices.filter(device => {\r\n      return (\r\n        newPluggedInID.indexOf(device.deviceId) >= 0 &&\r\n        device.kind === 'audioinput'\r\n      ); \r\n    });\r\n    if (newMic.length > 1) {\r\n      console.error('multiple new mics detected')\r\n    }\r\n    if (newCam.length > 1) {\r\n      console.error('multiple new cams detected');\r\n    }\r\n    const newMicID = newMic[0].deviceId;\r\n\r\n    return [newMicID, newCam[0]];\r\n  }\r\n\r\n  const checkIfMac = (resolve) => {\r\n    let faceTimeDevice = undefined;\r\n    let defaultMic = undefined;\r\n    return new Promise(() => {\r\n      navigator.mediaDevices.enumerateDevices().then(devices => {\r\n        faceTimeDevice = devices.filter(device => {\r\n          return device.label.toLowerCase().includes('facetime');\r\n        });\r\n        defaultMic = devices.filter(device => {\r\n          return device.deviceId === 'default'\r\n        });\r\n      }).then(()=> {\r\n        resolve(faceTimeDevice[0], defaultMic[0]);\r\n      });\r\n    })\r\n  }\r\n\r\n  let isMac = false;\r\n\r\n  const startFaceTimeCam = (faceTimeDevice, defaultMic) => {\r\n    if (faceTimeDevice) {\r\n      const device = helper_extractRelevantCamInfo(faceTimeDevice)\r\n      device.mic_info = defaultMic.deviceId;\r\n      setAvailableCams([device]);\r\n      document.getElementById('startBtn').disabled = false;\r\n      document.getElementById('startBtn').click();\r\n      document.getElementById('dummyBtn').disabled = false;\r\n      document.getElementById('dummyBtn').click();\r\n      cogoToast.success('Mac FaceTime Camera started', {\r\n        position: 'top-left',\r\n        hideAfter: 1,\r\n        onClick: hide => {\r\n          hide()\r\n        }\r\n      });\r\n      props.updateDetectedNumCams(1);\r\n      isMac = true;\r\n    }\r\n  }\r\n\r\n\r\n  const addNewCamMic = () => {\r\n    // let isMac = false;\r\n    try {\r\n      checkIfMac(startFaceTimeCam);\r\n    } catch (Exception) {\r\n      // console.err('not a mac')\r\n    }\r\n    navigator.mediaDevices.enumerateDevices().then(devices => {\r\n      const allDevices = devices.filter(device => {\r\n        return (\r\n          device.label.toLowerCase().includes('aoni') &&\r\n          !device.label.toLowerCase().includes('communication') &&\r\n          !device.label.toLowerCase().includes('default')\r\n          // !device.deviceId.toLowerCase().includes('communication') &&\r\n          // !device.deviceId.toLowerCase().includes('default') && (\r\n          //   device.kind === 'audioinput' || device.kind === 'videoinput'\r\n          // )\r\n        );\r\n      });\r\n      let detectedTwoDevices = false;\r\n\r\n      const idAoni = allDevices.map(device => {\r\n        return device.deviceId;\r\n      });\r\n      console.log(idAoni);\r\n      // const newPluggedInPaired = allDevices.map(device => [device.kind, device.deviceId])\r\n      // console.log(newPluggedInPaired);\r\n\r\n      const newPluggedInID = idAoni.diff(pluggedInDevices);\r\n      if (newPluggedInID.length === 0) {\r\n        // console.log('no new devices detected');\r\n        if (!isMac) \r\n          cogoToast.warn('No additional webcams detected.', {hideAfter: 1});\r\n      } else if (newPluggedInID.length === 2) {\r\n        detectedTwoDevices = true;\r\n        // console.log(\r\n        //   'new devices: ' + newPluggedInID.map(d => d.substring(0, 5))\r\n        // );\r\n      }\r\n\r\n      if (detectedTwoDevices) {\r\n        let [newMicID, newCamDevice] = getNewMicCam(newPluggedInID, allDevices);\r\n        newCamDevice = helper_extractRelevantCamInfo(newCamDevice);\r\n        const existCamera = availableCams.filter(cam => {\r\n          return cam.camera_info.id === newCamDevice.camera_info.id;\r\n        })[0];\r\n        if (!existCamera) {\r\n          newCamDevice.mic_info = newMicID;\r\n          let temp = availableCams;\r\n          temp.push(newCamDevice);\r\n          setAvailableCams(temp);\r\n          // cogoToast.success(\r\n          //   'New webcam: ' + newCamDevice.camera_info.id.substring(0, 5) + ' added.'\r\n          // ), {\r\n          //   hideAfter: 0.5,\r\n          //   position: 'top-left',\r\n          //   onClick: hide => {\r\n          //     hide();\r\n          //   }\r\n          // };\r\n          cogoToast.success('Webcam: ' + newCamDevice.camera_info.id.substring(0, 5) + ' added.', {\r\n            hideAfter: 1,\r\n            position: 'top-left',\r\n            onClick: hide => hide()\r\n          });\r\n          document.getElementById('startBtn').disabled = false;\r\n          initCams();\r\n          setPluggedInDevices(idAoni);\r\n        }\r\n      }      \r\n    }).then(() => {\r\n        document.getElementById('dummyBtn').disabled = false;\r\n        document.getElementById('dummyBtn').click();\r\n    });\r\n  }\r\n\r\n  function useAvailableWebCams() {\r\n    //  runs once\r\n    useEffect(() => {\r\n      props.updateConnectionStatus();\r\n    }, [props.addCamState]);\r\n  }\r\n\r\n  const initCamsDummy = () => {\r\n    stopAllCams(true);\r\n  }\r\n\r\n  const startAllCams = () => {\r\n    const temp =\r\n    recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\r\n    // goes through all cams array and through each ID, accesses and opens it using navigator\r\n    availableCams.map(cam => {\r\n      // console.log(cam.mic_info);\r\n      if (!cam.mic_info) {\r\n        console.error('using default microphone...');\r\n      }\r\n      navigator.mediaDevices\r\n        .getUserMedia({\r\n          audio: {\r\n            deviceId: {exact: (cam.mic_info) ? cam.mic_info : 'default'}\r\n          },\r\n          video: {\r\n            frameRate: {exact: 30, ideal: 30},\r\n            width: {ideal: 1920},\r\n            height: {ideal: 1080},\r\n            deviceId: cam['camera_info'].id\r\n          }\r\n        })\r\n        .then(camera => {\r\n          // console.log(camera.getTracks().forEach(track=> {console.log(\"track:\" + track.label + \",\" + track.kind)}));\r\n          // console.log(\"////////////////////////\");\r\n          let recorder = RecordRTC(camera, {\r\n            recorderType: MediaStreamRecorder, //WebAssemblyRecorder,\r\n            type: 'video',\r\n            frameRate: 30,\r\n            desiredSampRate: 16000,\r\n            width: 1920,\r\n            height: 1080,\r\n            numberOfAudioChannels: 2,\r\n            disableLogs: true\r\n          });\r\n          if (recorder.getState() !== 'recording') {\r\n            recorder.camera = camera;\r\n            cam['recorder'] = recorder;\r\n            let video = cam['ref'];\r\n            try {\r\n              video.current.srcObject = camera;\r\n            } catch (NotYetLoadedException) {\r\n              //\r\n            }\r\n            // resetInitialCams(recorder);\r\n            recorder.startRecording();\r\n          }\r\n          triggerRecordStatusUpdate(temp, recorder, cam);\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n        return availableCams;\r\n    });\r\n  };\r\n\r\n  const stopAllCams = (dummy) => {\r\n    const temp =\r\n      recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\r\n      \r\n    availableCams.map(cam => {\r\n      let recorder = cam['recorder'];\r\n      if (recorder !== null) {\r\n        recorder.stopRecording(() => {\r\n          let blob = recorder.getBlob();\r\n          console.log(\r\n            '%c recorded data',\r\n            'background: #222; color: #bada55',\r\n            blob\r\n          );\r\n          if (dummy !== true) {\r\n            props.socket.emit('client: save data', {\r\n              name: qs(\"name\"),\r\n              sentence_index: qs(\"sentence_index\"),\r\n              camera_id: cam['camera_info'].id,\r\n              blob: blob\r\n            });\r\n          } else {\r\n            console.log('dummy received, did not save blob');\r\n          }\r\n\r\n        });\r\n        triggerRecordStatusUpdate(temp, recorder, cam);\r\n      }\r\n      return availableCams;\r\n    });\r\n  };\r\n\r\n  const triggerRecordStatusUpdate = (temp, recorder, cam) => {\r\n    try {\r\n      temp[cam['camera_info'].id.substring(0, 15)] = recorder.getState();\r\n      setRecordingStatus(temp);\r\n      props.updateConnectionStatus(temp);\r\n    } catch (NotYetLoadedException) {\r\n      cogoToast.warn('Camera not yet loaded!', {\r\n        hideAfter: 0,\r\n        onClick: hide => {\r\n          hide()\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const resumeAllCams = () => {\r\n    const temp =\r\n      recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\r\n    availableCams.map(cam => {\r\n      let recorder = cam['recorder'];\r\n      let state = undefined;\r\n      try {\r\n        state = recorder.getState();\r\n      } catch {\r\n        cogoToast.warn(\"Camera not yet loaded!\", {\r\n          hideAfter: 0,\r\n          onClick: hide => {\r\n            hide()\r\n          }\r\n        });\r\n      }\r\n      if (state === \"paused\") {\r\n        recorder.resumeRecording();\r\n      } else if (state === \"stopped\"){\r\n        try {\r\n          recorder.startRecording();\r\n        } catch (NotYetLoadedException) {\r\n          cogoToast.warn('Camera not yet loaded!', {\r\n            hideAfter: 0,\r\n            onClick: hide => {\r\n              hide()\r\n            }\r\n          });\r\n        }\r\n      }\r\n      triggerRecordStatusUpdate(temp, recorder, cam);\r\n      return availableCams;\r\n    });\r\n  }\r\n\r\n  useAvailableWebCams();\r\n\r\n  // dummy to fix bug of first video\r\n  props.socket.on('server: dummy vid, do not save', function() {\r\n    try {\r\n      document.getElementById('dummyBtn').click();\r\n      document.getElementById('dummyBtn').disabled = true;\r\n    } catch (NotYetLoadedException) {\r\n      console.error(NotYetLoadedException);\r\n    }\r\n  });\r\n\r\n  // this is actually what calls start cams\r\n  props.socket.on('server: start cams', function () {\r\n    try {\r\n      document.getElementById(\"resumeBtn\").click();\r\n      document.getElementById(\"resumeBtn\").disabled = true;\r\n      document.getElementById('stopBtn').disabled = false;\r\n    } catch (NotYetLoadedException) {\r\n      console.error(NotYetLoadedException)\r\n    }\r\n\r\n  });\r\n\r\n  // this is actually what calls stop cams\r\n  props.socket.on('server: stop cams', function () {\r\n    try {\r\n      document.getElementById('stopBtn').click();\r\n      document.getElementById('stopBtn').disabled = true;\r\n      document.getElementById(\"resumeBtn\").disabled = false;\r\n    } catch (NotYetLoadedException) {\r\n      console.error(NotYetLoadedException)\r\n    }\r\n  });\r\n\r\n  const debugControls = (debug) => {\r\n    if (debug) {\r\n      return (\r\n        <div>\r\n          {/* <p>Don't click these while actual testing</p> */}\r\n          <button id='dummyBtn' className=\"hidden_button\" onClick={initCamsDummy}>\r\n            dummy reset\r\n          </button>\r\n          <button id='startBtn' className=\"hidden_button\" onClick={startAllCams}>\r\n            start and pause all cams\r\n          </button>\r\n          <button id='resumeBtn' className=\"hidden_button\" onClick={resumeAllCams}>\r\n            resume all cams\r\n          </button>\r\n          <button id='stopBtn' className=\"hidden_button\" onClick={stopAllCams}>\r\n            stop all cams\r\n          </button>\r\n          <button\r\n            id='addCamBtn'\r\n            className='hidden_button'\r\n            onClick={addNewCamMic} \r\n          >\r\n            Add Cam\r\n          </button>\r\n          {/* <button id=\"setCompID\" onClick={getSetCompID}>get set computer ID</button> */}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  const renderCams = addCam => {\r\n\r\n    // initMics()\r\n    const debug = true;\r\n    let i = 0; \r\n    const comp_camsList = availableCams.map(cam => {\r\n      return (\r\n        <Webcam\r\n          key={i++}\r\n          name={'ID: ' + cam['camera_info'].id.substring(0, 15)}\r\n          videoRef={cam['ref']}\r\n        />\r\n      );\r\n    });\r\n      \r\n\r\n    return (\r\n      <div id='camera_list'>\r\n        {debugControls(debug)}\r\n        <div>\r\n          <button className='debug_button' style={{marginBottom: '1em'}} onClick={addCam}>Add Webcam</button>\r\n          <div className='cameras'>{comp_camsList}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  return renderCams(props.addCam);\r\n}","import React, { Component } from 'react'\r\nimport './NameField.scss'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class NameField extends Component {\r\n  saveName = () => {\r\n    let name = document.getElementById(\"name\").value;\r\n    // document.location.search = \"name=\" + name + \"&sentence_index=0\";\r\n    var fileNum = 2000;\r\n    var randomNumber = Math.floor(Math.random() * fileNum);\r\n    this.props.setRandom(randomNumber);\r\n    this.props.socket.emit('client: set random', {no:randomNumber, name:name});\r\n    let url_state = '?name=' + name + '&sentence_index=0'\r\n    window.history.pushState(\r\n      null,\r\n      null,\r\n      url_state\r\n    );\r\n    \r\n    this.props.socket.emit('client: start testing', {\r\n      name,\r\n      sentence_index: 0\r\n    })\r\n    this.props.socket.emit('client: dummy vid, do not save');\r\n    this.props.socket.emit('client: update recording progress', 0);\r\n    this.props.socket.emit('client: save total time', [0,0,0]);\r\n    this.props.socket.emit('client: save total start time', new Date())\r\n    this.props.updateTesterContents();\r\n    this.props.updateGreenLightStatus(true);\r\n    \r\n  }\r\n\r\n  isNameEmpty = () => {\r\n    try {\r\n      return !document.getElementById(\"name\").value.replace(/\\s/g, '').length\r\n    }\r\n    catch (NotYetLoadedException) {\r\n      //\r\n    }\r\n  }\r\n\r\n  detectEnter = (e) => {\r\n    if (!this.isNameEmpty()) {\r\n      if (e.which === 13) {\r\n        this.saveName(e);\r\n      } \r\n    } else {\r\n      document.getElementById('nameNotFilled').innerText='请输入名字'\r\n    }\r\n  }\r\n\r\n  startBtn = (e) => {\r\n    if (!this.isNameEmpty()) {\r\n      if (!e.buttons) {\r\n        this.saveName(document.getElementById(\"name\").value);\r\n      }\r\n    } else {\r\n      document.getElementById('nameNotFilled').innerText = '请输入名字'\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='name_input'>\r\n          <input\r\n            type='text'\r\n            name='name'\r\n            id='name'\r\n            placeholder='输入名字（拼音）'\r\n            onKeyPress={this.detectEnter}\r\n            autoFocus\r\n            required\r\n          />\r\n          <br/>\r\n          <button className=\"btn btn-center\" onClick={this.startBtn}>开始实验</button>\r\n          {(this.isNameEmpty()) && <p className=\"warning_message\" id=\"nameNotFilled\"></p>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNameField.propTypes = {\r\n  setRandom: PropTypes.func.isRequired,\r\n  socket: PropTypes.object.isRequired,\r\n  updateTesterContents: PropTypes.func.isRequired,\r\n  updateGreenLightStatus: PropTypes.func.isRequired,\r\n};","/* eslint-disable no-console */\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NameField from '../NameField/NameField';\r\nimport qs from '../../utils/qs';\r\n\r\nexport default function InProcessScreen(props) {\r\n  const [recording, setRecordState] = useState(false);\r\n  const [done_recording, setDoneRecording] = useState(false);\r\n  const [reset_state, reset] = useState(false);\r\n  const [nameSet, setName] = useState(qs('name'));\r\n\r\n  function updateSentence(data) {\r\n    reset(true);\r\n    props.updateSentence(data);\r\n  }\r\n\r\n  function getRecordState() {\r\n    if (recording) {\r\n      return 'Done';\r\n    } else if (done_recording && !reset_state) {\r\n      return 'Retry';\r\n    } else {\r\n      return 'Record';\r\n    }\r\n  }\r\n\r\n  function stopRecording() {\r\n    setDoneRecording(true);\r\n    setRecordState(false);\r\n    props.socket.emit('client: stop cams', 'in process screen');\r\n    props.socket.emit('client: set sentence content', {\r\n      name: qs(\"name\"),\r\n      sentence_index: props.curr_sentence_index+1,\r\n      content: props.curr_sentence\r\n    });\r\n    reset(false);\r\n    props.showFileSavingLoader();\r\n    props.updateSentence('$next');\r\n\r\n    props.updateGreenLightStatus(false);\r\n    props.stopTimer();\r\n    markSentenceAsDone(props.curr_sentence_index);\r\n  }\r\n\r\n  function markSentenceAsDone(curr_sentence_index) {\r\n    if (curr_sentence_index >= 0 ) props.updateRecordProgress(curr_sentence_index);\r\n  }\r\n\r\n  function startRecording() {\r\n    props.socket.emit('client: start cams', 'in process screen');\r\n    setRecordState(true);\r\n    props.startTimer();\r\n    document.getElementById('testerRecordBtn').className = 'btn btn-danger';\r\n\r\n  }\r\n\r\n  function record() {\r\n    document.getElementById('showSavedFilesBtn').disabled = false;\r\n    if (recording) {\r\n      stopRecording();\r\n    } else {\r\n      startRecording();\r\n    }\r\n  }\r\n\r\n  \r\n  function disableNextButtonIfCurrNotRead() {\r\n    if (!props.debugMode) {\r\n      const recordedYet =\r\n      props.recordedProgress > props.curr_sentence_index;\r\n      try {\r\n        if (recordedYet) {\r\n          document.getElementById('testerNextBtn').disabled = false;\r\n        } else {\r\n          document.getElementById('testerNextBtn').disabled = true;\r\n        }\r\n      } catch (Exception) {\r\n        // console.log(Exception);\r\n      }\r\n    }\r\n  }\r\n\r\n  function makeEmojiLayout(msg, emoji) {\r\n    return (\r\n      <div className='emoji-layout-container'>\r\n        <div className='emoji-layout-emoji-left'> {emoji}</div>\r\n        <div>\r\n          {msg}\r\n        </div>\r\n        <div className='emoji-layout-emoji-right'> {emoji}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displaySentenceToBeRead() {\r\n    disableNextButtonIfCurrNotRead();\r\n    const recordedYet = \r\n      (props.curr_sentence_index > 0) ? \r\n      props.recordedProgress >= props.curr_sentence_index : \r\n      false;\r\n    const emoji = recordedYet ? '↺' : '';\r\n    let sentence = props.data[props.curr_sentence_index];\r\n    if (sentence) {\r\n      // const line1 = sentence.substring(0,10)\r\n      // const line2 = sentence.substring(10);\r\n      sentence = makeEmojiLayout(sentence, emoji);\r\n    }\r\n    \r\n    // const sentence = recordedMessage + ' ' + props.data[props.curr_sentence_index] + ' ' + recordedMessage;\r\n    const recordedClassName = recordedYet ? 'recorded_sentence_highlight sentence_to_be_read' : 'sentence_to_be_read'\r\n    return (\r\n      <div>\r\n        <div className={recordedClassName}>\r\n          {/* <p style={{fontSize: '16px'}}>[{props.curr_sentence_index}]</p> */}\r\n          {sentence}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  \r\n\r\n  function trans(text) {\r\n    if (text === 'Done') {\r\n      return '结束录制';\r\n    } else if (text === 'Retry') {\r\n      return '开始录制';\r\n    } else if (text === 'Record') {\r\n      return '开始录制'\r\n    } else {\r\n      return text;\r\n    }\r\n  }\r\n\r\n  function updateTesterContents() {\r\n    setName(true);\r\n  }\r\n\r\n  function getContents() {\r\n    if (!nameSet) {\r\n      return (\r\n        <div>\r\n          <NameField\r\n            setRandom={props.setRandom}\r\n            socket={props.socket}\r\n            updateTesterContents={updateTesterContents}\r\n            updateGreenLightStatus={props.updateGreenLightStatus}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      try {\r\n        let recordTimeEle = document.getElementById('record_time_content');\r\n        let recordTimeMsg = document.getElementById('record_time_msg');\r\n        let colorRecordTime = (recordTimeEle.innerText === '00:00:00') ? 'gray' : 'red';\r\n        if (colorRecordTime === 'gray') {\r\n          recordTimeEle.style.transition = 'all 0.5 ease'\r\n          recordTimeMsg.style.transition = 'all 0.5 ease'\r\n          recordTimeEle.style.color = 'black';\r\n          recordTimeMsg.style.color = 'black';\r\n        } else {\r\n          recordTimeEle.style.transition = 'all 0.5 ease'\r\n          recordTimeMsg.style.transition = 'all 0.5 ease'\r\n          recordTimeEle.style.color = '#FF1053';\r\n          recordTimeMsg.style.color = '#FF1053';\r\n        }\r\n      } catch (NotYetLoadedException) {\r\n        //\r\n      }\r\n      return (\r\n        <div>\r\n          {displaySentenceToBeRead()}\r\n          <div className='recording_hint'>\r\n          <pre id='record_time_content'>00:00:00</pre>\r\n          <pre id='record_time_msg'>录制中</pre>\r\n            \r\n          </div>\r\n          <button\r\n            id='testerRecordBtn'\r\n            className={\r\n              getRecordState() === 'Done'\r\n                ? 'btn btn-danger'\r\n                : 'btn btn_highlight_green'\r\n            }\r\n            onClick={record}\r\n            disabled={\r\n              !props.recordGreenLight ||\r\n              props.numFilesSaved % props.requiredNumCams !== 0 || \r\n              !props.connectedToServer\r\n            }\r\n          >\r\n            {trans(getRecordState())}\r\n          </button>\r\n          <br />\r\n          <button\r\n            className='btn'\r\n            id='testerPrevBtn'\r\n            onClick={() => updateSentence('$prev')}\r\n            disabled={\r\n              props.curr_sentence_index === 0 ||\r\n              !props.recordGreenLight ||\r\n              props.numFilesSaved % props.requiredNumCams !== 0 ||\r\n              recording\r\n            }\r\n          >\r\n            ⬅上一句\r\n          </button>\r\n          <button\r\n            className='btn'\r\n            id='testerNextBtn'\r\n            onClick={() => updateSentence('$next')}\r\n            disabled={\r\n              props.curr_sentence_index === props.data_length - 1 ||\r\n              !props.recordGreenLight ||\r\n              props.numFilesSaved % props.requiredNumCams !== 0 ||\r\n              recording\r\n            }\r\n          >\r\n            下一句➡\r\n          </button>\r\n          {(props.detectedNumCams === 0) && <p className=\"warning_message\">请加摄像头</p>}\r\n          {(!props.connectedToServer) && <p className=\"warning_message\">请确认您链接到服务器</p>}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='test_container'>\r\n      {getContents()}\r\n    </div>\r\n  );\r\n}\r\n\r\nInProcessScreen.propTypes = {\r\n  setRandom: PropTypes.func.isRequired,\r\n  curr_sentence_index: PropTypes.number.isRequired,\r\n  curr_sentence: PropTypes.string.isRequired,\r\n  data_length: PropTypes.number.isRequired,\r\n  updateSentence: PropTypes.func.isRequired,\r\n  socket: PropTypes.object.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  updateGreenLightStatus: PropTypes.func.isRequired,\r\n  recordGreenLight: PropTypes.bool.isRequired,\r\n  numFilesSaved: PropTypes.number.isRequired,\r\n  requiredNumCams: PropTypes.number.isRequired,\r\n  stopTimer: PropTypes.func.isRequired,\r\n  startTimer: PropTypes.func.isRequired,\r\n  recordedProgress: PropTypes.number.isRequired,\r\n  updateRecordProgress: PropTypes.func.isRequired,\r\n  showFileSavingLoader: PropTypes.func.isRequired,\r\n  debugMode: PropTypes.bool.isRequired,\r\n  connectedToServer: PropTypes.bool.isRequired,\r\n  detectedNumCams: PropTypes.number.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport './Tester.scss';\r\nimport PropTypes from 'prop-types';\r\nimport InProcessScreen from './InProcessScreen.js';\r\nimport qs from '../../utils/qs'\r\n// import ProgressBar from '../ProgressBar'\r\n\r\nfunction Tester(props) {\r\n  const [intervalID, setIntervalID] = useState(undefined);\r\n\r\n  function comp_inProcessScreen() {\r\n    return (\r\n      <InProcessScreen\r\n        setRandom={props.setRandom}\r\n        updateSentence={props.updateSentence}\r\n        curr_sentence_index={props.curr_sentence_index}\r\n        data_length={props.data_length}\r\n        socket={props.socket}\r\n        data={props.data}\r\n        curr_sentence={props.curr_sentence}\r\n        recordGreenLight={props.recordGreenLight}\r\n        updateGreenLightStatus={props.updateGreenLightStatus}\r\n        numFilesSaved={props.numFilesSaved}\r\n        requiredNumCams={props.requiredNumCams}\r\n        stopTimer={stopTimer}\r\n        startTimer={startTimer}\r\n        recordedProgress={props.recordedProgress}\r\n        updateRecordProgress={props.updateRecordProgress}\r\n        showFileSavingLoader={props.showFileSavingLoader}\r\n        debugMode={props.debugMode}\r\n        connectedToServer={props.connectedToServer}\r\n        detectedNumCams={props.detectedNumCams}\r\n      />\r\n    );\r\n  }\r\n\r\n  function stopTimer() {\r\n    clearInterval(intervalID);\r\n    document.getElementById('record_time_content').innerHTML = '00:00:00';\r\n  }\r\n\r\n  function startTimer() {\r\n    setIntervalID(createInterval());\r\n  }\r\n\r\n  function createInterval() {\r\n    let time = [0, 0, 0];\r\n    return setInterval(() => {\r\n      let hour = time[0];\r\n      let min = time[1];\r\n      let sec = time[2];\r\n\r\n      if (sec < 60) {\r\n        sec += 1;\r\n      }\r\n      if (sec === 60) {\r\n        min += 1;\r\n        sec = 0;\r\n      }\r\n      if (min === 60) {\r\n        hour += 1;\r\n        min = 0;\r\n      }\r\n      time = [hour, min, sec];\r\n      document.getElementById('record_time_content').innerHTML =\r\n        ('0' + hour).slice(-2) +\r\n        ':' +\r\n        ('0' + min).slice(-2) +\r\n        ':' +\r\n        ('0' + sec).slice(-2);\r\n      }, 10);\r\n  }\r\n\r\n  return (\r\n    <div className='testing_screen'>\r\n      {props.comp_totalProgress(false, 1.5)}\r\n      <div></div>\r\n      {/* <span/> */}\r\n      {props.comp_saveProgress()}\r\n      <div className='middle'>\r\n        <div className='inner'>{comp_inProcessScreen()}</div>\r\n      </div>\r\n      <pre\r\n        hidden={\r\n          props.recordGreenLight ||\r\n          props.curr_sentence_index === 0 ||\r\n          !qs('name')\r\n        }\r\n        className='warning_message'\r\n      >\r\n        如果等保存时间多余10秒钟，通知老师来从设置机器\r\n      </pre>\r\n    </div>\r\n  );\r\n}\r\n\r\nTester.propTypes = {\r\n  setRandom: PropTypes.func.isRequired,\r\n  updateSentence: PropTypes.func.isRequired,\r\n  curr_sentence_index: PropTypes.number.isRequired,\r\n  curr_sentence: PropTypes.string.isRequired,\r\n  data_length: PropTypes.number.isRequired,\r\n  socket: PropTypes.object.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  recordGreenLight: PropTypes.bool.isRequired,\r\n  updateGreenLightStatus: PropTypes.func.isRequired,\r\n  numFilesSaved: PropTypes.number.isRequired,\r\n  requiredNumCams: PropTypes.number.isRequired,\r\n  recordedProgress: PropTypes.number.isRequired,\r\n  updateRecordProgress: PropTypes.func.isRequired,\r\n  totalTime: PropTypes.array.isRequired,\r\n  updateTotalTime: PropTypes.func.isRequired,\r\n  showFileSavingLoader: PropTypes.func.isRequired,\r\n  debugMode: PropTypes.bool.isRequired,\r\n  connectedToServer: PropTypes.bool.isRequired,\r\n  detectedNumCams: PropTypes.number.isRequired,\r\n  comp_saveProgress: PropTypes.func.isRequired,\r\n  comp_totalProgress: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Tester;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class TableHeader extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='table_header_footer'>\r\n          <h3>Sentence</h3>\r\n          {/* <div>Length</div>\r\n          <div>Actions</div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './TableRow.scss';\r\n// import Actions from './Actions';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class TableRow extends Component {\r\n  getClassOfRowItem = () => {\r\n    let read = this.props.read ? 'read row_item' : 'row_item';\r\n    // let sentence = this.props.sentence;\r\n    let is_current = this.props.curr_sentence_index === this.props.index ? ' curr_sentence' : '';\r\n    return read + is_current;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='table_row'>\r\n          <div className={this.getClassOfRowItem()}>\r\n            {this.props.index + \": \" + this.props.sentence}\r\n          </div>\r\n          {/* <div className='row_item'>00:00 / {this.props.time} </div> */}\r\n          {/* <Actions /> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTableRow.propTypes = {\r\n  sentence: PropTypes.string.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  curr_sentence_index: PropTypes.number.isRequired,\r\n  time: PropTypes.string.isRequired,\r\n  read: PropTypes.bool.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport TableRow from './TableRow.js';\r\nimport PropTypes from 'prop-types';\r\nimport './TableData.scss';\r\n\r\nexport default class TableData extends Component {\r\n  updateDataOnPageChange = () => {};\r\n  render() {\r\n    let data = this.props.data;\r\n    let page = this.props.curr_page;\r\n    let max_per_page = this.props.max_per_page;\r\n    let beg = page * max_per_page - max_per_page;\r\n    let end = beg + max_per_page;\r\n    let small_data = data.slice(beg, end);\r\n    let rowItems = small_data.map((sentence, i) => (\r\n      <TableRow\r\n        curr_sentence_index={this.props.curr_sentence_index}\r\n        sentence={sentence}\r\n        time='00:00'\r\n        read={false}\r\n        key={sentence+\":\"+i}\r\n        index={i + beg}\r\n      />\r\n    ));\r\n\r\n    return <div className='table'>{rowItems}</div>;\r\n  }\r\n}\r\n\r\nTableData.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  curr_sentence_index: PropTypes.number.isRequired,\r\n  curr_page: PropTypes.number.isRequired,\r\n  max_per_page: PropTypes.number.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class PageNum extends Component {\r\n  render() {\r\n    return (\r\n      <div \r\n        className={this.props.selected ? 'page_num' : 'can_click_num page_num'}\r\n        onClick={() => this.props.updatePage(this.props.num)}>\r\n        {this.props.num}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPageNum.propTypes = {\r\n  num: PropTypes.number.isRequired,\r\n  selected: PropTypes.bool.isRequired,\r\n  updatePage: PropTypes.func.isRequired\r\n};\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class PageInput extends Component {\r\n  handleChange = (event) => {\r\n    this.props.updatePage(Number(event.target.value));\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor='page'>Page:</label>\r\n          <input\r\n            type='text'\r\n            value={this.props.curr_page}\r\n            onChange={this.handleChange}\r\n            className = 'debug_text_input'\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPageInput.propTypes = {\r\n  updatePage: PropTypes.func.isRequired,\r\n  curr_page: PropTypes.number.isRequired\r\n}","import React, { Component } from 'react'\r\nimport './TableFooter.scss'\r\nimport PageNum from './PageNum.js'\r\nimport next from '../../assets/svg/collapse-chevron.svg'\r\nimport prev from '../../assets/svg/expand-chevron.svg';\r\nimport PropTypes from 'prop-types';\r\nimport PageInput from './PageInput.js'\r\nimport beg from '../../assets/svg/beg.svg'\r\nimport end from '../../assets/svg/end.svg';\r\n\r\nexport default class TableFooter extends Component {\r\n  updatePage=(page_num) => {\r\n    this.props.updatePage(page_num);\r\n  }\r\n\r\n  render() {\r\n    let curr_page = this.props.curr_page;\r\n    let max_per_page = this.props.max_per_page;\r\n    let mid_point = Math.floor(max_per_page / 2)\r\n    let max_page = Number(((this.props.total_data + 1) / this.props.max_per_page + 1).toFixed(0));\r\n    let page_nums = Array.from(new Array(max_per_page), (x, i) => { \r\n      let min = 0;\r\n      if (curr_page <= mid_point) {\r\n        min = i;\r\n      } else if (curr_page >= max_page - mid_point) {\r\n        min = i + max_page - max_per_page;\r\n      } else {\r\n        min = i + curr_page - mid_point - 1;\r\n      }\r\n      return min;\r\n    });\r\n    let nums_list = page_nums.map((i) => {\r\n      i = i + 1;\r\n      return <PageNum num={i} selected={curr_page === i} key={i} updatePage={this.props.updatePage}/>\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <div className='table_header_footer'>\r\n          <div className='table_footer'>\r\n            <div className='left_footer'>\r\n              <PageInput\r\n                updatePage={this.props.updatePage}\r\n                curr_page={this.props.curr_page}\r\n              />\r\n            </div>\r\n            <div className='right_footer'>\r\n              <img\r\n                src={beg}\r\n                alt=''\r\n                className='small_btn'\r\n                onClick={() => this.props.updatePage(1)}\r\n              />\r\n              <img\r\n                src={prev}\r\n                alt=''\r\n                className='small_btn'\r\n                onClick={() => this.props.updatePage(curr_page - 1)}\r\n              />\r\n              {nums_list}\r\n              <img\r\n                src={next}\r\n                alt=''\r\n                className='small_btn'\r\n                onClick={() => this.props.updatePage(curr_page + 1)}\r\n              />\r\n              <img\r\n                src={end}\r\n                alt=''\r\n                className='small_btn'\r\n                onClick={() => this.props.updatePage(max_page)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTableFooter.propTypes = {\r\n  updatePage: PropTypes.func.isRequired,\r\n  curr_page: PropTypes.number.isRequired,\r\n  total_data: PropTypes.number.isRequired,\r\n  max_per_page: PropTypes.number.isRequired\r\n};","import React, { Component } from 'react'\r\nimport TableHeader from './TableHeader.js'\r\nimport './Table.scss'\r\nimport TableData from './TableData.js'\r\nimport PropTypes from 'prop-types';\r\nimport TableFooter from './TableFooter';\r\nexport default class Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableHeader />\r\n        <TableData\r\n          data={this.props.data}\r\n          curr_page={this.props.curr_page}\r\n          max_per_page={this.props.sentencesPerPageInTable}\r\n          curr_sentence_index={this.props.curr_sentence_index}\r\n        />\r\n        <TableFooter\r\n          total_data={this.props.data.length}\r\n          updatePage={this.props.updatePage}\r\n          curr_page={this.props.curr_page}\r\n          max_per_page={this.props.sentencesPerPageInTable}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTable.propTypes = {\r\n  curr_sentence_index: PropTypes.number.isRequired,\r\n  curr_page: PropTypes.number.isRequired,\r\n  updatePage: PropTypes.func.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  sentencesPerPageInTable: PropTypes.number.isRequired,\r\n};","import React, { Component } from 'react';\r\nimport Table from './Table';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class DataCollection extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='data_table'>\r\n          <Table\r\n            data={this.props.data}\r\n            curr_sentence_index={\r\n              this.props.curr_sentence_index\r\n            }\r\n            curr_page={this.props.curr_page}\r\n            updatePage={this.props.updatePage}\r\n            sentencesPerPageInTable={this.props.sentencesPerPageInTable}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDataCollection.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  curr_sentence_index: PropTypes.number.isRequired,\r\n  socket: PropTypes.object.isRequired,\r\n  updatePage: PropTypes.func.isRequired,\r\n  curr_page: PropTypes.number.isRequired,\r\n  sentencesPerPageInTable: PropTypes.number.isRequired,\r\n};\r\n","import React, { useEffect } from 'react'\r\nimport Modali, { useModali } from 'modali';\r\nimport PropTypes from 'prop-types';\r\nimport cogoToast from 'cogo-toast';\r\n\r\nexport default function Modal(props) {\r\n  const [completeModal, toggleCompleteModal] = useModali({\r\n    animated: true,\r\n    title: props.title,\r\n    message: props.message,\r\n    buttons: [\r\n      <Modali.Button\r\n        label={props.buttonCancel ? props.buttonCancel : ''}\r\n        isStyleCancel\r\n        className={!props.buttonCancel ? 'display_none' : ''}\r\n        key={props.buttonCancel}\r\n        hidden={!props.buttonCancel}\r\n        onClick={() => toggleCompleteModal()}\r\n      />,\r\n      <Modali.Button\r\n        label={props.buttonConfirm}\r\n        isStyleDestructive\r\n        onClick={() => {\r\n          if (props.confirmFunc) props.confirmFunc();\r\n          toggleCompleteModal();\r\n          if (props.toast) cogoToast.info(props.toast, {\r\n            onClick: hide => {\r\n              hide()\r\n            }\r\n          });\r\n        }}\r\n        hidden={!props.buttonConfirm}\r\n        key={props.buttonConfirm}\r\n      />\r\n    ]\r\n  });\r\n  useEffect(() => {\r\n    if (props.onLoadFunc) props.onLoadFunc()\r\n    try {\r\n      if (!props.buttonCancel)\r\n        document.getElementsByClassName(\r\n          'modali-button-cancel'\r\n          )[0].className += ' display_none';\r\n      if (!props.buttonConfirm)\r\n        document.getElementsByClassName(\r\n          'modali-button-destructive'\r\n        )[0].className += ' display_none';\r\n    } catch (NotYetLoadedException) {\r\n      // console.log(NotYetLoadedException);\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div style={{ height: '0px' }}>\r\n      <button\r\n        className=\"hidden_button\"\r\n        id={props.modalID}\r\n        onClick={toggleCompleteModal}\r\n      >\r\n        toggle modal\r\n      </button>\r\n      <Modali.Modal {...completeModal} />\r\n    </div>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  socket: PropTypes.object,\r\n  title: PropTypes.string,\r\n  message: PropTypes.any,\r\n  buttonCancel: PropTypes.string,\r\n  buttonConfirm: PropTypes.string,\r\n  toast: PropTypes.string,\r\n  confirmFunc: PropTypes.func,\r\n  modalID: PropTypes.string,\r\n  onLoadFunc: PropTypes.func,\r\n  buttonConfirmId: PropTypes.string\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Status(props) {\r\n  const [remainingWords, setRemainingWords] = useState(Infinity)\r\n\r\n  let intervalID = undefined\r\n\r\n  useEffect(() => {\r\n    // console.log('status page loaded');\r\n    clearInterval(intervalID);\r\n    props.socket.on('server: response for start time', startTime => {\r\n      try {\r\n        // alert('setting starttime');\r\n        startTime = new Date(startTime);\r\n        const startTimeTotalSecs = getSeconds(startTime);\r\n        const nowSecs = getSeconds(new Date());\r\n        let diffSecs = nowSecs - startTimeTotalSecs;\r\n        // let expectedTime = diffSecs / (props.recordedProgress / props.data_length - 1)\r\n        // console.log(diffSecs);\r\n        const hours = Math.floor(diffSecs / 3600)\r\n        diffSecs -= hours * 3600;\r\n        const mins = Math.floor(diffSecs / 60);\r\n        diffSecs -= mins * 60;\r\n        const secs = diffSecs\r\n        const totalRecordingTime = [hours, mins, secs];\r\n        displayTime(totalRecordingTime);\r\n        intervalID = setInterval(() => tick(totalRecordingTime), 1000);\r\n      } catch (NotYetLoadedException) {\r\n        console.error(NotYetLoadedException);\r\n      }\r\n    });\r\n    showTime();\r\n    setRemainingWords(0);\r\n    console.log(remainingWords);\r\n    // setRemainingWords(totalWords - wordsCompleted)\r\n  }, [])\r\n\r\n  const displayTime = time => {\r\n    try {\r\n      document.getElementById('total_time_elapsed').style.color = 'rgba(255,255,255,0.8';\r\n      document.getElementById('total_time_elapsed').innerText =\r\n        '总记录时间: ' +\r\n        ('0' + time[0]).slice(-2) +\r\n        ':' +\r\n        ('0' + time[1]).slice(-2) +\r\n        ':' +\r\n        ('0' + time[2]).slice(-2);\r\n    } \r\n    catch(NotYetLoadedException) {\r\n      //\r\n    }\r\n  }\r\n\r\n  let time = undefined\r\n  const tick = initTime => {\r\n    if (!time) {\r\n      time = initTime;\r\n    } \r\n    // console.log('ticking')\r\n    let hour = time[0];\r\n    let min = time[1];\r\n    let sec = time[2];\r\n\r\n    if (sec < 60) {\r\n      sec += 1;\r\n    }\r\n    if (sec === 60) {\r\n      min += 1;\r\n      sec = 0;\r\n    }\r\n    if (min === 60) {\r\n      hour += 1;\r\n      min = 0;\r\n    }\r\n    time = [hour, min, sec];\r\n    // console.log(time);\r\n    try {\r\n      displayTime(time);\r\n    } catch (SomeError) {\r\n      console.error(SomeError);\r\n    }\r\n  };\r\n\r\n  const getSeconds = date => \r\n    date.getHours() * 60 * 60 +\r\n    date.getMinutes() * 60 +\r\n    date.getSeconds();\r\n\r\n  const helper_showTime = () => {\r\n    // console.log('asking for start time now');\r\n    props.socket.emit('client: ask for start time');\r\n  };\r\n\r\n  const showTime = () => {\r\n    try {\r\n      document.getElementById('showTimeBtn').click();\r\n      document.getElementById('showTimeBtn').disabled = true;\r\n    } catch (NotYetLoadedException) {\r\n      //\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <pre id='total_time_elapsed' style={{color: 'rgba(255,255,255,0.8'}}>总记录时间: 00:00:00</pre>\r\n      <button\r\n        onClick={helper_showTime}\r\n        id='showTimeBtn'\r\n        className='hidden_button'\r\n      ></button>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatus.propTypes = {\r\n  // recordedProgress: PropTypes.number.isRequired,\r\n  // data_length: PropTypes.number.isRequired,\r\n  // recordGreenLight: PropTypes.bool.isRequired,\r\n  // helper_checkIfMobileView: PropTypes.func.isRequired,\r\n  socket: PropTypes.object.isRequired,\r\n  // totalWords: PropTypes.number.isRequired\r\n\r\n};","/**\r\n * **Based on: http://www.cssscript.com/demo/pure-css-css3-smooth-toggle-switch/**\r\n */\r\n\r\nimport React, { useEffect }from 'react'\r\nimport './toggle.scss'\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * \r\n * @param {*} props \r\n */\r\nexport default function Toggle(props) {\r\n  useEffect(() => {\r\n    const toggle = document.getElementById(props.id);\r\n    try {\r\n      toggle.addEventListener('change', () => {\r\n        props.onChangeFunc(toggle.checked);\r\n      });\r\n      // document.getElementsByClassName('switch-wrapper')[0].addEventListener('mouseover', () => {\r\n      //   document.getElementsByClassName('inset-toggle')[0].classList.add('switch-hover');\r\n      //   console.log('hovered over')\r\n      // });\r\n      // document.getElementsByClassName('switch-wrapper')[0].addEventListener('mouseout', () => {\r\n      //   document.getElementsByClassName('inset-toggle')[0].classList.remove('switch-hover');\r\n      //   console.log('hovered out')\r\n      // })\r\n    } catch (NotYetLoadedException) {\r\n      //\r\n    }\r\n  }, [])\r\n  return (\r\n    <div className=\"switch-wrapper\">\r\n      <div className=\"switch\">\r\n      <div className=\"invisible_pushdown\"></div>\r\n        <input type=\"checkbox\" name=\"toggle\" id={props.id}  checked={props.checked} onChange={props.updateDebugMode}/>\r\n        <label htmlFor=\"toggle\" className=\"inset-toggle\"><i></i></label>\r\n      </div>  \r\n    </div>\r\n  )\r\n}\r\n\r\nToggle.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  onChangeFunc: PropTypes.func.isRequired,\r\n  checked: PropTypes.bool.isRequired,\r\n  updateDebugMode: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport './Checkmark.scss'\r\n\r\n/**\r\n * **Based on: https://codepen.io/ashleygalante/pen/nwoKh**\r\n */\r\nexport default function Checkmark() {\r\n  return (\r\n    <div className=\"checkmark-container\">\r\n      <div className=\"checkmark\">\r\n        <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 161.2 161.2\" enableBackground=\"new 0 0 161.2 161.2\" xmlSpace=\"preserve\">\r\n          <path className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeMiterlimit=\"10\" d=\"M425.9,52.1L425.9,52.1c-2.2-2.6-6-2.6-8.3-0.1l-42.7,46.2l-14.3-16.4\r\n            c-2.3-2.7-6.2-2.7-8.6-0.1c-1.9,2.1-2,5.6-0.1,7.7l17.6,20.3c0.2,0.3,0.4,0.6,0.6,0.9c1.8,2,4.4,2.5,6.6,1.4c0.7-0.3,1.4-0.8,2-1.5\r\n            c0.3-0.3,0.5-0.6,0.7-0.9l46.3-50.1C427.7,57.5,427.7,54.2,425.9,52.1z\"/>\r\n          <circle className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"4\" strokeMiterlimit=\"10\" cx=\"80.6\" cy=\"80.6\" r=\"62.1\"/>\r\n          <polyline className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeMiterlimit=\"10\" points=\"113,52.8 \r\n            74.1,108.4 48.2,86.4 \"/>\r\n          <circle className=\"spin\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"4\" strokeMiterlimit=\"10\" strokeDasharray=\"12.2175,12.2175\" cx=\"80.6\" cy=\"80.6\" r=\"73.9\"/>\r\n        </svg>\r\n      </div>\r\n      <p id=\"complete_message\">🔥 恭喜您完成 🔥</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './Fireworks.scss'\r\n\r\nexport default function Fireworks() {\r\n  return (\r\n    <div className=\"pyro\">\r\n      <div className=\"before\"></div>\r\n      <div className=\"after\"></div>\r\n      </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Checkmark from './Checkmark/Checkmark'\r\nimport Fireworks from './Fireworks/Fireworks'\r\nimport './CompleteAnimation.scss'\r\n\r\nexport default function CompleteAnimation() {\r\n  return (\r\n    <div className=\"CompleteAnimationBG\">\r\n      <Fireworks />\r\n      <Checkmark />\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Line, Circle } from 'rc-progress';\r\n\r\nexport default function ProgressBar(props) {\r\n  const percent = ((props.curr ) / (props.total + 1) * 100).toFixed(2);\r\n  const alignmentStyle = props.align === 'left' ? { margin: '0' } : {};\r\n  return (\r\n    <div className=\"progress_bar\" style={alignmentStyle}>\r\n      <pre style={{color: props.strokeColor}}>\r\n        {props.title}: {props.curr} / {props.total + 1} ({percent}%)\r\n      </pre>\r\n      <div style={{height: '7px'}}></div>\r\n      {props.shape === 'line' &&\r\n      <Line\r\n        className=\"line-progress\"\r\n        percent={percent}\r\n        strokeWidth={props.strokeWidth}\r\n        trailWidth={props.strokeWidth}\r\n        strokeColor = {props.strokeColor}\r\n        trailColor='#363732'\r\n      />}\r\n      {props.shape === 'circle' &&\r\n      <Circle \r\n        className=\"circle-progress\"\r\n        percent={percent}\r\n        strokeWidth={props.strokeWidth}\r\n        trailWidth={props.strokeWidth}\r\n        strokeColor = {props.strokeColor}\r\n        trailColor='#363732'\r\n      />}\r\n    </div>\r\n  );\r\n}\r\n\r\nProgressBar.propTypes = {\r\n  curr: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  align: PropTypes.string.isRequired,\r\n  strokeWidth: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  shape: PropTypes.string.isRequired,\r\n  strokeColor: PropTypes.string.isRequired,\r\n};\r\n","/* eslint-disable no-console */\r\nimport React from 'react';\r\nimport { Helmet } from 'react-helmet'\r\nimport update from 'react-addons-update'\r\nimport qs from '../utils/qs'\r\nimport cogoToast from 'cogo-toast';\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport io from 'socket.io-client';\r\nimport { useMediaQuery } from'react-responsive'\r\n// scss\r\nimport './App.scss';\r\n\r\n// components\r\nimport CameraList from '../components/CameraList/CameraList';\r\nimport Tester from '../components/Tester/Tester';\r\nimport DataCollection from '../components/Table/DataCollection';\r\nimport Modal from '../components/Modal'\r\nimport Status from '../components/Status'\r\nimport Toggle from '../components/Toggle/Toggle'\r\nimport CompleteAnimation from '../components/CompleteAnimation/CompleteAnimation'\r\nimport ProgressBar from '../components/ProgressBar'\r\n\r\n// data\r\n//import sentences from '../assets/data/sentences.txt';\r\n//import pinyin from '../assets/data/sentences-pinyin-accent-nospecialchar.txt'\r\n// import sentences from '../assets/data/sentences-english-test.txt';\r\n\r\n// util\r\nimport ip_util from '../utils/ip'\r\n\r\n// chevron\r\nimport up_chevron from '../assets/svg/up-chevron.svg'\r\nimport down_chevron from '../assets/svg/down-chevron.svg'\r\n\r\n\r\nclass App extends React.Component {\r\n  /**\r\n   * **Basic Configuration**\r\n   */\r\n  sentencesPerPageInTable = 4; // sentences per page of Table\r\n  curr_index = qs('sentence_index'); // extracts the curr index from URL\r\n  ip_address = 'http://192.168.0.103:5000'; // default IP address of server\r\n\r\n  /**\r\n   * **CogoToast References to call to hide toasts**\r\n   */\r\n  showNoCamsRef = undefined;\r\n  hideServerOfflineRef = undefined;\r\n\r\n  /**\r\n   * **ReactJS Framework Initializing States onCreate**\r\n   * Constructor for main react App Component\r\n   * @param {object} props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      addCamState: false,\r\n      connectedOrderMap: {},\r\n      connectedToServer: false,\r\n      computerID: -1,\r\n      computerStatus: {},\r\n      currSentence: '',\r\n      currSentenceIndex: this.curr_index ? Number(this.curr_index) : 0,\r\n      currPageInTable: this.curr_index\r\n        ? Math.floor(Number(this.curr_index) / this.sentencesPerPageInTable) + 1\r\n        : 1,\r\n      data: [],\r\n      detectedNumCams: 0,\r\n      debugMode: false,\r\n      ip: this.ip_address,\r\n      name: '',\r\n      numFilesSavedTotal: 0,\r\n      numFilesSavedInd: 0,\r\n      recordProgress: 0,\r\n      recordGreenLight: false,\r\n      remainingWords: 0,\r\n      requiredNumCams: 8,\r\n      sentencesPerPageInTable: this.sentencesPerPageInTable, // sentences per page\r\n      startTime: undefined,\r\n      socket: io(this.ip_address),\r\n      totalTime: [],\r\n      totalWords: 0,\r\n      randomFile: 0\r\n    };\r\n  }\r\n\r\n  Desktop = ({ children }) => {\r\n  const isDesktop = useMediaQuery({ minWidth: 992 });\r\n  // if (isDesktop) {this.setState({viewMode: 'desktop'});}\r\n  // console.log('This is desktop mode');\r\n  return isDesktop ? children : null\r\n  }\r\n\r\n  Tablet = ({ children }) => {\r\n    const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 });\r\n    // console.log('isTablet: ', isTablet);\r\n    // if (isTablet) {this.setState({viewMode: 'tablet'})}\r\n    return isTablet ? children : null\r\n  }\r\n  Mobile = ({ children }) => {\r\n    const isMobile = useMediaQuery({ maxWidth: 767 });\r\n    // if (isMobile) {this.setState({viewMode: 'mobile'})}\r\n    return isMobile ? children : null\r\n  }\r\n  Default = ({ children }) => {\r\n    // console.log('This is not mobile mode');\r\n    const isNotMobile = useMediaQuery({ minWidth: 768 });\r\n    // if (isNotMobile) {this.setState({viewMode: 'default'})}\r\n    return isNotMobile ? children : null\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Helmet><title>s3and0s—webcam recorder</title></Helmet>\r\n        {/* <Route path='/' exact component={} /> */}\r\n        <Route path='/admin' exact component={this.main_adminView} />\r\n         <div>\r\n          <this.Desktop>{this.main_userView()}</this.Desktop>\r\n          <this.Tablet>{this.main_userView()}</this.Tablet>\r\n          <this.Mobile>\r\n            {this.main_adminView()}\r\n            <div className='mobileAdminView' style={{textAlign: 'center'}}>\r\n              {/* <hr/> */}\r\n              {/* <p><strong>Sentence: </strong></p> */}\r\n              <p style={{fontSize: '0.8em'}}>句子索引: {this.state.currSentenceIndex}</p>\r\n              {/* <hr/> */}\r\n              {(this.state.pinyin) ? this.state.pinyin[this.state.currSentenceIndex]: ''}\r\n              <br/>\r\n              {this.state.data[this.state.currSentenceIndex]}\r\n              {/* <hr/> */}\r\n              <Status socket={this.state.socket}/>\r\n              {this.comp_totalProgress(true, 4)}\r\n              {/* <hr/> */}\r\n              {this.comp_saveProgress(true)}\r\n              {/* <hr/> */}\r\n              {this.terminal()}\r\n            </div>\r\n\r\n            {this.comp_bottomAdmin()}\r\n            </this.Mobile>\r\n          <this.Default>{null}</this.Default>\r\n        </div>\r\n        {this.comp_modals()}\r\n        {this.comp_completeAnimation()}\r\n      </Router>\r\n    );\r\n  }\r\n\r\n  setRandom = (index) => {\r\n    this.setState({randomFile: index});\r\n    var newsentences = '/webcam-recorder/corpus/'+ index +'.txt';\r\n    console.log(newsentences);\r\n    this.readTextFile(newsentences, 'data');\r\n  }\r\n  getRandom = () => {\r\n    return this.state.randomFile;\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.helper_emitInitialSocketMessages();\r\n      ///\r\n      // var fileNum = 2000;\r\n      // var randomNumber = Math.floor(Math.random() * fileNum);\r\n      // this.setRandom(randomNumber);\r\n      ///\r\n      //this.readTextFile(sentences, 'data');\r\n      /////\r\n      //this.readTextFile(newsentences, 'data');\r\n      /////\r\n      //this.readTextFile(pinyin, 'pinyin');\r\n\r\n      this.initSocketListeners();\r\n      document.getElementById('debug_mode').checked =\r\n        this.state.requiredNumCams === 1;\r\n      window.addEventListener('keydown', this.handler_keydown);\r\n      window.addEventListener('keyup', this.handler_keyup);\r\n      if (useMediaQuery({ minWidth: 768 })) {\r\n        this.showNoCamsRef = this.helper_showNoCamsConnected();\r\n      }\r\n      setTimeout(() => {\r\n        if (\r\n          !document\r\n          .getElementsByClassName('server_status')[0]\r\n          .className.includes('server_online')\r\n        ) {\r\n          this.hideServerOfflineRef = this.helper_showServerNotOnline();\r\n        }\r\n      }, 1000);\r\n    } catch (NotYetLoadedException) {\r\n      // console.error(NotYetLoadedException)\r\n    }\r\n  }\r\n\r\n  terminal = () => {}\r\n\r\n  handler_hoverMouseOutDebug = () => {\r\n    try {\r\n      document.getElementsByClassName('debug-group')[0].className +=\r\n        ' ' + 'hideDebug';\r\n    } catch (NotYetLoadedException) {\r\n      console.error(NotYetLoadedException);\r\n    }\r\n  };\r\n\r\n  handler_hoverMouseOverDebug = () => {\r\n    try {\r\n      document\r\n        .getElementsByClassName('debug-group')[0]\r\n        .classList.remove('hideDebug');\r\n    } catch (NotYetLoadedException) {\r\n      console.error(NotYetLoadedException);\r\n    }\r\n  };\r\n\r\n  handler_hoverMouseOutBottom = () => {\r\n    try {\r\n      document.getElementsByClassName('panel_BG')[0].className +=\r\n        ' ' + 'hideBottom';\r\n    } catch (NotYetLoadedException) {\r\n      console.error(NotYetLoadedException);\r\n    }\r\n  };\r\n\r\n  handler_hoverMouseOverBottom = () => {\r\n    try {\r\n      document\r\n        .getElementsByClassName('panel_BG')[0]\r\n        .classList.remove('hideBottom');\r\n    } catch (NotYetLoadedException) {\r\n      console.error(NotYetLoadedException);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * **ReactJS Framework Method**\r\n   */\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handler_keydown);\r\n  }\r\n\r\n  comp_saveProgress = override => {\r\n    return (qs('name') || override) && this.state.requiredNumCams !==1 ? <ProgressBar\r\n          title=\"视频文件已保存\"\r\n          curr={this.state.numFilesSavedInd}\r\n          total={this.state.requiredNumCams - 1}\r\n          align={'center'}\r\n          strokeWidth={17}\r\n          shape='circle'\r\n          strokeColor='lightgreen'\r\n        /> : <></>\r\n  }\r\n\r\n  /**\r\n   * **Component: User Page**\r\n   * Renders components for desktop view\r\n   */\r\n  main_userView = () => {\r\n    return (\r\n      <div className='container'>\r\n        {/* <span id='debug_hover_area'> */}\r\n          {this.comp_debug()}\r\n        {/* </span> */}\r\n        {this.comp_tester()}\r\n        {/* <span id='bottom_hover_area'> */}\r\n        \r\n        {this.comp_bottomAdmin(true)}\r\n        {/* </span> */}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  comp_totalProgress = (override, strokeWidth) => {\r\n    return (qs('name') || override) ? <ProgressBar\r\n        shape='line'\r\n        title={'读完句子的进度'}\r\n        curr={this.state.recordProgress}\r\n        total={this.state.data.length - 1}\r\n        align={'center'}\r\n        strokeWidth={strokeWidth}\r\n        strokeColor='#3bb8ce'\r\n      /> : <></>\r\n  }\r\n\r\n  comp_bottomAdmin = (isMobile) => {\r\n    return <div className='contents'>\r\n            <div className=\"panel_BG hideBottom\">\r\n              <div style= {{marginTop: '-50px'}}>\r\n                <div style={{ width: '100vw', height: '50px', position: 'relative', top: '50px', left: '0'}} onClick={this.helper_toggleHideBottom}> </div>\r\n                <img style={{ position: 'relative', top: '0', left: '0'}} className='chevron' src={down_chevron}></img>\r\n              </div>\r\n              <div className='panel_container'>\r\n                <div className='left_panel'>{this.comp_dataCollection()}</div>\r\n                {isMobile &&\r\n                <div className='right_panel'>\r\n                  <h3>Cameras</h3>\r\n                  <div className='cameras_container'>\r\n                    {this.comp_cameraList()}\r\n                  </div>\r\n                </div>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n  }\r\n\r\n  /**\r\n   * **Component: Admin Page**\r\n   * Renders components for mobile view\r\n   */\r\n  main_adminView = () => {\r\n    return <div style={{ textAlign: 'center' }}>{this.comp_debug()}</div>;\r\n  };\r\n\r\n  /**\r\n   * **Component: PlaygroundPage**\r\n   * Renders components for experimental purposes\r\n   */\r\n  main_playground = () => {\r\n    return <Toggle />;\r\n  };\r\n\r\n  comp_debugHover = () => {};\r\n\r\n  /**\r\n   * **Component: Animation for Study Completion**\r\n   */\r\n  comp_completeAnimation = () => {\r\n    if (this.state.recordProgress + 1 === this.state.data.length) {\r\n      try {\r\n        document.getElementById('testerNextBtn').disabled = true;\r\n      } catch (NotYetLoadedException) {\r\n        //\r\n      }\r\n      return <CompleteAnimation />;\r\n    }\r\n  };\r\n\r\n  // * COMPONENT * //\r\n  comp_dataCollection = () => {\r\n    return (\r\n      <DataCollection\r\n        data={this.state.data}\r\n        updateName={this.updateName}\r\n        curr_sentence={this.state.currSentence}\r\n        socket={this.state.socket}\r\n        curr_sentence_index={this.state.currSentenceIndex}\r\n        curr_page={this.state.currPageInTable}\r\n        updatePage={this.updatePage}\r\n        sentencesPerPageInTable={this.state.sentencesPerPageInTable}\r\n      />\r\n    );\r\n  };\r\n\r\n  // * COMPONENT * //\r\n  comp_tester = () => {\r\n    return (\r\n      <Tester\r\n        setRandom={this.setRandom}\r\n        updateSentence={this.updateSentence}\r\n        data={this.state.data}\r\n        curr_sentence_index={this.state.currSentenceIndex}\r\n        data_length={this.state.data.length}\r\n        first_sentence={this.state.data[this.state.currSentenceIndex]}\r\n        curr_sentence={this.state.currSentence}\r\n        socket={this.state.socket}\r\n        recordGreenLight={\r\n          this.state.recordGreenLight &&\r\n          this.state.numFilesSavedTotal % this.state.requiredNumCams === 0\r\n        }\r\n        debugMode={this.state.debugMode}\r\n        numFilesSaved={this.state.numFilesSavedTotal}\r\n        requiredNumCams={this.state.requiredNumCams}\r\n        updateGreenLightStatus={this.updateGreenLightStatus}\r\n        recordedProgress={this.state.recordProgress}\r\n        updateRecordProgress={this.updateRecordProgress}\r\n        totalTime={this.state.totalTime}\r\n        updateTotalTime={this.updateTotalTime}\r\n        showFileSavingLoader={this.disp_showFileSavingLoader}\r\n        connectedToServer={this.state.connectedToServer}\r\n        detectedNumCams={this.state.detectedNumCams}\r\n        comp_saveProgress={this.comp_saveProgress}\r\n        comp_totalProgress={this.comp_totalProgress}\r\n      />\r\n    );\r\n  };\r\n  getSentenceText = (id) => {\r\n    console.log(\"in app.js\"+\"id:\"+id);\r\n    return this.state.data[id];\r\n  }\r\n  getSentenceIndex = () => {\r\n    return this.state.currSentenceIndex - 1;\r\n  }\r\n\r\n  // * COMPONENT * //\r\n  comp_cameraList = () => {\r\n    return (\r\n      <CameraList\r\n        socket={this.state.socket}\r\n        getSentenceText={this.getSentenceText}\r\n        getSentenceIndex={this.getSentenceIndex}\r\n        computerID={this.state.computerID}\r\n        computerStatus={this.state.computerStatus}\r\n        updateConnectionStatus={this.updateConnectionStatus}\r\n        addCamState={this.state.addCamState}\r\n        toggleCamState={this.helper_toggleCamState}\r\n        updateDetectedNumCams={this.updateDetectedNumCams}\r\n        addCam={this.admin_resetCams}\r\n      />\r\n    );\r\n  };\r\n\r\n  // * COMPONENT * //\r\n  comp_status = () => {\r\n    return (\r\n      <Status\r\n        totalWords={this.state.totalWords}\r\n        data_length={this.state.data.length}\r\n        recordedProgress={this.state.recordProgress}\r\n        helper_checkIfMobileView={this.helper_checkIfMobileView}\r\n        recordGreenLight={this.state.recordGreenLight}\r\n        socket={this.state.socket}\r\n      />\r\n    );\r\n  };\r\n\r\n  // * COMPONENT * //\r\n  comp_modals = () => {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          modalID={'resetProgressModal'}\r\n          socket={this.state.socket}\r\n          title={'Are you sure?'}\r\n          message={'Resetting progress will be permanent.'}\r\n          buttonCancel={'Cancel'}\r\n          buttonConfirm={'Reset Progress'}\r\n          buttonConfirmId={'resetProgressBtn'}\r\n          toast={'Progress reset'}\r\n          confirmFunc={this.admin_resetProgress}\r\n        />\r\n        <Modal\r\n          modalID={'overallStatus'}\r\n          socket={this.state.socket}\r\n          title={'Status'}\r\n          onLoadFunc={this.getStatus}\r\n          message={this.comp_status()}\r\n          buttonConfirm={'Hide'}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  updateDebugMode = () => {\r\n    this.setState({ debugMode: !this.state.debugMode });\r\n  };\r\n\r\n  // * COMPONENT * //\r\n  comp_debug = () => {\r\n    return (\r\n      < div className = 'debug-group hideDebug' >\r\n        <label className='debug_label'>Admin: </label>\r\n\r\n        {/* <button\r\n          onClick={() => {\r\n            this.helper_toggleModal('overallStatus');\r\n            this.getStatus();\r\n          }}\r\n          className='debug_button'\r\n        >\r\n          Status\r\n        </button> */}\r\n        <button\r\n          id='resetCamsBtn'\r\n          className='debug_button'\r\n          onClick={this.admin_resetCams}\r\n        >\r\n          Add Webcam\r\n        </button>\r\n        <button\r\n          className='debug_button'\r\n          onClick={() => {\r\n            this.helper_toggleModal('resetProgressModal');\r\n          }}\r\n        >\r\n          Reset Progress\r\n        </button>\r\n\r\n        <div className='debug_inline_group'>\r\n          <label className='debug_label'>Debug: </label>\r\n          <Toggle\r\n            id='debug_mode'\r\n            onChangeFunc={this.handler_debugToggle}\r\n            checked={this.state.debugMode}\r\n            updateDebugMode={this.updateDebugMode}\r\n          />\r\n        </div>\r\n       {/* {(useMediaQuery({ minWidth: 768 })) &&<br/> } */}\r\n        <div className='debug_inline_group'>\r\n          <label htmlFor='' className='debug_label'>\r\n            Cams:{' '}\r\n          </label>\r\n          <input\r\n            id='numCamsInput'\r\n            type='text'\r\n            className='debug_text_input debug_sm_input warning_message'\r\n            value={this.state.detectedNumCams}\r\n            readOnly\r\n          />\r\n        </div>\r\n\r\n        <div className='debug_inline_group'>\r\n            <label htmlFor='' className='debug_label'>\r\n            Server:{' '}\r\n          </label>\r\n          <span className='server_status'></span>\r\n          <input\r\n            id='inputServerIP'\r\n            type='text'\r\n            className='debug_text_input warning_message'\r\n            value={this.state.ip}\r\n            onChange={this.handler_IPOnChange}\r\n          />\r\n          <button\r\n            className='debug_button'\r\n            onClick={this.handler_useThisCompAsServer}\r\n          >\r\n            {' '}\r\n            📡{' '}\r\n          </button>\r\n        </div>\r\n\r\n\r\n        <div\r\n          style={{ width: '100%', height: '100%' }}\r\n          onClick={this.helper_toggleHideDebug}\r\n        >\r\n          <img className='chevron top-chevron' src={up_chevron}></img>\r\n          <div style={{height: '0.3em'}}></div>\r\n        </div>\r\n\r\n        {/* <button className='debug_button' onClick={this.admin_refreshAll}>\r\n          Refresh All\r\n        </button> */}\r\n\r\n        <button\r\n          onClick={this.disp_showFileSavedMessage}\r\n          id='showSavedFilesBtn'\r\n          className='hidden_button'\r\n        ></button>\r\n\r\n        {/* <pre hidden={this.state.numCams === 8}>\r\n          debug mode, remember to change num cams back to 8\r\n        </pre> */}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // * UTILITY * //\r\n  readTextFile(file, stateName) {\r\n    fetch(file)\r\n      .then(response => response.text())\r\n      .then(text => {\r\n        if (stateName === 'data') {\r\n          this.setState({ data: text.split('\\n') }, () => {\r\n            let currSentence = qs('sentence_index')\r\n              ? this.state.data[Number(qs('sentence_index'))]\r\n              : this.state.data[0];\r\n            this.setState({ currSentence }, () => {\r\n              // console.log(this.state.curr_sentence)\r\n            });\r\n            this.setState({\r\n              totalWords: this.state.data.reduce(\r\n                (sum, sentence) => sum + sentence.length,\r\n                0\r\n              )\r\n            });\r\n          });\r\n        } else {\r\n          this.setState({ pinyin: text.split('\\n') })\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * * UPDATE *\r\n   *\r\n   */\r\n  updateFilesSaved = numFiles => {\r\n    const successMessage =\r\n      numFiles % this.state.requiredNumCams === 0\r\n        ? ' (successful)'\r\n        : ' (not all saved)';\r\n    this.setState({\r\n      numFilesSavedTotal: numFiles\r\n    });\r\n    if (successMessage === ' (successful)') {\r\n      this.updateGreenLightStatus(true);\r\n    }\r\n    try {\r\n      document.getElementById('num_files_saved').innerHTML =\r\n        'Total Files Saved: ' + numFiles + successMessage;\r\n    } catch (NotYetLoadedException) {\r\n      // console.error(NotYetLoadedException);\r\n    }\r\n  };\r\n\r\n  handler_useThisCompAsServer = () => {\r\n    ip_util.clientGetIP(ip => {\r\n      console.log(ip);\r\n      if (ip.split('.').length === 4) {\r\n        ip = 'http://' + ip + ':5000';\r\n        cogoToast.loading(ip, {\r\n          position: 'top-right',\r\n          hideAfter: 3,\r\n          onClick: hide => {\r\n            hide();\r\n          }\r\n        });\r\n        this.helper_setServerIP(ip);\r\n        // if (!this.hideServerOfflineRef) {\r\n        //   this.hideServerOfflineRef = this.helper_showServerNotOnline();\r\n        // } else {\r\n        //   this.hideServerOfflineRef();\r\n        // }\r\n      }\r\n    });\r\n    // const [ip_v6, ip_v4] = [temp[0], temp[1]]\r\n    // console.log(ip_v4);\r\n  };\r\n\r\n  handler_IPOnChange = e => {\r\n    this.setState({ ip: e.target.value });\r\n  };\r\n\r\n  debugCogoToastOnRef = undefined;\r\n  debugCogoToastOffRef = undefined;\r\n  \r\n  showDebugOn = () => {\r\n    return cogoToast.success(<p>Debug on. <br/>Required Cams: 1</p>, { hideAfter: 1, onClick: hide => hide() });\r\n  }\r\n\r\n  showDebugOff = () => {\r\n    return cogoToast.warn(<p>Debug off. <br/>Required Cams: 8</p>, { hideAfter: 1, onClick: hide => hide() });\r\n  }\r\n\r\n  handler_debugToggle = debugMode => {\r\n    console.log('toggling debug mode');\r\n    this.setState({ debugMode }, () => {\r\n      if (debugMode) {\r\n        this.setState({ requiredNumCams: 1 });\r\n        this.debugCogoToastOnRef = this.showDebugOn();\r\n        {/* if (this.debugCogoToastOffRef) {this.debugCogoToastOffRef()} */}\r\n        {/* console.log(this.debugCogoToastOffRef); */}\r\n        {/* this.helper_removeHoverEventListeners(); */}\r\n      } else {\r\n        this.setState({ requiredNumCams: 8 });\r\n        this.debugCogoToastOffRef = this.showDebugOff();\r\n        {/* if (this.debugCogoToastOnRef) {this.debugCogoToastOnRef()} */}\r\n        {/* console.log(this.debugCogoToastOnRef); */}\r\n\r\n        // this.helper_addHoverEventListeners();\r\n        this.handler_hoverMouseOutBottom();\r\n      }\r\n    });\r\n  };\r\n\r\n  handler_fileSaveSuccess = numFiles => {\r\n    this.updateFilesSaved(numFiles);\r\n    this.setState(\r\n      {\r\n        numFilesSavedInd: this.state.numFilesSavedInd + 1\r\n      },\r\n      () => {\r\n        {/* console.log('this occured: ' + this.state.numFilesSavedInd + ' times.'); */}\r\n        if (this.state.numFilesSavedInd === this.state.requiredNumCams) {\r\n          {\r\n            /* console.log('correct number of files saved'); */ }\r\n          try {\r\n            document.getElementById('showSavedFilesBtn').click();\r\n            document.getElementById('showSavedFilesBtn').disabled = true;\r\n            this.setState({\r\n                numFilesSavedInd: 0\r\n              },\r\n              () => {\r\n                cogoToast.success(\r\n                  this.style_makeEmojiToastLayout(\r\n                    ['视频已成功保存', '可继续录'],\r\n                    '🔥'\r\n                  ), {\r\n                    hideAfter: 1,\r\n                    onClick: hide => {\r\n                      hide();\r\n                    }\r\n                  }\r\n                );\r\n              }\r\n            );\r\n\r\n            this.updateGreenLightStatus(true);\r\n          } catch (Exception) {\r\n            console.error(Exception);\r\n          }\r\n        }\r\n        try {\r\n          document.getElementById('testerNextBtn').disabled = true;\r\n        } catch (NotYetLoadedException) {\r\n          //\r\n        }\r\n        \r\n      }\r\n    );\r\n  };\r\n\r\n  updateDetectedNumCams = detectedNumCams => {\r\n    this.setState({ detectedNumCams });\r\n    this.state.socket.emit('client: updateTotalCams', () => [this.state.computerID, detectedNumCams]);\r\n    this.updateGreenLightStatus(true);\r\n    if (this.showNoCamsRef) {this.showNoCamsRef();}\r\n    try {\r\n      document.getElementsByClassName('debug_sm_input')[0].className +=\r\n        this.state.detectedNumCams > 0 ? ' serverPlaceholderConnected' : '';\r\n      document\r\n        .getElementById('numCamsInput')\r\n        .classList.remove('warning_message');\r\n    } catch (NotYetLoadedException) {\r\n      //\r\n    }\r\n  };\r\n\r\n  /**\r\n   * * UPDATE *\r\n   * Updates the state computerID with param id\r\n   * @param {string} id\r\n   */\r\n  updateCompID = id => {\r\n    const status = {};\r\n    this.setState({ computerID: id });\r\n    status[this.state.computerID] = [];\r\n    this.setState({ computerStatus: status }, () => {\r\n      // console.log(\"init computer status\", this.state.computerStatus);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * * STYLE *\r\n   * Takes a string and finds a substring and returns a stylized version of it,\r\n   * specifically to add the 🖥 icon in front of the ID.\r\n   * @param {string} str The full string\r\n   * @param {string} find The particular substring to find\r\n   * @returns {string} The stylized string\r\n   */\r\n  style_addThisCpuIcon = (str, find) => {\r\n    var re = new RegExp(find, 'g');\r\n    return str.replace(re, '🖥: ' + find);\r\n  };\r\n\r\n  style_makeEmojiToastLayout = (msg, emoji) => {\r\n    return (\r\n      <div className='cogo-toast'>\r\n        <div className='cogo-toast-emoji-left'> {emoji}</div>\r\n        <div>\r\n          {msg[0]}\r\n          <br />\r\n          {msg[1]}\r\n        </div>\r\n        <div className='cogo-toast-emoji-right'> {emoji}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  ref_hideLoader = undefined;\r\n  disp_showFileSavingLoader = () => {\r\n    this.ref_hideLoader = cogoToast.loading(\r\n      this.style_makeEmojiToastLayout(['视频正在保存', '请耐心等待'], '⌛️'),\r\n      {\r\n        hideAfter: 0,\r\n        onClick: hide => {\r\n          hide();\r\n        }\r\n      }\r\n    );\r\n    // setTimeout(hideLoader, 2000);\r\n    // hideLoader();\r\n    // this.setState({ hideLoader }, () => {\r\n    //   console.log(hideLoader);\r\n    // });\r\n  };\r\n\r\n\r\n  /**\r\n   * Hides file saved loader\r\n   */\r\n  disp_showFileSavedMessage = () => {\r\n    try {\r\n      this.ref_hideLoader();\r\n    } catch (NotOnPageError) {\r\n      //\r\n    }\r\n  };\r\n\r\n  disp_showServerConencted = () => {\r\n    cogoToast.success('Server is online.', {\r\n      position: 'top-right',\r\n      hideAfter: 0,\r\n      onClick: hide => {\r\n        hide();\r\n      }\r\n    });\r\n    if (this.hideServerOfflineRef) this.hideServerOfflineRef();\r\n    try {\r\n      document\r\n        .getElementsByClassName('server_status')[0]\r\n        .classList.add('server_online');\r\n      document\r\n        .getElementById('inputServerIP')\r\n        .classList.add('serverPlaceholderConnected');\r\n      document\r\n        .getElementById('inputServerIP')\r\n        .classList.remove('warning_message');\r\n    } catch (NotYetLoadedException) {\r\n      //\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Socket Listeners — adds socket listeners to the page to respond to \r\n   * messages sent from server\r\n   */\r\n  initSocketListeners = () => {\r\n    this.state.socket.on('server: set random', data=> {\r\n      if (this.getRandom() != data) {\r\n        this.setRandom(data);\r\n      }\r\n    });\r\n    this.state.socket.on('server: online', () => {\r\n      {/* console.log('did this happen?') */}\r\n      {/* if (useMediaQuery({ minWidth: 768 })) { */}\r\n        this.disp_showServerConencted();\r\n      {/* } */}\r\n    });\r\n\r\n    this.state.socket.on('server: sync name, sentence index', data => {\r\n      const name = data.name;\r\n      const currSentenceIndex = data.currSentenceIndex;\r\n      {/* if (this.state.currSentenceIndex === 0 ) { */}\r\n      this.setState({name, currSentenceIndex});\r\n      {/* } */}\r\n    })\r\n\r\n    if (!this.hideServerOfflineRef) {\r\n      this.hideServerOfflineRef = this.helper_showServerNotOnline();\r\n    } else {\r\n      this.hideServerOfflineRef();\r\n    }\r\n\r\n    this.state.socket.on('server: disconnected', () => {\r\n      this.setState({ connectedToServer: false }, () => {\r\n        document\r\n          .getElementsByClassName('server_status')[0]\r\n          .classList.remove('server_online');\r\n        document\r\n          .getElementById('inputServerIP')\r\n          .classList.remove('serverPlaceholderConnected');\r\n      });\r\n    });\r\n\r\n    this.state.socket.on('server: connected', computerID => {\r\n      {/* console.log('detected server connected'); */}\r\n      {/* if (useMediaQuery({ minWidth: 768 })) { */}\r\n        this.disp_showServerConencted();\r\n      {/* } */}\r\n      \r\n      this.setState({ connectedToServer: true, computerID }, () => {\r\n        try {\r\n          document\r\n            .getElementById('inputServerIP')\r\n            .classList.add('serverPlaceholderConnected');\r\n        } catch(NotYetLoadedException) {\r\n          //\r\n        }\r\n      });\r\n    });\r\n\r\n    this.state.socket.on('server: connected sync id', id => {\r\n      if (this.updateCompID) this.updateCompID(id);\r\n      this.updateCompID = null;\r\n    });\r\n\r\n    this.state.socket.on('server: reset cams', () => {\r\n      this.updateGreenLightStatus(true);\r\n    });\r\n\r\n    this.state.socket.on('server: response for connection status', status => {\r\n      try {\r\n        document.getElementById(\r\n          'connection_status'\r\n        ).innerHTML = this.style_addThisCpuIcon(\r\n          JSON.stringify(status, null, 2),\r\n          this.state.computerID\r\n        );\r\n      } catch (NotOnPageError) {\r\n        //\r\n      }\r\n    });\r\n\r\n    this.state.socket.on('server: response for progress', progress => {\r\n      this.setState({ recordProgress: progress ? progress : 0 });\r\n    });\r\n\r\n    this.state.socket.on('server: response for numFilesSaved', numFiles => {\r\n      this.updateFilesSaved(numFiles);\r\n    });\r\n\r\n    this.state.socket.on('server: save files successful', numFiles => {\r\n      this.handler_fileSaveSuccess(numFiles);\r\n    });\r\n\r\n    this.state.socket.on('server: computer connected order', connectedOrder => {\r\n      this.setState({\r\n        connectedOrderMap: update(this.state.connectedOrderMap, {\r\n          $merge: connectedOrder\r\n        })\r\n      });\r\n    });\r\n\r\n    const refreshRates = [0, 666, 1332];\r\n    this.state.socket.on('server: refresh all', () => {\r\n      const conectedOrderNum = this.state.connectedOrderMap[\r\n        this.state.computerID\r\n      ];\r\n      const indexRefresh = conectedOrderNum % 3;\r\n      const time = refreshRates[indexRefresh];\r\n      setTimeout(() => {\r\n        window.location.reload(false);\r\n      }, time);\r\n    });\r\n  };\r\n\r\n  async pingServer() {\r\n    try {\r\n      const serverID = this.state.socket.io.opts.hostname;\r\n      const response = await fetch(serverID, { mode: 'no-cors' });\r\n      if (!response.ok) {\r\n        console.error('no response from server');\r\n      } else {\r\n        console.log('connection successful');\r\n      }\r\n    } catch (ServerPingFailedException) {\r\n      console.error(ServerPingFailedException);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * **Update: Sentence**\r\n   * Sent as a prop to components to update app-level state of\r\n   * curr_sentence_index, and updates server with new index. It also updates\r\n   * url query without refreshing to reflect current index.\r\n   * @param {string} curr_sentence\r\n   */\r\n  updateSentence = currSentence => {\r\n    if (currSentence === '$next') {\r\n      this.setState(\r\n        { currSentenceIndex: this.state.currSentenceIndex + 1 },\r\n        () => {\r\n          this.updateSentence(this.state.data[this.state.currSentenceIndex]);\r\n          this.state.socket.emit('client: update sentence_index', {\r\n            name: qs('name'),\r\n            currSentenceIndex: this.state.currSentenceIndex\r\n          });\r\n        }\r\n      );\r\n    } else if (currSentence === '$prev') {\r\n      this.setState(\r\n        {\r\n          currSentenceIndex: Math.max(this.state.currSentenceIndex - 1, 0)\r\n        },\r\n        () => {\r\n          this.updateSentence(this.state.data[this.state.currSentenceIndex]);\r\n          this.state.socket.emit('client: update sentence_index', {\r\n            name: qs('name'),\r\n            currSentenceIndex: this.state.currSentenceIndex\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      window.history.pushState(\r\n        null,\r\n        null,\r\n        '?name=' +\r\n          qs('name') +\r\n          '&sentence_index=' +\r\n          this.state.currSentenceIndex\r\n      );\r\n      // console.log(curr_sentence);\r\n      this.setState({\r\n        currSentence,\r\n        currPageInTable:\r\n          Math.floor(\r\n            Number(this.state.currSentenceIndex) / this.state.sentencesPerPageInTable\r\n          ) + 1\r\n      });\r\n    }\r\n  };\r\n\r\n  updatePage = new_page => {\r\n    if (new_page === 0) {\r\n      // do nothing\r\n    }\r\n    console.log('update page', new_page);\r\n    this.setState({\r\n      currPageInTable: new_page >= 1 ? new_page : 1\r\n    });\r\n  };\r\n\r\n  updateRecordProgress = currSentenceIndex => {\r\n    // { <sentence_index> : <bool: recorded/not> }\r\n    this.setState(\r\n      {\r\n        recordProgress: currSentenceIndex\r\n      },\r\n      () => {\r\n        this.state.socket.emit(\r\n          'client: update recording progress',\r\n          currSentenceIndex\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  updateConnectionStatus = recordingStatus => {\r\n    if (this.state.computerStatus[this.state.computerID]) {\r\n      const status = {};\r\n      status[this.state.computerID] = recordingStatus;\r\n      this.setState({ computerStatus: status }, () => {});\r\n      this.state.socket.emit('client: update recording status', status);\r\n    }\r\n    this.getStatus();\r\n  };\r\n\r\n  updateGreenLightStatus = bool => {\r\n    this.setState({ recordGreenLight: bool });\r\n  };\r\n\r\n  updateTotalTime = time => {\r\n    this.setState({ totalTime: time });\r\n  };\r\n\r\n  getStatus = () => {\r\n    this.state.socket.emit('client: ping for connection status');\r\n    this.state.socket.emit('client: ping for numFilesSaved');\r\n    this.state.socket.emit('client: ping for progress');\r\n  };\r\n\r\n  admin_resetCams = () => {\r\n    // cogoToast.info('Adding Cam', {hideAfter: 1})\r\n    // this.state.socket.emit('client: stop cams');\r\n    // this.updateGreenLightStatus(true);\r\n    this.state.socket.emit('client: reset cams');\r\n    try {\r\n      document.getElementById('addCamBtn').click();\r\n    } catch (NotYetLoadedException) {\r\n      //\r\n    }\r\n    this.state.socket.emit('client: dummy vid, do not save');\r\n    // cogoToast.info('Cams are reset', { hideAfter: 0.3 });\r\n    // setTimeout(() => document.getElementById('resetCamsBtn').classList.remove('btn-active'), 1000);\r\n  };\r\n\r\n  admin_refreshAll = () => {\r\n    this.state.socket.emit('client: refresh all');\r\n  };\r\n\r\n  admin_resetProgress = () => {\r\n    this.state.socket.emit('client: update recording progress', 0);\r\n    this.state.socket.emit('client: delete total time');\r\n    this.state.socket.emit('client: reset total files');\r\n    this.state.socket.emit('client: save total start time', new Date());\r\n    window.location = window.location.origin + window.location.pathname;\r\n    this.state.socket.emit('client: save total time', [0, 0, 0]);\r\n  };\r\n\r\n  helper_emitInitialSocketMessages = () => {\r\n    if (!this.helper_checkIfMobileView) {\r\n      this.state.socket.emit('client: update sentence_index', {\r\n        name: qs('name'),\r\n        currSentenceIndex: this.state.currSentenceIndex\r\n      });\r\n    } else {\r\n      this.state.socket.emit('client: ask for recording status');\r\n    }\r\n    this.state.socket.emit('client: check for progress');\r\n    this.state.socket.emit('client: ask for sync id');\r\n  };\r\n\r\n  helper_toggleModal = id => {\r\n    document.getElementById(id).click();\r\n  };\r\n\r\n  helper_checkIfMobileView = () => {\r\n    return window.location.href.includes('mobile');\r\n  };\r\n\r\n  helper_showNoCamsConnected = () => {\r\n    return cogoToast.warn('No Webcams', {\r\n      hideAfter: 0,\r\n      position: 'top-left',\r\n      onClick: this.admin_resetCams\r\n    });\r\n  };\r\n\r\n  helper_showServerNotOnline = () => {\r\n    {/* console.log('no server'); */}\r\n    return cogoToast.warn('Server is offline', {\r\n      hideAfter: 0,\r\n      position: 'top-right',\r\n      onClick: hide => {\r\n        this.handler_useThisCompAsServer();\r\n        hide();\r\n      }\r\n    });\r\n  };\r\n\r\n  helper_setServerIP = ip => {\r\n    this.state.socket.disconnect();\r\n    try {\r\n      document\r\n        .getElementsByClassName('server_status')[0]\r\n        .classList.remove('server_online');\r\n      document\r\n        .getElementById('inputServerIP')\r\n        .classList.remove('serverPlaceholderConnected');\r\n    } catch (NotYetLoadedException) {\r\n      //\r\n    }\r\n    this.setState({\r\n      socket: io(ip),\r\n      ip: ip\r\n    });\r\n    this.state.socket.emit('client: check server connection');\r\n    // if (hideLoadServer) {hideLoadServer()}\r\n    setTimeout(() => {\r\n      if (\r\n        !document\r\n          .getElementsByClassName('server_status')[0]\r\n          .className.includes('server_online')\r\n      ) {\r\n        this.hideServerOfflineRef = this.helper_showServerNotOnline();\r\n      }\r\n    }, 3000);\r\n    this.initSocketListeners();\r\n  };\r\n\r\n  helper_addHoverEventListeners = () => {\r\n    const debugHoverArea = document.getElementById('debug_hover_area');\r\n    const bottomHoverArea = document.getElementById('bottom_hover_area');\r\n    debugHoverArea.addEventListener(\r\n      'mouseout',\r\n      this.handler_hoverMouseOutDebug\r\n    );\r\n    debugHoverArea.addEventListener(\r\n      'mouseover',\r\n      this.handler_hoverMouseOverDebug\r\n    );\r\n    bottomHoverArea.addEventListener(\r\n      'mouseout',\r\n      this.handler_hoverMouseOutBottom\r\n    );\r\n    bottomHoverArea.addEventListener(\r\n      'mouseover',\r\n      this.handler_hoverMouseOverBottom\r\n    );\r\n  };\r\n\r\n  helper_removeHoverEventListeners = () => {\r\n    const debugHoverArea = document.getElementById('debug_hover_area');\r\n    const bottomHoverArea = document.getElementById('bottom_hover_area');\r\n    debugHoverArea.removeEventListener(\r\n      'mouseout',\r\n      this.handler_hoverMouseOutDebug\r\n    );\r\n    debugHoverArea.removeEventListener(\r\n      'mouseover',\r\n      this.handler_hoverMouseOverDebug\r\n    );\r\n    bottomHoverArea.removeEventListener(\r\n      'mouseout',\r\n      this.handler_hoverMouseOutBottom\r\n    );\r\n    bottomHoverArea.removeEventListener(\r\n      'mouseover',\r\n      this.handler_hoverMouseOverBottom\r\n    );\r\n    this.handler_hoverMouseOverBottom();\r\n  };\r\n\r\n  helper_toggleHideDebug = () => {\r\n    {/* console.log('toggling'); */}\r\n    try {\r\n      if (\r\n        document\r\n          .getElementsByClassName('debug-group')[0]\r\n          .className.includes('hideDebug')\r\n      ) {\r\n        this.handler_hoverMouseOverDebug();\r\n      } else {\r\n        this.handler_hoverMouseOutDebug();\r\n      }\r\n    } catch (NotYetLoadedException) {\r\n      //\r\n    }\r\n  };\r\n\r\n  helper_toggleHideBottom = () => {\r\n    console.log('toggling hide bottom');\r\n    try {\r\n      if (\r\n        document\r\n          .getElementsByClassName('panel_BG')[0]\r\n          .className.includes('hideBottom')\r\n      ) {\r\n        this.handler_hoverMouseOverBottom();\r\n      } else {\r\n        this.handler_hoverMouseOutBottom();\r\n      }\r\n    } catch (NotYetLoadedException) {\r\n      //\r\n    }\r\n  };\r\n\r\n  helper_toggleCamState = () => {\r\n    this.setState({ addCamState: !this.state.addCamState });\r\n  };\r\n\r\n  handler_keyup() {\r\n    for (const btn of document.getElementsByClassName('debug_button')) {\r\n      btn.classList.remove('btn-active');\r\n    }\r\n  }\r\n\r\n  handler_keydown = event => {\r\n    let key = event.key;\r\n    const inputServerIP = document.getElementById('inputServerIP');\r\n\r\n    if (\r\n      [' ', 'ArrowLeft', 'ArrowRight', 'Escape', 'Enter', 's'].includes(key)\r\n    ) {\r\n      try {\r\n        if (key === ' ') {\r\n          document.getElementById('testerRecordBtn').click();\r\n          event.preventDefault();\r\n        } else if (key === 'ArrowLeft') {\r\n          if (document.activeElement !== inputServerIP) {\r\n            document.getElementById('testerPrevBtn').click();\r\n            event.preventDefault();\r\n          }\r\n        } else if (key === 'ArrowRight') {\r\n          if (document.activeElement !== inputServerIP) {\r\n            document.getElementById('testerNextBtn').click();\r\n            event.preventDefault();\r\n          }\r\n        } else if (key === 'Escape') {\r\n          document.getElementById('resetCamsBtn').click();\r\n          event.preventDefault();\r\n        } else if (key === 'Enter') {\r\n          console.log('detected enter key');\r\n          if (document.getElementsByClassName('modali-button-destructive')[0]) {\r\n            document\r\n              .getElementsByClassName('modali-button-destructive')[0]\r\n              .click();\r\n            this.admin_resetProgress();\r\n          }\r\n          if (document.activeElement === inputServerIP) {\r\n            this.helper_setServerIP(inputServerIP.value);\r\n            cogoToast.info('Updated IP: ' + inputServerIP.value, {\r\n              onClick: hide => {\r\n                hide();\r\n              }\r\n            });\r\n            event.preventDefault();\r\n          }\r\n        } else if (key === 's') {\r\n          {/* if (document.activeElement.nodeName.toLowerCase() !== 'input') */}\r\n            {/* this.helper_toggleModal('overallStatus'); */}\r\n        }\r\n      } catch (NotYetLoadedException) {\r\n        // console.error(NotYetLoadedException);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App.js';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/collapse-chevron.f7659f72.svg\";","module.exports = __webpack_public_path__ + \"static/media/expand-chevron.bab69e8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/beg.26ab4fd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/end.782b7486.svg\";","const os = require('os');\r\nconst ifaces = os.networkInterfaces();\r\n\r\nconst nodeGetIP = () => {\r\n  let address = undefined;\r\n  Object.keys(ifaces).forEach(function (ifname) {\r\n    ifaces[ifname].forEach(function (iface) {\r\n      if ('IPv4' !== iface.family || iface.internal !== false) {\r\n        // skip over internal (i.e. 127.0.0.1) and non-ipv4 addresses\r\n        return;\r\n      }\r\n      if (ifname === 'en0') {\r\n        address = iface.address;\r\n      }\r\n    });\r\n  });\r\n  console.log(address);\r\n  return address;\r\n}\r\n\r\nconst clientGetIP = onNewIP => { //  onNewIp - your listener function for new IPs\r\n  var myPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection; //compatibility for firefox and chrome\r\n  var pc = new myPeerConnection({\r\n      iceServers: []\r\n    }),\r\n    noop = function () {},\r\n    localIPs = {},\r\n    ipRegex = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/g;\r\n\r\n  function ipIterate(ip) {\r\n    if (!localIPs[ip]) onNewIP(ip);\r\n    localIPs[ip] = true;\r\n  }\r\n  pc.createDataChannel(\"\"); //create a bogus data channel\r\n  pc.createOffer(function (sdp) {\r\n    sdp.sdp.split('\\n').forEach(function (line) {\r\n      if (line.indexOf('candidate') < 0) return;\r\n      line.match(ipRegex).forEach(ipIterate);\r\n    });\r\n    pc.setLocalDescription(sdp, noop, noop);\r\n  }, noop); // create offer and set local description\r\n  pc.onicecandidate = function (ice) { //listen for candidate events\r\n    if (!ice || !ice.candidate || !ice.candidate.candidate || !ice.candidate.candidate.match(ipRegex)) return;\r\n    ice.candidate.candidate.match(ipRegex).forEach(ipIterate);\r\n  };\r\n}\r\n\r\nmodule.exports = {\r\n  nodeGetIP,\r\n  clientGetIP\r\n}","module.exports = __webpack_public_path__ + \"static/media/up-chevron.2c8a940e.svg\";","module.exports = __webpack_public_path__ + \"static/media/down-chevron.8bbb95c1.svg\";"],"sourceRoot":""}