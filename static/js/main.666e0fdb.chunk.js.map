{"version":3,"sources":["utils/qs.js","components/Webcam/Webcam.js","components/CameraList/CameraList.js","components/NameField/NameField.js","components/Tester/InProcessScreen.js","components/Timer.js","components/Tester/Tester.js","components/Table/TableHeader.js","components/Table/TableRow.js","components/Table/TableData.js","components/Table/PageNum.js","components/Table/PageInput.js","components/Table/TableFooter.js","components/Table/Table.js","components/Table/DataCollection.js","components/Modal.js","app/App.js","index.js","assets/svg/collapse-chevron.svg","assets/svg/expand-chevron.svg","assets/svg/beg.svg","assets/svg/end.svg","assets/data/sentences-english-test.txt"],"names":["qs","id","parsedUrl","URL","window","location","href","searchParams","has","get","Webcam","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isRecording","recorder","videoSrc","videoEle","startTime","video","React","createRef","today","Date","getFullYear","getMonth","getDate","getTime","react_default","a","createElement","className","onClick","startRecording","controls","autoPlay","playsInline","muted","ref","props","videoRef","name","Component","matchedDeviceList","e202102a3710910e7bec39e5617309c7cd746457bad4cefb974db56703f624be","53e6d1ce5c5155dc835b0670f16924f80b83ef8ab924d56594e743fe8fef9707","d2f9c06f0fd3c971c33d50d07ada0cf61bd63812c004d948adaaa15c964c94c9","b2a6f55d31cda49fe87a1a87dca3eb2939d20b77505d73c5942b3880b18a48bf","8199fe2c373a8d4456b04e311ed7f98670411c182974def4fd81249e47665de4","bcb109e5b537b4b8519fc10797c86d313a22480d194f6b44477aaa45a27c7876","f80598a32e03e00858cc7591ff533d205d6e768177d1ab04a3c449b2bd954a08","bebf6b071073727465bb5001223af255af8fa788fbf897aa781a9a7d66ee3222","a37d9289204bc3893f687e01228f2be6021809752a116d8c3ab0a6f76dc2f844","bef0b109c5c3c0bc4bc2d2ed22cfe768c9a11b7b7e29d540ede820c0a6472355","fe81f26ea9b062d5fe9573c26a13469b6e7c05b6d7293b144e2d11e1020c0444","CameraList","_useState","useState","_useState2","slicedToArray","availableCams","setAvailableCams","_useState3","_useState4","recordingStatus","setRecordingStatus","initCams","navigator","mediaDevices","enumerateDevices","then","devices","videodevices","map","device","kind","videoDevice","camera_info","deviceId","label","groupId","mic_info","console","error","push","helper_addToVideoDevices","document","getElementById","click","disabled","catch","err","log","message","initCamsDummy","stopAllCams","startAllCams","temp","cam","getUserMedia","audio","exact","frameRate","ideal","width","height","camera","RecordRTC","recorderType","MediaStreamRecorder","type","desiredSampRate","numberOfAudioChannels","disableLogs","getState","current","srcObject","triggerRecordStatusUpdate","dummy","stopRecording","blob","getBlob","socket","emit","sentence_index","camera_id","substring","updateConnectionStatus","resumeAllCams","resumeRecording","useEffect","on","comp_camsList","components_Webcam_Webcam","key","debug","debugControls","renderCams","NameField","saveName","e","value","url_state","history","pushState","updateTesterContents","updateGreenLightStatus","detectEnter","which","placeholder","onKeyPress","InProcessScreen","recording","setRecordState","done_recording","setDoneRecording","_useState5","_useState6","reset_state","reset","_useState7","_useState8","nameSet","setName","updateSentence","data","getRecordState","cogoToast","loading","hideAfter","stopTimer","curr_sentence_index","updateRecordProgress","markSentenceAsDone","record","startTimer","displaySentenceToBeRead","recordedYet","recordedProgress","Exception","disableNextButtonIfCurrNotRead","recordedMessage","sentence","curr_sentence","recordGreenLight","numFilesSaved","numCams","text","data_length","NameField_NameField_NameField","getContents","Timer","undefined","intervalID","setIntervalID","totalTime","saveTotalTime","event","preventDefault","returnValue","addEventListener","time","setInterval","hour","min","sec","innerHTML","slice","SomeError","createInterval","Tester","clearInterval","comp_totalTimer","comp_progressBar","hidden","TableHeader","TableRow","getClassOfRowItem","read","index","TableData","updateDataOnPageChange","_this2","page","curr_page","max_per_page","beg","end","rowItems","i","TableRow_TableRow","PageNum","selected","updatePage","num","PageInput","handleChange","Number","target","handleSubmit","onSubmit","htmlFor","onChange","TableFooter","page_num","mid_point","Math","floor","max_page","total_data","toFixed","nums_list","Array","from","x","PageNum_PageNum","PageInput_PageInput","src","alt","prev","next","Table","TableHeader_TableHeader","TableData_TableData","TableFooter_TableFooter","length","DataCollection","Table_Table_Table","Modal","_useModali","useModali","animated","title","buttons","dist_default","Button","buttonCancel","isStyleCancel","toggleCompleteModal","buttonConfirm","isStyleDestructive","confirmFunc","toast","info","_useModali2","completeModal","onLoadFunc","getElementsByClassName","NotYetLoadedException","style","modalID","App","socket_getSetCompID","status","setState","computerID","computerStatus","boldString","str","find","re","RegExp","replace","socket_updateConnectionStatus","JSON","stringify","showFileSavedMessage","success","initSocketListeners","NotOnPageError","progress","keys","numFiles","helper_updateFilesSaved","numFilesSavedInd","helper_checkIfMobileView","connectedOrder","connectedOrderMap","update","$merge","refreshRates","conectedOrderNum","setTimeout","reload","successMessage","numFilesSavedTotal","alert","max","per_page","new_page","sentence_obj","getStatus","comp_dataCollection","DataCollection_DataCollection","updateName","bool","comp_tester","components_Tester_Tester","first_sentence","comp_userResearchHeader","resetCams","refreshAll","comp_cameraList","CameraList_CameraList","toggleModal","includes","comp_overallStatusContent","comp_modals","comp_debug","margin","textAlign","desktopView","mobileView","curr_index","file","fetch","response","split","serverID","io","opts","hostname","mode","ok","_context","t0","readTextFile","sentences","pingServer","downHandler","removeEventListener","curr","total","align","strokeWidth","percent","alignmentStyle","es","trailWidth","strokeColor","trailColor","react_router_dom","react_router","path","component","ReactDOM","render","src_app_App","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.666e0fdb.chunk.js","sourcesContent":["// let qs = (function (a) {\n//   console.log(\"in qs:\" + window.location.href)\n//   if (a === \"\") return {};\n//   var b = {};\n//   for (var i = 0; i < a.length; ++i) {\n//     var p = a[i].split('=', 2);\n//     if (p.length === 1)\n//       b[p[0]] = \"\";\n//     else\n//       b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\n//   }\n//   return b;\n// })(window.location.search.substr(1).split('&'));\n\nlet qs = function(id) {\n  let parsedUrl = new URL(window.location.href);\n  if (parsedUrl.searchParams.has(id)) {\n    return parsedUrl.searchParams.get(id);\n  } else {\n    return false;\n  }\n}\nexport default qs;","import React from 'react';\nimport './Webcam.scss';\nimport PropTypes from 'prop-types';\n\nclass Webcam extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isRecording: false,\n      recorder: null,\n      videoSrc: null,\n      videoEle: null,\n      startTime: 'time',\n    };\n    this.video = React.createRef();\n  }\n  getCurrentTime() {\n    let today = new Date();\n    let date =\n      today.getFullYear() +\n      '-' +\n      (today.getMonth() + 1) +\n      '-' +\n      today.getDate();\n    let time = today.getTime(); //today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    return date + '-' + time;\n  }\n  \n  render() {\n    // console.log(this.props.videoRef);\n    return (\n      <div className='vid_card' onClick={this.startRecording}>\n        <video\n          className='cam'\n          controls\n          autoPlay\n          playsInline\n          muted\n          ref={this.props.videoRef}\n        />\n        <p className='cam_label'>{this.props.name}</p>\n      </div>\n    );\n  }\n}\n\nWebcam.propTypes = {\n  name: PropTypes.string.isRequired,\n  videoRef: PropTypes.object.isRequired\n};\n\nexport default Webcam;\n","/* eslint-disable no-console */\nimport React, { useState, useEffect } from 'react';\n// import sample_cam from '../../assets/svg/sample-cam.svg';\nimport Webcam from '../Webcam/Webcam.js';\nimport RecordRTC, { MediaStreamRecorder } from 'recordrtc';\nimport qs from '../../utils/qs'\n\nimport './CameraList.scss';\nconst matchedDeviceList = {\n  'e202102a3710910e7bec39e5617309c7cd746457bad4cefb974db56703f624be' : '5704662d325421d22cd6ac36a34b0f3bbc122b72826381a3e6963f3ca66021ab',\n  '53e6d1ce5c5155dc835b0670f16924f80b83ef8ab924d56594e743fe8fef9707' : '7ea3a51c084b6ef70972173aec1d541feaa191c1e17410de719d16450137b5b0',\n  'd2f9c06f0fd3c971c33d50d07ada0cf61bd63812c004d948adaaa15c964c94c9' : 'b951f9dcfaa8f2887b629736f230142a9d18b8afc88ae6bd6f3c0946e4fad20f',\n  'b2a6f55d31cda49fe87a1a87dca3eb2939d20b77505d73c5942b3880b18a48bf' : 'dc5ca9d0ff799f2bcc2a2fd131eea5a5307e9616d01de2946d09e73bb887f2a2',\n  '8199fe2c373a8d4456b04e311ed7f98670411c182974def4fd81249e47665de4' : 'e466a62b086d05daadf2afe460d0a207f60cac8613fe82cff45cc6c330a91084',\n  'bcb109e5b537b4b8519fc10797c86d313a22480d194f6b44477aaa45a27c7876' : '1db7be4b7c5815530412e44f8fd7f5f81cddb1ce6f26b8ac2b3e514716247ba6',\n  'f80598a32e03e00858cc7591ff533d205d6e768177d1ab04a3c449b2bd954a08' : '8d742fd8e09d8bca7e53945c6abf2b5149c1cba92e0f743b5975e054ac5ab061',\n  'bebf6b071073727465bb5001223af255af8fa788fbf897aa781a9a7d66ee3222' : '8f8a3a01032c360c96b0f6a8f5770bb43aa07d430d495f35ea46a3af47e079e0',\n  'a37d9289204bc3893f687e01228f2be6021809752a116d8c3ab0a6f76dc2f844' : '785cb91e7331d5d0dddaa04300c767415e0eef26b39ba735aaaccec1e18f9280',\n   'bef0b109c5c3c0bc4bc2d2ed22cfe768c9a11b7b7e29d540ede820c0a6472355' : '81c60d7dcdae0c9b5aec2e716f2d8fc37751ba2d7c7decb44070524c65b7f583',\n   'fe81f26ea9b062d5fe9573c26a13469b6e7c05b6d7293b144e2d11e1020c0444' : 'abdb69a376084814b2927346a721848146b473d16c469f4b164f7777a772fcd2',\n   //'bcb109e5b537b4b8519fc10797c86d313a22480d194f6b44477aaa45a27c7876' : '1db7be4b7c5815530412e44f8fd7f5f81cddb1ce6f26b8ac2b3e514716247ba6',\n   //'f80598a32e03e00858cc7591ff533d205d6e768177d1ab04a3c449b2bd954a08' : '8d742fd8e09d8bca7e53945c6abf2b5149c1cba92e0f743b5975e054ac5ab061',\n   //'bebf6b071073727465bb5001223af255af8fa788fbf897aa781a9a7d66ee3222' : '8f8a3a01032c360c96b0f6a8f5770bb43aa07d430d495f35ea46a3af47e079e0'\n};\n   \n\n\nexport default function CameraList(props) {\n  const [availableCams, setAvailableCams] = useState([]);\n  const [recordingStatus, setRecordingStatus] = useState(\"recording-status-loading...\");\n\n  const helper_addToVideoDevices = (device, videodevices) => {\n    let videoDevice = {\n      camera_info: {\n        id: device.deviceId,\n        label: device.label,\n        groupId: device.groupId\n      },\n      ref: React.createRef(),\n      recorder: null\n    };\n    if (device.deviceId in matchedDeviceList) {\n      videoDevice.mic_info = {\n        id: matchedDeviceList[device.deviceId]\n      };\n    } else {\n      // alert(\"device not match!!!\");\n      console.error('device not match!!!');\n    }\n    videodevices.push(videoDevice);\n  }\n  const initCams = () => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\n      console.log('enumerateDevices() not supported.');\n    } else {\n      navigator.mediaDevices\n        .enumerateDevices()\n        .then(devices => {\n          let videodevices = [];\n          devices.map(function(device) {\n            // console.log('%c ' + device.kind,\n            // 'background: #222; color: #bada55',\n            // device);\n            // console.log(\n            //   device.kind + ': ' + device.label + ' id = ' + device.deviceId + ' group id = ' + device.groupId\n            // );\n            // console.log(device);\n            if (device.kind === 'videoinput') {\n              helper_addToVideoDevices(device, videodevices);\n            }\n            return null;\n          });\n          setAvailableCams(videodevices);\n          document.getElementById('startBtn').click();\n          document.getElementById('startBtn').disabled = true;\n          // console.log('getAvailableDevices success!');\n        })\n        .catch(function(err) {\n          console.log(err.name + ': ' + err.message);\n        });\n    }\n  }\n\n  function useAvailableWebCams() {\n    //  runs once\n    useEffect(() => {\n      props.updateConnectionStatus();\n      initCams();\n    }, []);\n\n  }\n\n  const initCamsDummy = () => {\n    stopAllCams(true);\n  }\n\n  const startAllCams = () => {\n    const temp =\n    recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\n    // goes through all cams array and through each ID, accesses and opens it using navigator\n    availableCams.map(cam => {\n      navigator.mediaDevices\n        .getUserMedia({\n          audio: {\n            deviceId: {exact: (cam.mic_info) ? cam.mic_info.id : 'default'}\n          },\n          video: {\n            frameRate: {exact: 30, ideal: 30},\n            width: {ideal: 1920},\n            height: {ideal: 1080},\n            deviceId: cam['camera_info'].id\n          }\n        })\n        .then(camera => {\n          // console.log(camera.getTracks().forEach(track=> {console.log(\"track:\" + track.label + \",\" + track.kind)}));\n          // console.log(\"////////////////////////\");\n          let recorder = RecordRTC(camera, {\n            recorderType: MediaStreamRecorder, //WebAssemblyRecorder,\n            type: 'video',\n            frameRate: 30,\n            desiredSampRate: 16000,\n            width: 1920,\n            height: 1080,\n            numberOfAudioChannels: 2,\n            disableLogs: true\n          });\n          if (recorder.getState() !== 'recording') {\n            recorder.camera = camera;\n            cam['recorder'] = recorder;\n            let video = cam['ref'];\n            video.current.srcObject = camera;\n            // resetInitialCams(recorder);\n            recorder.startRecording();\n          }\n          triggerRecordStatusUpdate(temp, recorder, cam);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n        return availableCams;\n    });\n  };\n\n  const stopAllCams = (dummy) => {\n    const temp =\n      recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\n    availableCams.map(cam => {\n      let recorder = cam['recorder'];\n      if (recorder !== null) {\n        recorder.stopRecording(() => {\n          let blob = recorder.getBlob();\n          console.log(\n            '%c recorded data',\n            'background: #222; color: #bada55',\n            blob\n          );\n          console.log('beep beep boop boop', dummy)\n          if (dummy !== true) {\n            props.socket.emit('client: save data', {\n              name: qs(\"name\"),\n              sentence_index: qs(\"sentence_index\"),\n              camera_id: cam['camera_info'].id,\n              blob: blob\n            });\n          } else {\n            console.log('dummy received, did not save blob');\n          }\n\n        });\n        triggerRecordStatusUpdate(temp, recorder, cam);\n      }\n      return availableCams;\n    });\n  };\n\n  const triggerRecordStatusUpdate = (temp, recorder, cam) => {\n    temp[cam['camera_info'].id.substring(0, 15)] = recorder.getState();\n    setRecordingStatus(temp);\n    props.updateConnectionStatus(temp);\n  }\n\n  const resumeAllCams = () => {\n    const temp =\n      recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\n    availableCams.map(cam => {\n      let recorder = cam['recorder'];\n      let state = recorder.getState();\n      if (state === \"paused\") {\n        recorder.resumeRecording();\n      } else if (state === \"stopped\"){\n        recorder.startRecording();\n      }\n      triggerRecordStatusUpdate(temp, recorder, cam);\n      return availableCams;\n    });\n  }\n\n  useAvailableWebCams();\n\n  // dummy to fix bug of first video\n  props.socket.on('server: dummy vid, do not save', function() {\n    document.getElementById('dummyBtn').click();\n    document.getElementById('dummyBtn').disabled = true;\n  });\n\n  // this is actually what calls start cams\n  props.socket.on('server: start cams', function () {\n    document.getElementById(\"resumeBtn\").click();\n    document.getElementById(\"resumeBtn\").disabled = true;\n    document.getElementById('stopBtn').disabled = false;\n\n  });\n\n  // this is actually what calls stop cams\n  props.socket.on('server: stop cams', function () {\n    document.getElementById('stopBtn').click();\n    document.getElementById('stopBtn').disabled = true;\n    document.getElementById(\"resumeBtn\").disabled = false;\n  });\n\n\n  // let findMatchingAudio = () => {\n  //   availableCams.map(cam => {\n  //     if (!(cam.camera_info.id in matchedDeviceList)) {\n  //       console.log('%c error when find matching audio device',\n  //       'background: #222; color: #f00');\n  //       alert(\"error when find matching audio device\");\n  //       return cam;\n  //     }\n  //     navigator.mediaDevices.enumerateDevices().then(devices => {\n  //       devices.map(device => {\n  //         if (device.kind === 'audioinput' && device.deviceId === matchedDeviceList[cam.camera_info.id]) {\n  //             //device.groupId === cam.camera_info.groupId) {\n  //           cam.mic_info = {id: device.deviceId, label: device.label}\n  //         }\n  //         return device;\n  //       });\n  //     });\n  //     return cam;\n  //   });\n  // }\n\n  const debugControls = (debug) => {\n    if (debug) {\n      return (\n        <div>\n          {/* <p>Don't click these while actual testing</p> */}\n          <button id=\"dummyBtn\" onClick={initCamsDummy}>dummy reset</button>\n          <button id=\"startBtn\" onClick={startAllCams}>start and pause all cams</button>\n          <button id=\"resumeBtn\" onClick={resumeAllCams}>resume all cams</button>\n          <button id=\"stopBtn\" onClick={stopAllCams}>stop all cams</button>\n          {/* <button id=\"setCompID\" onClick={getSetCompID}>get set computer ID</button> */}\n        </div>\n      )\n    }\n  }\n\n\n\n  const renderCams = () => {\n    //findMatchingAudio();\n    // console.log(computerId);\n    const debug = true;\n    const comp_camsList = availableCams.map(cam => {\n      return (\n        <Webcam\n          key={cam['camera_info'].id}\n          name={'ID: ' + cam['camera_info'].id.substring(0, 15)}\n          videoRef={cam['ref']}\n        />\n      );\n    });\n\n\n    return (\n      <div id='camera_list'>\n        {debugControls(debug)}\n        <div>\n          <div className='cameras'>{comp_camsList}</div>\n        </div>\n      </div>\n    );\n  };\n  \n  return renderCams();\n}\n","import React, { Component } from 'react'\nimport './NameField.scss'\nimport PropTypes from 'prop-types';\n\nexport default class NameField extends Component {\n\n  saveName = (e) => {\n    let name = document.getElementById(\"name\").value;\n    // document.location.search = \"name=\" + name + \"&sentence_index=0\";\n    let url_state = '?name=' + name + '&sentence_index=0'\n    window.history.pushState(\n      null,\n      null,\n      url_state\n    );\n    \n    this.props.socket.emit('client: start testing', {\n      name,\n      sentence_index: 0\n    })\n    this.props.socket.emit('client: dummy vid, do not save');\n    this.props.socket.emit('client: update recording progress', {});\n    this.props.updateTesterContents();\n    this.props.updateGreenLightStatus(true);\n    \n  }\n\n  detectEnter = (e) => {\n    if (e.which === 13) {\n      this.saveName(e);\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className='name_input'>\n          <input\n            type='text'\n            name='name'\n            id='name'\n            placeholder='Enter Name'\n            onKeyPress={this.detectEnter}\n          />\n          <br/>\n          <button className=\"btn btn-center\" onClick={this.saveName}>Save Name</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nNameField.propTypes = {\n  socket: PropTypes.object.isRequired,\n  updateTesterContents: PropTypes.func.isRequired,\n  updateGreenLightStatus: PropTypes.func.isRequired,\n};","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport NameField from '../NameField/NameField';\nimport qs from '../../utils/qs';\nimport cogoToast from 'cogo-toast';\n\nexport default function InProcessScreen(props) {\n  const [recording, setRecordState] = useState(false);\n  const [done_recording, setDoneRecording] = useState(false);\n  const [reset_state, reset] = useState(false);\n  const [nameSet, setName] = useState(qs('name'));\n\n  function updateSentence(data) {\n    console.log('update sentence from in process screen')\n    reset(true);\n    props.updateSentence(data);\n  }\n\n  function getRecordState() {\n    if (recording) {\n      return 'Done';\n    } else if (done_recording && !reset_state) {\n      return 'Retry';\n    } else {\n      return 'Record';\n    }\n  }\n\n  function stopRecording() {\n    setDoneRecording(true);\n    setRecordState(false);\n    props.socket.emit('client: stop cams', 'in process screen');\n    reset(false);\n    cogoToast\n      .loading('Files are currently saving. Please wait...', { hideAfter: 2 });\n    props.updateGreenLightStatus(false);\n    props.stopTimer();\n    markSentenceAsDone(props.curr_sentence_index);\n  }\n\n  function markSentenceAsDone(curr_sentence_index) {\n    const temp = {}\n    temp[curr_sentence_index] = true;\n    props.updateRecordProgress(temp);\n  }\n\n  function startRecording() {\n    props.socket.emit('client: start cams', 'in process screen');\n    setRecordState(true);\n    props.startTimer();\n  }\n\n  function record() {\n    document.getElementById('showSavedFilesBtn').disabled = false;\n    if (recording) {\n      stopRecording();\n    } else {\n      startRecording();\n    }\n  }\n\n  \n  function disableNextButtonIfCurrNotRead() {\n    const recordedYet = (props.recordedProgress[props.curr_sentence_index]) ? props.recordedProgress[props.curr_sentence_index] : false;\n    try {\n      if (recordedYet) {\n        document.getElementById('testerNextBtn').disabled = false;\n      } else {\n        document.getElementById('testerNextBtn').disabled = true;\n      }\n    } catch (Exception) {\n      // console.log(Exception);\n    }\n  }\n\n  function displaySentenceToBeRead() {\n    disableNextButtonIfCurrNotRead();\n    const recordedYet = (props.recordedProgress[props.curr_sentence_index]) ? props.recordedProgress[props.curr_sentence_index] : false;\n    const recordedMessage = (recordedYet) ? '(录过)' : ''\n    const sentence = props.curr_sentence + ' ' + recordedMessage;\n    return (\n      <div className={(recordedYet) ? \"recorded_sentence_highlight\" : \"\"}>{sentence}</div>\n    )\n  }\n\n  \n\n  function trans(text) {\n    if (text === 'Done') {\n      return '结束录制';\n    } else if (text === 'Retry') {\n      return '重新录制';\n    } else if (text === 'Record') {\n      return '开始录制'\n    } else {\n      return text;\n    }\n  }\n\n  function updateTesterContents() {\n    setName(true);\n  }\n\n  function getContents() {\n    if (!nameSet) {\n      return (\n        <div>\n          <NameField\n            socket={props.socket}\n            updateTesterContents={updateTesterContents}\n            updateGreenLightStatus={props.updateGreenLightStatus}\n          />\n          <p className='warning_message'>Enter Name Before Starting</p>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <div className='recording_hint'>\n            {getRecordState() === 'Done' ? '录制中...' : ''}\n          </div>\n          <div className='sentence_to_be_read'>{displaySentenceToBeRead()}</div>\n          <button\n            id='testerRecordBtn'\n            className={getRecordState() === 'Done' ? 'btn btn-danger' : 'btn'}\n            onClick={record}\n            disabled={\n              !props.recordGreenLight ||\n              props.numFilesSaved % props.numCams !== 0\n            }\n          >\n            {trans(getRecordState())}\n          </button>\n          <br />\n          <button\n            className='btn'\n            id='testerPrevBtn'\n            onClick={() => updateSentence('$prev')}\n            disabled={\n              props.curr_sentence_index === 0 ||\n              !props.recordGreenLight ||\n              props.numFilesSaved % props.numCams !== 0 ||\n              recording\n            }\n          >\n            ⬅上一句\n          </button>\n          <button\n            className='btn'\n            id='testerNextBtn'\n            onClick={() => updateSentence('$next')}\n            disabled={\n              props.curr_sentence_index === props.data_length - 1 ||\n              !props.recordGreenLight ||\n              props.numFilesSaved % props.numCams !== 0 ||\n              recording \n    }\n  >\n    下一句➡\n          </button>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div className='test_container'>\n      {getContents()}\n    </div>\n  );\n}\n\nInProcessScreen.propTypes = {\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_sentence: PropTypes.string.isRequired,\n  data_length: PropTypes.number.isRequired,\n  updateSentence: PropTypes.func.isRequired,\n  socket: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired,\n  updateGreenLightStatus: PropTypes.func.isRequired,\n  recordGreenLight: PropTypes.bool.isRequired,\n  numFilesSaved: PropTypes.number.isRequired,\n  numCams: PropTypes.number.isRequired,\n  stopTimer: PropTypes.func.isRequired,\n  startTimer: PropTypes.func.isRequired,\n  recordedProgress: PropTypes.object.isRequired,\n  updateRecordProgress: PropTypes.func.isRequired\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Timer(props) {\n  const [intervalID, setIntervalID] = useState(undefined);\n  let totalTime = [];\n\n  function saveTotalTime (event) {\n    // Cancel the event as stated by the standard.\n    event.preventDefault();\n\n    // console.log(totalTime);\n    props.socket.emit(\n      'client: save total time',\n      totalTime\n    );\n    // Chrome requires returnValue to be set.\n    event.returnValue = '';\n  }\n\n  function createInterval() {\n    let time = [0, 0, 0];\n    return setInterval(() => {\n      let hour = time[0];\n      let min = time[1];\n      let sec = time[2];\n\n      if (sec < 60) {\n        sec += 1;\n      }\n      if (sec === 60) {\n        min += 1;\n        sec = 0;\n      }\n      if (min === 60) {\n        hour += 1;\n        min = 0;\n      }\n      time = [hour, min, sec];\n      totalTime = time;\n      try {\n        document.getElementById(props.name).innerHTML =\n          'Total Recording Time—' +\n          ('0' + hour).slice(-2) +\n          ':' +\n          ('0' + min).slice(-2) +\n          ':' +\n          ('0' + sec).slice(-2);\n\n      } catch (SomeError) {\n        console.error(SomeError);\n      }\n    }, 1000);\n  }\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', saveTotalTime);\n    if (!intervalID) {\n      setIntervalID(createInterval());\n    }\n  }, []);\n  return (\n    <div>\n      <pre id={props.name}></pre>\n      {/* <button onClick={resetTimerClick}>reset</button> */}\n    </div>\n  );\n}\n\nTimer.propTypes = {\n  name: PropTypes.string.isRequired,\n  socket: PropTypes.object.isRequired\n};\n","import React, { useState } from 'react';\nimport './Tester.scss';\nimport PropTypes from 'prop-types';\nimport InProcessScreen from './InProcessScreen.js';\nimport Timer from '../Timer.js'\nimport qs from '../../utils/qs'\n\nfunction Tester(props) {\n  const [intervalID, setIntervalID] = useState(undefined);\n  \n\n  \n  function comp_inProcessScreen() {\n    return (\n      <InProcessScreen\n        updateSentence={props.updateSentence}\n        curr_sentence_index={props.curr_sentence_index}\n        data_length={props.data_length}\n        socket={props.socket}\n        data={props.data}\n        curr_sentence={props.curr_sentence}\n        recordGreenLight={props.recordGreenLight}\n        updateGreenLightStatus={props.updateGreenLightStatus}\n        numFilesSaved={props.numFilesSaved}\n        numCams={props.numCams}\n        stopTimer={stopTimer}\n        startTimer={startTimer}\n        recordedProgress={props.recordedProgress}\n        updateRecordProgress={props.updateRecordProgress}\n      />\n    );\n  }\n\n  function stopTimer() {\n    clearInterval(intervalID);\n    document.getElementById('record_time_content').innerHTML = '';\n  }\n\n  function startTimer() {\n    setIntervalID(createInterval());\n  }\n\n  function createInterval() {\n    let time = [0, 0, 0];\n    return setInterval(() => {\n      let hour = time[0];\n      let min = time[1];\n      let sec = time[2];\n\n      if (sec < 60) {\n        sec += 1;\n      }\n      if (sec === 60) {\n        min += 1;\n        sec = 0;\n      }\n      if (min === 60) {\n        hour += 1;\n        min = 0;\n      }\n      time = [hour, min, sec];\n      document.getElementById('record_time_content').innerHTML =\n        'Total Recording Time—' +\n        ('0' + hour).slice(-2) +\n        ':' +\n        ('0' + min).slice(-2) +\n        ':' +\n        ('0' + sec).slice(-2);\n    }, 1000);\n  }\n\n\n  function comp_timer() {\n    return (\n      <div>\n        <pre id='record_time_content'></pre>\n      </div>\n    );\n  }\n\n  function comp_totalTimer() {\n    if (qs('name')) {\n      return <Timer name={'total_timer'} socket={props.socket} />;\n    }\n  }\n\n  return (\n    <div className='testing_screen'>\n      {comp_totalTimer()}\n      {props.comp_progressBar(props.curr_sentence_index, props.data_length, 'center', 2)}\n      <div className='middle'>\n        <div className='inner'>{comp_inProcessScreen(props)}</div>\n        {comp_timer()}\n      </div>\n      <pre hidden={props.recordGreenLight || props.curr_sentence_index === 0 || !qs('name')} className='warning_message'>\n        There may be an issue with file saves. Please notify research facilitator.\n      </pre>\n    </div>\n  );\n}\n\nTester.propTypes = {\n  updateSentence: PropTypes.func.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_sentence: PropTypes.string.isRequired,\n  data_length: PropTypes.number.isRequired,\n  socket: PropTypes.object.isRequired,\n  data: PropTypes.array.isRequired,\n  recordGreenLight: PropTypes.bool.isRequired,\n  updateGreenLightStatus: PropTypes.func.isRequired,\n  numFilesSaved: PropTypes.number.isRequired,\n  numCams: PropTypes.number.isRequired,\n  recordedProgress: PropTypes.object.isRequired,\n  updateRecordProgress: PropTypes.func.isRequired,\n  comp_progressBar: PropTypes.func.isRequired,\n};\n\nexport default Tester;\n","import React, { Component } from 'react'\n\nexport default class TableHeader extends Component {\n  render() {\n    return (\n      <div>\n        <div className='table_header_footer'>\n          <div>Sentence</div>\n          {/* <div>Length</div>\n          <div>Actions</div> */}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './TableRow.scss';\n// import Actions from './Actions';\nimport PropTypes from 'prop-types';\n\nexport default class TableRow extends Component {\n  getClassOfRowItem = () => {\n    let read = this.props.read ? 'read row_item' : 'row_item';\n    // let sentence = this.props.sentence;\n    let is_current = this.props.curr_sentence_index === this.props.index ? ' curr_sentence' : '';\n    return read + is_current;\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className='table_row'>\n          <div className={this.getClassOfRowItem()}>\n            {this.props.index + \": \" + this.props.sentence}\n          </div>\n          {/* <div className='row_item'>00:00 / {this.props.time} </div> */}\n          {/* <Actions /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nTableRow.propTypes = {\n  sentence: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  time: PropTypes.string.isRequired,\n  read: PropTypes.bool.isRequired,\n};\n","import React, { Component } from 'react';\nimport TableRow from './TableRow.js';\nimport PropTypes from 'prop-types';\nimport './TableData.scss';\n\nexport default class TableData extends Component {\n  updateDataOnPageChange = () => {};\n  render() {\n    let data = this.props.data;\n    let page = this.props.curr_page;\n    let max_per_page = this.props.max_per_page;\n    let beg = page * max_per_page - max_per_page;\n    let end = beg + max_per_page;\n    let small_data = data.slice(beg, end);\n    let rowItems = small_data.map((sentence, i) => (\n      <TableRow\n        curr_sentence_index={this.props.curr_sentence_index}\n        sentence={sentence}\n        time='00:00'\n        read={false}\n        key={sentence+\":\"+i}\n        index={i + beg}\n      />\n    ));\n\n    return <div className='table'>{rowItems}</div>;\n  }\n}\n\nTableData.propTypes = {\n  data: PropTypes.array.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_page: PropTypes.number.isRequired,\n  max_per_page: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class PageNum extends Component {\n  render() {\n    return (\n      <div \n        className={this.props.selected ? 'page_num' : 'can_click_num page_num'}\n        onClick={() => this.props.updatePage(this.props.num)}>\n        {this.props.num}\n      </div>\n    );\n  }\n}\n\nPageNum.propTypes = {\n  num: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n  updatePage: PropTypes.func.isRequired\n};\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport default class PageInput extends Component {\n  handleChange = (event) => {\n    this.props.updatePage(Number(event.target.value));\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n  }\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor='page'>Page:</label>\n          <input\n            type='text'\n            value={this.props.curr_page}\n            onChange={this.handleChange}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nPageInput.propTypes = {\n  updatePage: PropTypes.func.isRequired,\n  curr_page: PropTypes.number.isRequired\n}","import React, { Component } from 'react'\nimport './TableFooter.scss'\nimport PageNum from './PageNum.js'\nimport next from '../../assets/svg/collapse-chevron.svg'\nimport prev from '../../assets/svg/expand-chevron.svg';\nimport PropTypes from 'prop-types';\nimport PageInput from './PageInput.js'\nimport beg from '../../assets/svg/beg.svg'\nimport end from '../../assets/svg/end.svg';\n\nexport default class TableFooter extends Component {\n  updatePage=(page_num) => {\n    this.props.updatePage(page_num);\n  }\n\n  render() {\n    let curr_page = this.props.curr_page;\n    let max_per_page = this.props.max_per_page;\n    let mid_point = Math.floor(max_per_page / 2)\n    let max_page = Number(((this.props.total_data + 1) / this.props.max_per_page + 1).toFixed(0));\n    let page_nums = Array.from(new Array(max_per_page), (x, i) => { \n      let min = 0;\n      if (curr_page <= mid_point) {\n        min = i;\n      } else if (curr_page >= max_page - mid_point) {\n        min = i + max_page - max_per_page;\n      } else {\n        min = i + curr_page - mid_point - 1;\n      }\n      return min;\n    });\n    let nums_list = page_nums.map((i) => {\n      i = i + 1;\n      return <PageNum num={i} selected={curr_page === i} key={i} updatePage={this.props.updatePage}/>\n    });\n\n    return (\n      <div>\n        <div className='table_header_footer'>\n          <div className='table_footer'>\n            <div className='left_footer'>\n              <PageInput\n                updatePage={this.props.updatePage}\n                curr_page={this.props.curr_page}\n              />\n            </div>\n            <div className='right_footer'>\n              <img\n                src={beg}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(1)}\n              />\n              <img\n                src={prev}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(curr_page - 1)}\n              />\n              {nums_list}\n              <img\n                src={next}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(curr_page + 1)}\n              />\n              <img\n                src={end}\n                alt=''\n                className='small_btn'\n                onClick={() => this.props.updatePage(max_page)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTableFooter.propTypes = {\n  updatePage: PropTypes.func.isRequired,\n  curr_page: PropTypes.number.isRequired,\n  total_data: PropTypes.number.isRequired,\n  max_per_page: PropTypes.number.isRequired\n};","import React, { Component } from 'react'\nimport TableHeader from './TableHeader.js'\nimport './Table.scss'\nimport TableData from './TableData.js'\nimport PropTypes from 'prop-types';\nimport TableFooter from './TableFooter';\nexport default class Table extends Component {\n  constructor(props) {\n    super(props);\n    let per_page = 8;\n    this.state = {\n      max_per_page: per_page\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <TableHeader />\n        <TableData\n          data={this.props.data}\n          curr_page={this.props.curr_page}\n          max_per_page={this.state.max_per_page}\n          curr_sentence_index={this.props.curr_sentence_index}\n        />\n        <TableFooter\n          total_data={this.props.data.length}\n          updatePage={this.props.updatePage}\n          curr_page={this.props.curr_page}\n          max_per_page={this.state.max_per_page}\n        />\n      </div>\n    );\n  }\n}\n\nTable.propTypes = {\n  curr_sentence_index: PropTypes.number.isRequired,\n  curr_page: PropTypes.number.isRequired,\n  updatePage: PropTypes.func.isRequired,\n  data: PropTypes.array.isRequired,\n};","import React, { Component } from 'react';\nimport Table from './Table';\nimport PropTypes from 'prop-types';\n\nexport default class DataCollection extends Component {\n\n\n  render() {\n    return (\n      <div>\n        <div className='name_field'>\n        </div>\n        <div className='data_table'>\n          <Table\n            data={this.props.data}\n            curr_sentence_index={\n              this.props.curr_sentence_index\n            }\n            curr_page={this.props.curr_page}\n            updatePage={this.props.updatePage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nDataCollection.propTypes = {\n  data: PropTypes.array.isRequired,\n  curr_sentence_index: PropTypes.number.isRequired,\n  socket: PropTypes.object.isRequired,\n  updatePage: PropTypes.func.isRequired,\n  curr_page: PropTypes.number.isRequired\n};\n","import React, { useEffect } from 'react'\nimport Modali, { useModali } from 'modali';\nimport PropTypes from 'prop-types';\nimport cogoToast from 'cogo-toast';\n\nexport default function Modal(props) {\n  const [completeModal, toggleCompleteModal] = useModali({\n    animated: true,\n    title: props.title,\n    message: props.message,\n    buttons: [\n      <Modali.Button\n        label={props.buttonCancel ? props.buttonCancel : ''}\n        isStyleCancel\n        className={!props.buttonCancel ? 'display_none' : ''}\n        key={props.buttonCancel}\n        hidden={!props.buttonCancel}\n        onClick={() => toggleCompleteModal()}\n      />,\n      <Modali.Button\n        label={props.buttonConfirm}\n        isStyleDestructive\n        onClick={() => {\n          if (props.confirmFunc) props.confirmFunc();\n          toggleCompleteModal();\n          if (props.toast) cogoToast.info(props.toast);\n        }}\n        hidden={!props.buttonConfirm}\n        key={props.buttonConfirm}\n      />\n    ]\n  });\n  useEffect(() => {\n    if (props.onLoadFunc) props.onLoadFunc()\n    try {\n      if (!props.buttonCancel)\n        document.getElementsByClassName(\n          'modali-button-cancel'\n          )[0].className += ' display_none';\n      if (!props.buttonConfirm)\n        document.getElementsByClassName(\n          'modali-button-destructive'\n        )[0].className += ' display_none';\n    } catch (NotYetLoadedException) {\n      // console.log(NotYetLoadedException);\n    }\n  }, [])\n\n  return (\n    <div style={{ height: '0px' }}>\n      <button\n        className=\"hidden_button\"\n        id={props.modalID}\n        onClick={toggleCompleteModal}\n      >\n        toggle modal\n      </button>\n      <Modali.Modal {...completeModal} />\n    </div>\n  );\n}\n\nModal.propTypes = {\n  socket: PropTypes.object,\n  title: PropTypes.string,\n  message: PropTypes.any,\n  buttonCancel: PropTypes.string,\n  buttonConfirm: PropTypes.string,\n  toast: PropTypes.string,\n  confirmFunc: PropTypes.func,\n  modalID: PropTypes.string,\n  onLoadFunc: PropTypes.func\n};\n","/* eslint-disable no-console */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'react-addons-update'\nimport qs from '../utils/qs'\nimport cogoToast from 'cogo-toast';\nimport { Line } from 'rc-progress';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// scss\nimport './App.scss';\n\n// components\nimport CameraList from '../components/CameraList/CameraList';\nimport Tester from '../components/Tester/Tester';\nimport DataCollection from '../components/Table/DataCollection';\nimport Modal from '../components/Modal'\n\n// data\n// import sentences from '../assets/data/sentences.txt';\nimport sentences from '../assets/data/sentences-english-test.txt';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    let per_page = 8;\n    let curr_index = qs('sentence_index');\n    this.state = {\n      curr_sentence: '',\n      curr_sentence_index: curr_index ? Number(curr_index) : 0,\n      data: [],\n      per_page: per_page,\n      curr_page: curr_index ? Math.floor(Number(curr_index) / per_page) + 1 : 1,\n      computerStatus: {},\n      recordGreenLight: false,\n      computerID: -1,\n      numFilesSavedTotal: 0,\n      numFilesSavedInd: 0,\n      connectedOrderMap: {},\n      numCams: 1,\n      recordedProgress: {}\n    };\n    if (!this.helper_checkIfMobileView) {\n      this.props.socket.emit('client: update sentence_index', {\n        name: qs('name'),\n        curr_sentence_index: this.state.curr_sentence_index\n      });\n    } else {\n      this.props.socket.emit('client: ask for recording status');\n    }\n\n    props.socket.emit('client: check for progress');\n    props.socket.emit('client: ask for sync id');\n    \n  }\n\n  readTextFile(file) {\n    return fetch(file)\n      .then(response => response.text())\n      .then(text => {\n        this.setState({ data: text.split('\\n') }, () => {\n          let curr_sentence = qs('sentence_index')\n            ? this.state.data[Number(qs('sentence_index'))]\n            : this.state.data[0];\n          this.setState({ curr_sentence }, () => {\n            // console.log(this.state.curr_sentence)\n          });\n        });\n      });\n  }\n\n  socket_getSetCompID = id => {\n    const status = {};\n    this.setState({ computerID: id });\n    status[this.state.computerID] = [];\n    this.setState({ computerStatus: status }, () => {\n      console.log(\"init computer status\", this.state.computerStatus);\n    });\n  };\n\n  boldString = (str, find) => {\n    var re = new RegExp(find, 'g');\n    return str.replace(re, '🖥: ' + find);\n  };\n\n  // helper method\n  socket_updateConnectionStatus = status => {\n    console.log('updating connection status here!!! ' + JSON.stringify(status));\n    this.setState({ computerStatus: status });\n  };\n\n  showFileSavedMessage = () => {\n    cogoToast.success('Files successfully saved.', { hideAfter: 1.5 });\n  };\n\n  initSocketListeners = () => {\n    this.props.socket.on('server: connected sync id', id => {\n      if (this.socket_getSetCompID) this.socket_getSetCompID(id);\n      this.socket_getSetCompID = null;\n    });\n    \n    this.props.socket.on('server: reset cams', () => {\n      this.updateGreenLightStatus(true);\n    });\n\n    this.props.socket.on('server: response for connection status', status => {\n      try {\n        document.getElementById('connection_status').innerHTML = this.boldString(JSON.stringify(\n          status,\n          null,\n          2\n        ), this.state.computerID);\n      } catch (NotOnPageError) {\n        //\n      }\n    });\n\n    this.props.socket.on('server: response for recording status', status => {\n      console.log('beeppppps' + JSON.stringify(status));\n    });\n\n    this.props.socket.on('server: response for progress', progress => {\n      this.setState({ recordedProgress: progress });\n      try {\n        this.setState({ curr_sentence_index: Object.keys(progress).length })\n      } catch (NotYetLoadedException) {\n        console.error(NotYetLoadedException);\n      }\n    });\n\n    this.props.socket.on('server: response for numFilesSaved', numFiles => {\n      this.helper_updateFilesSaved(numFiles);\n    });\n\n    this.props.socket.on('server: save files successful', numFiles => {\n      this.helper_updateFilesSaved(numFiles);\n      this.setState(\n        {\n          numFilesSavedInd: this.state.numFilesSavedInd + 1\n        },\n        () => {\n          console.log(\n            'this occured: ' + this.state.numFilesSavedInd + ' times.'\n          );\n          if (this.state.numFilesSavedInd === this.state.numCams) {\n            console.log('correct number of files saved');\n            try {\n              document.getElementById('showSavedFilesBtn').click();\n              document.getElementById('showSavedFilesBtn').disabled = true;\n              this.setState(\n                {\n                  numFilesSavedInd: 0\n                },\n                () => {\n                  try {\n                    document.getElementById('testerNextBtn').click();\n                  } catch (NotOnPageError) {\n                    console.error(NotOnPageError);\n                  }\n                }\n              );\n              \n              this.updateGreenLightStatus(true);\n            } catch (Exception) {\n              console.error(Exception);\n            }\n            try {\n              if (this.helper_checkIfMobileView()) {\n                console.log('here here??');\n                cogoToast.info('Completed @ Sentence [' + this.state.curr_sentence_index + ']', {hideAfter: 0.75});\n              }\n              console.log('clicked??');\n            } catch (NotYetLoadedException) {\n              console.error(NotYetLoadedException);\n            }\n          }\n        }\n      );\n    });\n\n    this.props.socket.on('server: computer connected order', connectedOrder => {\n      // const id = Object.keys(connectedOrder[0])\n      // const order = connectedOrder[id];\n      this.setState({\n        connectedOrderMap: update(this.state.connectedOrderMap, {\n          $merge: connectedOrder\n        })\n      });\n    });\n\n    const refreshRates = [0, 666, 1332];\n    this.props.socket.on('server: refresh all', () => {\n      const conectedOrderNum = this.state.connectedOrderMap[\n        this.state.computerID\n      ];\n      const indexRefresh = conectedOrderNum % 3;\n      const time = refreshRates[indexRefresh];\n      setTimeout(() => {\n        window.location.reload(false);\n      }, time);\n    });\n  };\n\n  async pingServer() {\n    try {\n      const serverID = this.props.socket.io.opts.hostname;\n      const response = await fetch(serverID, { mode: 'no-cors' });\n      if (!response.ok) {\n        console.error('no response from server');\n      } else {\n        console.log('connection successful');\n      }\n    } catch (ServerPingFailedException) {\n      console.error(ServerPingFailedException);\n    }\n  }\n  \n\n  componentDidMount() {\n    this.readTextFile(sentences);\n    this.initSocketListeners();\n    this.pingServer();\n    window.addEventListener('keydown', this.downHandler);\n    \n  }\n  \n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.downHandler);\n    window.removeEventListener('beforeunload');\n  }\n\n  comp_progressBar(curr, total, align, strokeWidth) {\n    const percent = ((curr / total) * 100).toFixed(2);\n    const alignmentStyle = align === 'left' ? { margin: '0' } : {};\n    return (\n      <div className='progress_bar' style={alignmentStyle}>\n        <pre>\n          Progress: {curr} / {total} ({percent}%)\n        </pre>\n        <Line\n          percent={percent}\n          strokeWidth={strokeWidth}\n          trailWidth={strokeWidth}\n          strokeColor='#2db7f5'\n          trailColor='#D9D9D9'\n        />\n      </div>\n    );\n  }\n\n  helper_updateFilesSaved = numFiles => {\n    const successMessage =\n      numFiles % this.state.numCams === 0\n        ? ' (successful)'\n        : ' (not all cams saved!!)';\n    this.setState({\n      numFilesSavedTotal: numFiles\n    });\n    try {\n      document.getElementById('num_files_saved').innerHTML = 'Total Files Saved: ' + numFiles + successMessage;\n    } catch (NotYetLoadedException) {\n      // console.error(NotYetLoadedException);\n    }\n  };\n\n  updateSentence = curr_sentence => {\n    console.log('update sentence called here beep')\n    //console.log(\"in updateSentence(\" + curr_sentence + \"):\" + qs('name'));\n    if (curr_sentence === '$next') {\n      if (this.state.curr_sentence_index + 1 === this.state.data.length) {\n        alert('实验结束！谢谢您的参与');\n      } else {\n        this.setState(\n          {\n            curr_sentence_index: this.state.curr_sentence_index + 1\n          },\n          () => {\n            this.updateSentence(\n              this.state.data[this.state.curr_sentence_index]\n            );\n            this.props.socket.emit('client: update sentence_index', {\n              name: qs('name'), //qs['name'],\n              curr_sentence_index: this.state.curr_sentence_index\n            });\n          }\n        );\n      }\n    } else if (curr_sentence === '$prev') {\n      this.setState(\n        {\n          curr_sentence_index: Math.max(this.state.curr_sentence_index - 1, 0)\n        },\n        () => {\n          this.updateSentence(this.state.data[this.state.curr_sentence_index]);\n          this.props.socket.emit('client: update sentence_index', {\n            name: qs('name'),\n            curr_sentence_index: this.state.curr_sentence_index\n          });\n        }\n      );\n    } else {\n      window.history.pushState(\n        null,\n        null,\n        '?name=' +\n          qs('name') +\n          '&sentence_index=' +\n          this.state.curr_sentence_index\n      );\n      // console.log(curr_sentence);\n      this.setState({\n        curr_sentence,\n        curr_page:\n          Math.floor(\n            Number(this.state.curr_sentence_index) / this.state.per_page\n          ) + 1\n      });\n    }\n  };\n\n  updatePage = new_page => {\n    if (new_page === 0) {\n      // do nothing\n    }\n    console.log('update page', new_page);\n    this.setState({\n      curr_page: new_page >= 1 ? new_page : 1\n    });\n  };\n\n  updateRecordProgress = sentence_obj => {\n    // { <sentence_index> : <bool: recorded/not> }\n    console.log('added to progress ', JSON.stringify(sentence_obj));\n    this.setState(\n      {\n        recordedProgress: update(this.state.recordedProgress, {\n          $merge: sentence_obj\n        })\n      },\n      () => {\n        this.props.socket.emit(\n          'client: update recording progress',\n          this.state.recordedProgress\n        );\n      }\n    );\n    \n  };\n\n  updateConnectionStatus = recordingStatus => {\n    if (this.state.computerStatus[this.state.computerID]) {\n      const status = {};\n      status[this.state.computerID] = recordingStatus;\n      this.setState({ computerStatus: status }, () => {\n        console.log(this.state.computerStatus);\n      });\n      this.props.socket.emit('client: update recording status', status);\n    }\n    console.log(recordingStatus);\n    this.getStatus();\n  };\n\n  comp_dataCollection = () => {\n    return (\n      <DataCollection\n        data={this.state.data}\n        updateName={this.updateName}\n        curr_sentence={this.state.curr_sentence}\n        socket={this.props.socket}\n        curr_sentence_index={this.state.curr_sentence_index}\n        curr_page={this.state.curr_page}\n        updatePage={this.updatePage}\n      />\n    );\n  };\n\n  updateGreenLightStatus = bool => {\n    this.setState({ recordGreenLight: bool });\n  };\n\n  comp_tester = () => {\n    return (\n      <Tester\n        updateSentence={this.updateSentence}\n        data={this.state.data}\n        curr_sentence_index={this.state.curr_sentence_index}\n        data_length={this.state.data.length}\n        first_sentence={this.state.data[this.state.curr_sentence_index]}\n        curr_sentence={this.state.curr_sentence}\n        socket={this.props.socket}\n        recordGreenLight={\n          this.state.recordGreenLight &&\n          this.state.numFilesSavedTotal % this.state.numCams === 0\n        }\n        numFilesSaved={this.state.numFilesSavedTotal}\n        numCams={this.state.numCams}\n        updateGreenLightStatus={this.updateGreenLightStatus}\n        recordedProgress={this.state.recordedProgress}\n        updateRecordProgress={this.updateRecordProgress}\n        comp_progressBar={this.comp_progressBar}\n      />\n    );\n  };\n\n  comp_userResearchHeader = () => {\n    return (\n      <div>\n        <br />\n        <h1>For User Researcher Purpose Only</h1>\n        <hr />\n      </div>\n    );\n  };\n\n  getStatus = () => {\n    this.props.socket.emit('client: ping for connection status');\n    this.props.socket.emit('client: ping for numFilesSaved');\n    this.props.socket.emit('client: ping for progress');\n\n  };\n\n  resetCams = () => {\n    // this.props.socket.emit('client: stop cams');\n    this.props.socket.emit('client: dummy vid, do not save');\n    this.updateGreenLightStatus(true);\n    this.props.socket.emit('client: reset cams');\n\n    cogoToast.info('Cams are reset');\n  };\n\n  refreshAll = () => {\n    this.props.socket.emit('client: refresh all');\n  };\n\n  comp_cameraList = () => {\n    return (\n      <CameraList\n        socket={this.props.socket}\n        computerID={this.state.computerID}\n        computerStatus={this.state.computerStatus}\n        updateConnectionStatus={this.updateConnectionStatus}\n      />\n    );\n  };\n\n  toggleModal = id => {\n    document.getElementById(id).click();\n  };\n\n  helper_checkIfMobileView = () => {\n    return window.location.href.includes('mobile')\n  }\n\n  comp_overallStatusContent = () => {\n    return (\n      <div>\n        <h4>Connection Status</h4>\n        <pre id='connection_status'></pre>\n        <pre id='num_files_saved'></pre>\n        <pre\n          hidden={\n            this.state.recordGreenLight ||\n            this.helper_checkIfMobileView() ||\n            !qs('name')\n          }\n          className='warning_message'\n        >\n          Please Click Reset!\n        </pre>\n        {this.comp_progressBar(\n          this.state.curr_sentence_index,\n          this.state.data.length - 1,\n          'left', 3\n        )}\n      </div>\n    );\n  };\n\n  comp_modals = () => {\n    return (\n      <div>\n        <Modal\n          modalID={'resetProgressModal'}\n          socket={this.props.socket}\n          title={'Are you sure?'}\n          message={'Resetting progress will be permanent.'}\n          buttonCancel={'Cancel'}\n          buttonConfirm={'Reset'}\n          toast={'Progress reset'}\n          confirmFunc={() => {\n            this.props.socket.emit('client: update recording progress', {});\n          }}\n        />\n        <Modal\n          modalID={'overallStatus'}\n          socket={this.props.socket}\n          title={'Status'}\n          onLoadFunc={this.getStatus}\n          message={this.comp_overallStatusContent()}\n          buttonConfirm={'Hide'}\n        />\n      </div>\n    );\n  };\n\n  comp_debug = () => {\n    return (\n      <div style={{margin: 'auto', textAlign: 'center'}}>\n        <button\n          onClick={() => {\n            this.toggleModal('overallStatus');\n            this.getStatus();\n          }}\n          className='debug_button'\n        >\n          Status\n        </button>\n        <button\n          id='resetCamsBtn'\n          className='debug_button'\n          onClick={this.resetCams}\n        >\n          Reset Cams\n        </button>\n        <button\n          className='debug_button'\n          onClick={() => {\n            this.toggleModal('resetProgressModal');\n          }}\n        >\n          Reset Progress\n        </button>\n        <button className='debug_button' onClick={this.refreshAll}>\n          Refresh All\n        </button>\n\n        <button\n          onClick={this.showFileSavedMessage}\n          id='showSavedFilesBtn'\n          className='hidden_button'\n        ></button>\n        <pre hidden={this.state.numCams === 8}>\n          debug mode, remember to change num cams back to 8\n        </pre>\n      </div>\n    );\n  };\n\n  desktopView = () => {\n    return (\n      <div className='container'>\n        {this.comp_debug()}\n        {this.comp_tester()}\n        {this.comp_userResearchHeader()}\n        <div className='contents'>\n          <div className='left_panel'>{this.comp_dataCollection()}</div>\n          <div className='right_panel cameras_container'>\n            {this.comp_cameraList()}\n          </div>\n          <div className=''></div>\n        </div>\n      </div>\n    );\n  };\n\n  mobileView = () => {\n    return (\n      <div onClick={() => this.getStatus()}>\n        {this.comp_modals()}\n        {/* <button id=\"mobileStatusBtn\" onClick={() => {this.toggleModal('overallStatus');}}>Status</button> */}\n        {this.comp_debug()}\n      </div>\n    )\n  };\n\n  downHandler(event) {\n    let key = event.key;\n    if ([' ', 'ArrowLeft', 'ArrowRight', 'Escape'].includes(key)) {\n      if (key === ' ') {\n        document.getElementById('testerRecordBtn').click();\n      } else if (key === 'ArrowLeft') {\n        document.getElementById('testerPrevBtn').click();\n      } else if (key === 'ArrowRight') {\n        console.log('detected right arrow key');\n        document.getElementById('testerNextBtn').click();\n      } else if (key === 'Escape') {\n        document.getElementById('resetCamsBtn').click();\n      }\n      event.preventDefault();\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <Route path='/' exact component={this.desktopView} />\n        <Route path='/mobile' exact component={this.mobileView} />\n        {this.comp_modals()}\n      </Router>\n    );\n  }\n}\n\nApp.propTypes = {\n  socket: PropTypes.object.isRequired\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App.js';\nimport io from 'socket.io-client'; \n\nconst socket = io('http://192.168.0.101:5000');\n\nReactDOM.render(<App socket={socket} />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/collapse-chevron.126ea5d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/expand-chevron.fd7409a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/beg.565428a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/end.b927e101.svg\";","module.exports = __webpack_public_path__ + \"static/media/sentences-english-test.d9eb1bf6.txt\";"],"sourceRoot":""}