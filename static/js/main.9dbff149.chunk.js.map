{"version":3,"sources":["utils/qs.js","components/Webcam/Webcam.js","components/CameraList/CameraList.js","components/NameField/NameField.js","components/Tester/InProcessScreen.js","components/Tester/Tester.js","components/Table/TableHeader.js","components/Table/TableRow.js","components/Table/TableData.js","components/Table/PageNum.js","components/Table/PageInput.js","components/Table/TableFooter.js","components/Table/Table.js","components/Table/DataCollection.js","components/Modal.js","components/Status.js","components/Toggle/Toggle.js","components/CompleteAnimation/Checkmark/Checkmark.js","components/CompleteAnimation/Fireworks/Fireworks.js","components/CompleteAnimation/CompleteAnimation.js","components/ProgressBar.js","app/App.js","index.js","assets/svg/collapse-chevron.svg","assets/svg/expand-chevron.svg","assets/svg/beg.svg","assets/svg/end.svg","utils/ip.js","assets/svg/up-chevron.svg","assets/svg/down-chevron.svg"],"names":["qs","id","parsedUrl","URL","window","location","href","searchParams","has","get","Webcam","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isRecording","recorder","videoSrc","videoEle","startTime","video","React","createRef","today","Date","getFullYear","getMonth","getDate","getTime","react_default","a","createElement","className","onClick","startRecording","controls","autoPlay","playsInline","muted","ref","props","videoRef","name","Component","CameraList","_useState","useState","_useState2","slicedToArray","availableCams","setAvailableCams","_useState3","_useState4","recordingStatus","setRecordingStatus","_useState5","_useState6","availableMics","setAvailableMics","_useState7","_useState8","pluggedInDevices","setPluggedInDevices","helper_extractRelevantCamInfo","device","camera_info","deviceId","label","groupId","initCams","navigator","mediaDevices","enumerateDevices","then","devices","videoDevices","micDevices","num","reduce","accumulator","kind","updateDetectedNumCams","helper_getNumCams","map","toLowerCase","includes","indexOf","push","helper_addToMicDevices","videodevices","devicePrior","filter","cam","mic_info","helper_addToVideoDevices","document","getElementById","click","disabled","catch","err","console","log","message","Array","prototype","diff","i","isMac","startFaceTimeCam","faceTimeDevice","defaultMic","cogoToast","success","position","hideAfter","hide","addNewCamMic","resolve","undefined","Promise","checkIfMac","Exception","allDevices","detectedTwoDevices","idAoni","newPluggedInID","length","warn","_getNewMicCam","newCam","newMic","error","getNewMicCam","_getNewMicCam2","newMicID","newCamDevice","temp","substring","initCamsDummy","stopAllCams","startAllCams","getUserMedia","audio","exact","frameRate","ideal","width","height","camera","RecordRTC","recorderType","MediaStreamRecorder","type","desiredSampRate","numberOfAudioChannels","disableLogs","getState","current","srcObject","NotYetLoadedException","triggerRecordStatusUpdate","dummy","stopRecording","blob","getBlob","socket","emit","sentence_index","camera_id","updateConnectionStatus","resumeAllCams","_unused","resumeRecording","useEffect","addCamState","on","addCam","comp_camsList","components_Webcam_Webcam","key","debug","debugControls","style","marginBottom","renderCams","NameField","saveName","value","url_state","history","pushState","updateTesterContents","updateGreenLightStatus","isNameEmpty","replace","detectEnter","e","innerText","which","startBtn","buttons","placeholder","onKeyPress","autoFocus","required","InProcessScreen","recording","setRecordState","done_recording","setDoneRecording","reset_state","reset","nameSet","setName","updateSentence","data","getRecordState","curr_sentence_index","content","curr_sentence","showFileSavingLoader","stopTimer","updateRecordProgress","record","startTimer","displaySentenceToBeRead","debugMode","recordedYet","recordedProgress","disableNextButtonIfCurrNotRead","emoji","sentence","msg","makeEmojiLayout","recordedClassName","recordTimeEle","recordTimeMsg","transition","color","recordGreenLight","numFilesSaved","requiredNumCams","connectedToServer","text","data_length","detectedNumCams","NameField_NameField_NameField","getContents","Tester","intervalID","setIntervalID","clearInterval","innerHTML","time","setInterval","hour","min","sec","slice","createInterval","comp_totalProgress","comp_saveProgress","hidden","TableHeader","TableRow","getClassOfRowItem","read","index","TableData","updateDataOnPageChange","_this2","page","curr_page","max_per_page","beg","end","rowItems","TableRow_TableRow","PageNum","selected","updatePage","PageInput","handleChange","event","Number","target","handleSubmit","preventDefault","onSubmit","htmlFor","onChange","TableFooter","page_num","mid_point","Math","floor","max_page","total_data","toFixed","nums_list","from","x","PageNum_PageNum","PageInput_PageInput","src","alt","prev","next","Table","TableHeader_TableHeader","TableData_TableData","sentencesPerPageInTable","TableFooter_TableFooter","DataCollection","Table_Table_Table","Modal","_useModali","useModali","animated","title","dist_default","Button","buttonCancel","isStyleCancel","toggleCompleteModal","buttonConfirm","isStyleDestructive","confirmFunc","toast","info","_useModali2","completeModal","onLoadFunc","getElementsByClassName","modalID","Status","Infinity","remainingWords","setRemainingWords","startTimeTotalSecs","getSeconds","diffSecs","hours","mins","totalRecordingTime","displayTime","tick","showTime","initTime","SomeError","date","getHours","getMinutes","Toggle","toggle","addEventListener","onChangeFunc","checked","updateDebugMode","Checkmark","version","xmlns","xlink","y","viewBox","enableBackground","xmlSpace","fill","stroke","strokeMiterlimit","d","strokeWidth","cx","cy","r","strokeLinecap","points","strokeDasharray","Fireworks","CompleteAnimation","Fireworks_Fireworks","Checkmark_Checkmark","ProgressBar","percent","curr","total","alignmentStyle","align","margin","strokeColor","shape","es","trailWidth","trailColor","App","curr_index","ip_address","showNoCamsRef","hideServerOfflineRef","Desktop","_ref","children","useMediaQuery","minWidth","Tablet","_ref2","maxWidth","Mobile","_ref3","Default","_ref4","terminal","handler_hoverMouseOutDebug","handler_hoverMouseOverDebug","classList","remove","handler_hoverMouseOutBottom","handler_hoverMouseOverBottom","override","numFilesSavedInd","Fragment","main_userView","comp_debug","comp_tester","comp_bottomAdmin","recordProgress","isMobile","marginTop","top","left","helper_toggleHideBottom","down_chevron","comp_dataCollection","comp_cameraList","main_adminView","textAlign","main_playground","comp_debugHover","comp_completeAnimation","CompleteAnimation_CompleteAnimation","DataCollection_DataCollection","updateName","currSentence","currSentenceIndex","currPageInTable","components_Tester_Tester","first_sentence","numFilesSavedTotal","totalTime","updateTotalTime","disp_showFileSavingLoader","getSentenceText","getSentenceIndex","computerID","computerStatus","toggleCamState","helper_toggleCamState","admin_resetCams","comp_status","totalWords","helper_checkIfMobileView","comp_modals","buttonConfirmId","admin_resetProgress","getStatus","setState","helper_toggleModal","handler_debugToggle","readOnly","ip","handler_IPOnChange","handler_useThisCompAsServer","helper_toggleHideDebug","up_chevron","disp_showFileSavedMessage","updateFilesSaved","numFiles","successMessage","ip_util","clientGetIP","split","loading","helper_setServerIP","debugCogoToastOnRef","debugCogoToastOffRef","showDebugOn","showDebugOff","handler_fileSaveSuccess","style_makeEmojiToastLayout","updateCompID","status","style_addThisCpuIcon","str","find","re","RegExp","ref_hideLoader","NotOnPageError","disp_showServerConencted","add","initSocketListeners","helper_showServerNotOnline","JSON","stringify","progress","connectedOrder","connectedOrderMap","update","$merge","refreshRates","conectedOrderNum","setTimeout","reload","max","new_page","bool","admin_refreshAll","origin","pathname","helper_emitInitialSocketMessages","helper_showNoCamsConnected","disconnect","io","helper_addHoverEventListeners","debugHoverArea","bottomHoverArea","helper_removeHoverEventListeners","removeEventListener","handler_keydown","inputServerIP","activeElement","react_router_dom","Helmet","react_router","path","component","fontSize","pinyin","newsentences","random","readTextFile","handler_keyup","file","stateName","_this3","fetch","response","sum","serverID","opts","hostname","mode","ok","_context","t0","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","return","ReactDOM","render","src_app_App","module","exports","__webpack_require__","p","ifaces","require","networkInterfaces","nodeGetIP","address","keys","forEach","ifname","iface","family","internal","onNewIP","pc","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","iceServers","noop","localIPs","ipRegex","ipIterate","createDataChannel","createOffer","sdp","line","match","setLocalDescription","onicecandidate","ice","candidate"],"mappings":"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","file":"static/js/main.9dbff149.chunk.js","sourcesContent":["// let qs = (function (a) {\r\n//   console.log(\"in qs:\" + window.location.href)\r\n//   if (a === \"\") return {};\r\n//   var b = {};\r\n//   for (var i = 0; i < a.length; ++i) {\r\n//     var p = a[i].split('=', 2);\r\n//     if (p.length === 1)\r\n//       b[p[0]] = \"\";\r\n//     else\r\n//       b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\r\n//   }\r\n//   return b;\r\n// })(window.location.search.substr(1).split('&'));\r\n\r\nconst qs = function(id) {\r\n  let parsedUrl = new URL(window.location.href);\r\n  if (parsedUrl.searchParams.has(id)) {\r\n    return parsedUrl.searchParams.get(id);\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\nexport default qs;","import React from 'react';\r\nimport './Webcam.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Webcam extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isRecording: false,\r\n      recorder: null,\r\n      videoSrc: null,\r\n      videoEle: null,\r\n      startTime: 'time',\r\n    };\r\n    this.video = React.createRef();\r\n  }\r\n  getCurrentTime() {\r\n    let today = new Date();\r\n    let date =\r\n      today.getFullYear() +\r\n      '-' +\r\n      (today.getMonth() + 1) +\r\n      '-' +\r\n      today.getDate();\r\n    let time = today.getTime(); //today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    return date + '-' + time;\r\n  }\r\n  \r\n  render() {\r\n    // console.log(this.props.videoRef);\r\n    return (\r\n      <div className='vid_card' onClick={this.startRecording}>\r\n        <video\r\n          className='cam'\r\n          controls\r\n          autoPlay\r\n          playsInline\r\n          muted\r\n          ref={this.props.videoRef}\r\n        />\r\n        <p className='cam_label'>{this.props.name}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nWebcam.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  videoRef: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Webcam;\r\n","/* eslint-disable no-console */\r\nimport React, { useState, useEffect } from 'react';\r\n// import sample_cam from '../../assets/svg/sample-cam.svg';\r\nimport Webcam from '../Webcam/Webcam.js';\r\nimport RecordRTC, { MediaStreamRecorder } from 'recordrtc';\r\nimport qs from '../../utils/qs'\r\nimport cogoToast from 'cogo-toast';\r\n// import PropTypes from 'prop-types';\r\n\r\nexport default function CameraList(props) {\r\n  const [availableCams, setAvailableCams] = useState([]);\r\n  const [recordingStatus, setRecordingStatus] = useState(\"recording-status-loading...\");\r\n  const [availableMics, setAvailableMics] = useState([]);\r\n  const [pluggedInDevices, setPluggedInDevices] = useState([]);\r\n\r\n  const helper_extractRelevantCamInfo = device => {\r\n    return {\r\n      camera_info: {\r\n        id: device.deviceId,\r\n        label: device.label,\r\n        groupId: device.groupId\r\n      },\r\n      ref: React.createRef(),\r\n      recorder: null\r\n    };\r\n  }\r\n  const helper_addToVideoDevices = (device, videodevices) => {\r\n    device = helper_extractRelevantCamInfo(device);\r\n    // console.log(availableCams);\r\n    const devicePrior = availableCams.filter(cam => {\r\n      return cam.camera_info.id === device.camera_info.id\r\n    })[0];\r\n    // console.log(devicePrior);\r\n    if (devicePrior) {\r\n      // console.log('found prior device');\r\n      device.mic_info = devicePrior.mic_info;\r\n    } else {\r\n      // console.log('using first cam mic!!!')\r\n      device.mic_info = availableMics[0];\r\n    }\r\n    videodevices.push(device);\r\n  }\r\n  const helper_addToMicDevices = (device, micDevices) => {\r\n    if (micDevices.indexOf(device.deviceId) < 0)\r\n      micDevices.push(device);\r\n  }\r\n  const helper_getNumCams = devices => {\r\n    const num = devices.reduce((accumulator, device) => {\r\n      return device.kind === 'videoinput' ? accumulator + 1 : accumulator;\r\n    }, 0);\r\n    props.updateDetectedNumCams(num);\r\n    return num;\r\n  }\r\n\r\n  const initCams = () => {\r\n    if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\r\n      console.log('enumerateDevices() not supported.');\r\n    } else {\r\n      navigator.mediaDevices.enumerateDevices().then(devices => {\r\n        let videoDevices = [];\r\n        let micDevices = [];\r\n        helper_getNumCams(devices);\r\n\r\n        // console.log(\"number of cams detected: \" + numCams);\r\n        devices.map(function(device) {\r\n          if (device.kind === 'audioinput') {\r\n            if (\r\n              !device.label.toLowerCase().includes('default') &&\r\n              !device.label.toLowerCase().includes('communications') && \r\n              !device.label.toLowerCase().includes('built-in')\r\n            ) {\r\n              helper_addToMicDevices(device, micDevices);\r\n            }\r\n          }            \r\n          if (device.kind === 'videoinput') {\r\n            helper_addToVideoDevices(device, videoDevices);\r\n          }\r\n          return null;\r\n        });\r\n        setAvailableMics(micDevices);\r\n        setAvailableCams(videoDevices);\r\n\r\n        document.getElementById('startBtn').click();\r\n        document.getElementById('startBtn').disabled = true;\r\n        // console.log('getAvailableDevices success!');\r\n      })\r\n      .catch(function(err) {\r\n        console.log(err.name + ': ' + err.message);\r\n      });\r\n    }\r\n  }\r\n  // const initMics = () => {\r\n  //   let id = 0;\r\n  //   availableCams.map(cam => {\r\n  //     if (availableMics[id]) cam.mic_info = availableMics[id++].deviceId;\r\n  //   });\r\n  // }\r\n\r\n  Array.prototype.diff = function(a) {\r\n    return this.filter(function(i) {\r\n      return a.indexOf(i) < 0;\r\n    });\r\n  };\r\n\r\n  const getNewMicCam = (newPluggedInID, allDevices) => {\r\n    const newCam = allDevices.filter(device => {\r\n      return (\r\n        newPluggedInID.indexOf(device.deviceId) >= 0 &&\r\n        device.kind === 'videoinput'\r\n      );\r\n    });\r\n    // should only contain one \r\n    const newMic = allDevices.filter(device => {\r\n      return (\r\n        newPluggedInID.indexOf(device.deviceId) >= 0 &&\r\n        device.kind === 'audioinput'\r\n      ); \r\n    });\r\n    if (newMic.length > 1) {\r\n      console.error('multiple new mics detected')\r\n    }\r\n    if (newCam.length > 1) {\r\n      console.error('multiple new cams detected');\r\n    }\r\n    const newMicID = newMic[0].deviceId;\r\n\r\n    return [newMicID, newCam[0]];\r\n  }\r\n\r\n  const checkIfMac = (resolve) => {\r\n    let faceTimeDevice = undefined;\r\n    let defaultMic = undefined;\r\n    return new Promise(() => {\r\n      navigator.mediaDevices.enumerateDevices().then(devices => {\r\n        faceTimeDevice = devices.filter(device => {\r\n          return device.label.toLowerCase().includes('facetime');\r\n        });\r\n        defaultMic = devices.filter(device => {\r\n          return device.deviceId === 'default'\r\n        });\r\n      }).then(()=> {\r\n        resolve(faceTimeDevice[0], defaultMic[0]);\r\n      });\r\n    })\r\n  }\r\n\r\n  let isMac = false;\r\n\r\n  const startFaceTimeCam = (faceTimeDevice, defaultMic) => {\r\n    if (faceTimeDevice) {\r\n      const device = helper_extractRelevantCamInfo(faceTimeDevice)\r\n      device.mic_info = defaultMic.deviceId;\r\n      setAvailableCams([device]);\r\n      document.getElementById('startBtn').disabled = false;\r\n      document.getElementById('startBtn').click();\r\n      document.getElementById('dummyBtn').disabled = false;\r\n      document.getElementById('dummyBtn').click();\r\n      cogoToast.success('Mac FaceTime Camera started', {\r\n        position: 'top-left',\r\n        hideAfter: 1,\r\n        onClick: hide => {\r\n          hide()\r\n        }\r\n      });\r\n      props.updateDetectedNumCams(1);\r\n      isMac = true;\r\n    }\r\n  }\r\n\r\n\r\n  const addNewCamMic = () => {\r\n    // let isMac = false;\r\n    try {\r\n      checkIfMac(startFaceTimeCam);\r\n    } catch (Exception) {\r\n      // console.err('not a mac')\r\n    }\r\n    navigator.mediaDevices.enumerateDevices().then(devices => {\r\n      const allDevices = devices.filter(device => {\r\n        return (\r\n          device.label.toLowerCase().includes('aoni') &&\r\n          !device.label.toLowerCase().includes('communication') &&\r\n          !device.label.toLowerCase().includes('default')\r\n          // !device.deviceId.toLowerCase().includes('communication') &&\r\n          // !device.deviceId.toLowerCase().includes('default') && (\r\n          //   device.kind === 'audioinput' || device.kind === 'videoinput'\r\n          // )\r\n        );\r\n      });\r\n      let detectedTwoDevices = false;\r\n\r\n      const idAoni = allDevices.map(device => {\r\n        return device.deviceId;\r\n      });\r\n      console.log(idAoni);\r\n      // const newPluggedInPaired = allDevices.map(device => [device.kind, device.deviceId])\r\n      // console.log(newPluggedInPaired);\r\n\r\n      const newPluggedInID = idAoni.diff(pluggedInDevices);\r\n      if (newPluggedInID.length === 0) {\r\n        // console.log('no new devices detected');\r\n        if (!isMac) \r\n          cogoToast.warn('No additional webcams detected.', {hideAfter: 1});\r\n      } else if (newPluggedInID.length === 2) {\r\n        detectedTwoDevices = true;\r\n        // console.log(\r\n        //   'new devices: ' + newPluggedInID.map(d => d.substring(0, 5))\r\n        // );\r\n      }\r\n\r\n      if (detectedTwoDevices) {\r\n        let [newMicID, newCamDevice] = getNewMicCam(newPluggedInID, allDevices);\r\n        newCamDevice = helper_extractRelevantCamInfo(newCamDevice);\r\n        const existCamera = availableCams.filter(cam => {\r\n          return cam.camera_info.id === newCamDevice.camera_info.id;\r\n        })[0];\r\n        if (!existCamera) {\r\n          newCamDevice.mic_info = newMicID;\r\n          let temp = availableCams;\r\n          temp.push(newCamDevice);\r\n          setAvailableCams(temp);\r\n          // cogoToast.success(\r\n          //   'New webcam: ' + newCamDevice.camera_info.id.substring(0, 5) + ' added.'\r\n          // ), {\r\n          //   hideAfter: 0.5,\r\n          //   position: 'top-left',\r\n          //   onClick: hide => {\r\n          //     hide();\r\n          //   }\r\n          // };\r\n          cogoToast.success('Webcam: ' + newCamDevice.camera_info.id.substring(0, 5) + ' added.', {\r\n            hideAfter: 1,\r\n            position: 'top-left',\r\n            onClick: hide => hide()\r\n          });\r\n          document.getElementById('startBtn').disabled = false;\r\n          initCams();\r\n          setPluggedInDevices(idAoni);\r\n        }\r\n      }      \r\n    }).then(() => {\r\n        document.getElementById('dummyBtn').disabled = false;\r\n        document.getElementById('dummyBtn').click();\r\n    });\r\n  }\r\n\r\n  function useAvailableWebCams() {\r\n    //  runs once\r\n    useEffect(() => {\r\n      props.updateConnectionStatus();\r\n    }, [props.addCamState]);\r\n  }\r\n\r\n  const initCamsDummy = () => {\r\n    stopAllCams(true);\r\n  }\r\n\r\n  const startAllCams = () => {\r\n    const temp =\r\n    recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\r\n    // goes through all cams array and through each ID, accesses and opens it using navigator\r\n    availableCams.map(cam => {\r\n      // console.log(cam.mic_info);\r\n      if (!cam.mic_info) {\r\n        console.error('using default microphone...');\r\n      }\r\n      navigator.mediaDevices\r\n        .getUserMedia({\r\n          audio: {\r\n            deviceId: {exact: (cam.mic_info) ? cam.mic_info : 'default'}\r\n          },\r\n          video: {\r\n            frameRate: {exact: 30, ideal: 30},\r\n            width: {ideal: 1920},\r\n            height: {ideal: 1080},\r\n            deviceId: cam['camera_info'].id\r\n          }\r\n        })\r\n        .then(camera => {\r\n          // console.log(camera.getTracks().forEach(track=> {console.log(\"track:\" + track.label + \",\" + track.kind)}));\r\n          // console.log(\"////////////////////////\");\r\n          let recorder = RecordRTC(camera, {\r\n            recorderType: MediaStreamRecorder, //WebAssemblyRecorder,\r\n            type: 'video',\r\n            frameRate: 30,\r\n            desiredSampRate: 16000,\r\n            width: 1920,\r\n            height: 1080,\r\n            numberOfAudioChannels: 2,\r\n            disableLogs: true\r\n          });\r\n          if (recorder.getState() !== 'recording') {\r\n            recorder.camera = camera;\r\n            cam['recorder'] = recorder;\r\n            let video = cam['ref'];\r\n            try {\r\n              video.current.srcObject = camera;\r\n            } catch (NotYetLoadedException) {\r\n              //\r\n            }\r\n            // resetInitialCams(recorder);\r\n            recorder.startRecording();\r\n          }\r\n          triggerRecordStatusUpdate(temp, recorder, cam);\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n        return availableCams;\r\n    });\r\n  };\r\n\r\n  const stopAllCams = (dummy) => {\r\n    const temp =\r\n      recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\r\n      \r\n    availableCams.map(cam => {\r\n      let recorder = cam['recorder'];\r\n      if (recorder !== null) {\r\n        recorder.stopRecording(() => {\r\n          let blob = recorder.getBlob();\r\n          console.log(\r\n            '%c recorded data',\r\n            'background: #222; color: #bada55',\r\n            blob\r\n          );\r\n          if (dummy !== true) {\r\n            props.socket.emit('client: save data', {\r\n              name: qs(\"name\"),\r\n              sentence_index: qs(\"sentence_index\"),\r\n              camera_id: cam['camera_info'].id,\r\n              blob: blob\r\n            });\r\n          } else {\r\n            console.log('dummy received, did not save blob');\r\n          }\r\n\r\n        });\r\n        triggerRecordStatusUpdate(temp, recorder, cam);\r\n      }\r\n      return availableCams;\r\n    });\r\n  };\r\n\r\n  const triggerRecordStatusUpdate = (temp, recorder, cam) => {\r\n    try {\r\n      temp[cam['camera_info'].id.substring(0, 15)] = recorder.getState();\r\n      setRecordingStatus(temp);\r\n      props.updateConnectionStatus(temp);\r\n    } catch (NotYetLoadedException) {\r\n      cogoToast.warn('Camera not yet loaded!', {\r\n        hideAfter: 0,\r\n        onClick: hide => {\r\n          hide()\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const resumeAllCams = () => {\r\n    const temp =\r\n      recordingStatus === 'recording-status-loading...' ? {} : recordingStatus;\r\n    availableCams.map(cam => {\r\n      let recorder = cam['recorder'];\r\n      let state = undefined;\r\n      try {\r\n        state = recorder.getState();\r\n      } catch {\r\n        cogoToast.warn(\"Camera not yet loaded!\", {\r\n          hideAfter: 0,\r\n          onClick: hide => {\r\n            hide()\r\n          }\r\n        });\r\n      }\r\n      if (state === \"paused\") {\r\n        recorder.resumeRecording();\r\n      } else if (state === \"stopped\"){\r\n        try {\r\n          recorder.startRecording();\r\n        } catch (NotYetLoadedException) {\r\n          cogoToast.warn('Camera not yet loaded!', {\r\n            hideAfter: 0,\r\n            onClick: hide => {\r\n              hide()\r\n            }\r\n          });\r\n        }\r\n      }\r\n      triggerRecordStatusUpdate(temp, recorder, cam);\r\n      return availableCams;\r\n    });\r\n  }\r\n\r\n  useAvailableWebCams();\r\n\r\n  // dummy to fix bug of first video\r\n  props.socket.on('server: dummy vid, do not save', function() {\r\n    try {\r\n      document.getElementById('dummyBtn').click();\r\n      document.getElementById('dummyBtn').disabled = true;\r\n    } catch (NotYetLoadedException) {\r\n      console.error(NotYetLoadedException);\r\n    }\r\n  });\r\n\r\n  // this is actually what calls start cams\r\n  props.socket.on('server: start cams', function () {\r\n    try {\r\n      document.getElementById(\"resumeBtn\").click();\r\n      document.getElementById(\"resumeBtn\").disabled = true;\r\n      document.getElementById('stopBtn').disabled = false;\r\n    } catch (NotYetLoadedException) {\r\n      console.error(NotYetLoadedException)\r\n    }\r\n\r\n  });\r\n\r\n  // this is actually what calls stop cams\r\n  props.socket.on('server: stop cams', function () {\r\n    try {\r\n      document.getElementById('stopBtn').click();\r\n      document.getElementById('stopBtn').disabled = true;\r\n      document.getElementById(\"resumeBtn\").disabled = false;\r\n    } catch (NotYetLoadedException) {\r\n      console.error(NotYetLoadedException)\r\n    }\r\n  });\r\n\r\n  const debugControls = (debug) => {\r\n    if (debug) {\r\n      return (\r\n        <div>\r\n          {/* <p>Don't click these while actual testing</p> */}\r\n          <button id='dummyBtn' className=\"hidden_button\" onClick={initCamsDummy}>\r\n            dummy reset\r\n          </button>\r\n          <button id='startBtn' className=\"hidden_button\" onClick={startAllCams}>\r\n            start and pause all cams\r\n          </button>\r\n          <button id='resumeBtn' className=\"hidden_button\" onClick={resumeAllCams}>\r\n            resume all cams\r\n          </button>\r\n          <button id='stopBtn' className=\"hidden_button\" onClick={stopAllCams}>\r\n            stop all cams\r\n          </button>\r\n          <button\r\n            id='addCamBtn'\r\n            className='hidden_button'\r\n            onClick={addNewCamMic} \r\n          >\r\n            Add Cam\r\n          </button>\r\n          {/* <button id=\"setCompID\" onClick={getSetCompID}>get set computer ID</button> */}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  const renderCams = addCam => {\r\n\r\n    // initMics()\r\n    const debug = true;\r\n    let i = 0; \r\n    const comp_camsList = availableCams.map(cam => {\r\n      return (\r\n        <Webcam\r\n          key={i++}\r\n          name={'ID: ' + cam['camera_info'].id.substring(0, 15)}\r\n          videoRef={cam['ref']}\r\n        />\r\n      );\r\n    });\r\n      \r\n\r\n    return (\r\n      <div id='camera_list'>\r\n        {debugControls(debug)}\r\n        <div>\r\n          <button className='debug_button' style={{marginBottom: '1em'}} onClick={addCam}>Add Webcam</button>\r\n          <div className='cameras'>{comp_camsList}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  return renderCams(props.addCam);\r\n}","import React, { Component } from 'react'\r\nimport './NameField.scss'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class NameField extends Component {\r\n  saveName = () => {\r\n    let name = document.getElementById(\"name\").value;\r\n    // document.location.search = \"name=\" + name + \"&sentence_index=0\";\r\n    let url_state = '?name=' + name + '&sentence_index=0'\r\n    window.history.pushState(\r\n      null,\r\n      null,\r\n      url_state\r\n    );\r\n    \r\n    this.props.socket.emit('client: start testing', {\r\n      name,\r\n      sentence_index: 0\r\n    })\r\n    this.props.socket.emit('client: dummy vid, do not save');\r\n    this.props.socket.emit('client: update recording progress', 0);\r\n    this.props.socket.emit('client: save total time', [0,0,0]);\r\n    this.props.socket.emit('client: save total start time', new Date())\r\n    this.props.updateTesterContents();\r\n    this.props.updateGreenLightStatus(true);\r\n    \r\n  }\r\n\r\n  isNameEmpty = () => {\r\n    try {\r\n      return !document.getElementById(\"name\").value.replace(/\\s/g, '').length\r\n    }\r\n    catch (NotYetLoadedException) {\r\n      //\r\n    }\r\n  }\r\n\r\n  detectEnter = (e) => {\r\n    if (!this.isNameEmpty()) {\r\n      if (e.which === 13) {\r\n        this.saveName(e);\r\n      } \r\n    } else {\r\n      document.getElementById('nameNotFilled').innerText='请输入名字'\r\n    }\r\n  }\r\n\r\n  startBtn = (e) => {\r\n    if (!this.isNameEmpty()) {\r\n      if (!e.buttons) {\r\n        this.saveName(document.getElementById(\"name\").value);\r\n      }\r\n    } else {\r\n      document.getElementById('nameNotFilled').innerText = '请输入名字'\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='name_input'>\r\n          <input\r\n            type='text'\r\n            name='name'\r\n            id='name'\r\n            placeholder='输入名字（拼音）'\r\n            onKeyPress={this.detectEnter}\r\n            autoFocus\r\n            required\r\n          />\r\n          <br/>\r\n          <button className=\"btn btn-center\" onClick={this.startBtn}>开始实验</button>\r\n          {(this.isNameEmpty()) && <p className=\"warning_message\" id=\"nameNotFilled\"></p>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNameField.propTypes = {\r\n  socket: PropTypes.object.isRequired,\r\n  updateTesterContents: PropTypes.func.isRequired,\r\n  updateGreenLightStatus: PropTypes.func.isRequired,\r\n};","/* eslint-disable no-console */\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NameField from '../NameField/NameField';\r\nimport qs from '../../utils/qs';\r\n\r\nexport default function InProcessScreen(props) {\r\n  const [recording, setRecordState] = useState(false);\r\n  const [done_recording, setDoneRecording] = useState(false);\r\n  const [reset_state, reset] = useState(false);\r\n  const [nameSet, setName] = useState(qs('name'));\r\n\r\n  function updateSentence(data) {\r\n    reset(true);\r\n    props.updateSentence(data);\r\n  }\r\n\r\n  function getRecordState() {\r\n    if (recording) {\r\n      return 'Done';\r\n    } else if (done_recording && !reset_state) {\r\n      return 'Retry';\r\n    } else {\r\n      return 'Record';\r\n    }\r\n  }\r\n\r\n  function stopRecording() {\r\n    setDoneRecording(true);\r\n    setRecordState(false);\r\n    props.socket.emit('client: stop cams', 'in process screen');\r\n    props.socket.emit('client: set sentence content', {\r\n      name: qs(\"name\"),\r\n      sentence_index: props.curr_sentence_index+1,\r\n      content: props.curr_sentence\r\n    });\r\n    reset(false);\r\n    props.showFileSavingLoader();\r\n    props.updateSentence('$next');\r\n\r\n    props.updateGreenLightStatus(false);\r\n    props.stopTimer();\r\n    markSentenceAsDone(props.curr_sentence_index);\r\n  }\r\n\r\n  function markSentenceAsDone(curr_sentence_index) {\r\n    if (curr_sentence_index >= 0 ) props.updateRecordProgress(curr_sentence_index);\r\n  }\r\n\r\n  function startRecording() {\r\n    props.socket.emit('client: start cams', 'in process screen');\r\n    setRecordState(true);\r\n    props.startTimer();\r\n    document.getElementById('testerRecordBtn').className = 'btn btn-danger';\r\n\r\n  }\r\n\r\n  function record() {\r\n    document.getElementById('showSavedFilesBtn').disabled = false;\r\n    if (recording) {\r\n      stopRecording();\r\n    } else {\r\n      startRecording();\r\n    }\r\n  }\r\n\r\n  \r\n  function disableNextButtonIfCurrNotRead() {\r\n    if (!props.debugMode) {\r\n      const recordedYet =\r\n      props.recordedProgress > props.curr_sentence_index;\r\n      try {\r\n        if (recordedYet) {\r\n          document.getElementById('testerNextBtn').disabled = false;\r\n        } else {\r\n          document.getElementById('testerNextBtn').disabled = true;\r\n        }\r\n      } catch (Exception) {\r\n        // console.log(Exception);\r\n      }\r\n    }\r\n  }\r\n\r\n  function makeEmojiLayout(msg, emoji) {\r\n    return (\r\n      <div className='emoji-layout-container'>\r\n        <div className='emoji-layout-emoji-left'> {emoji}</div>\r\n        <div>\r\n          {msg}\r\n        </div>\r\n        <div className='emoji-layout-emoji-right'> {emoji}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function displaySentenceToBeRead() {\r\n    disableNextButtonIfCurrNotRead();\r\n    const recordedYet = \r\n      (props.curr_sentence_index > 0) ? \r\n      props.recordedProgress >= props.curr_sentence_index : \r\n      false;\r\n    const emoji = recordedYet ? '↺' : '';\r\n    let sentence = props.data[props.curr_sentence_index];\r\n    if (sentence) {\r\n      // const line1 = sentence.substring(0,10)\r\n      // const line2 = sentence.substring(10);\r\n      sentence = makeEmojiLayout(sentence, emoji);\r\n    }\r\n    \r\n    // const sentence = recordedMessage + ' ' + props.data[props.curr_sentence_index] + ' ' + recordedMessage;\r\n    const recordedClassName = recordedYet ? 'recorded_sentence_highlight sentence_to_be_read' : 'sentence_to_be_read'\r\n    return (\r\n      <div>\r\n        <div className={recordedClassName}>\r\n          {/* <p style={{fontSize: '16px'}}>[{props.curr_sentence_index}]</p> */}\r\n          {sentence}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  \r\n\r\n  function trans(text) {\r\n    if (text === 'Done') {\r\n      return '结束录制';\r\n    } else if (text === 'Retry') {\r\n      return '开始录制';\r\n    } else if (text === 'Record') {\r\n      return '开始录制'\r\n    } else {\r\n      return text;\r\n    }\r\n  }\r\n\r\n  function updateTesterContents() {\r\n    setName(true);\r\n  }\r\n\r\n  function getContents() {\r\n    if (!nameSet) {\r\n      return (\r\n        <div>\r\n          <NameField\r\n            socket={props.socket}\r\n            updateTesterContents={updateTesterContents}\r\n            updateGreenLightStatus={props.updateGreenLightStatus}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      try {\r\n        let recordTimeEle = document.getElementById('record_time_content');\r\n        let recordTimeMsg = document.getElementById('record_time_msg');\r\n        let colorRecordTime = (recordTimeEle.innerText === '00:00:00') ? 'gray' : 'red';\r\n        if (colorRecordTime === 'gray') {\r\n          recordTimeEle.style.transition = 'all 0.5 ease'\r\n          recordTimeMsg.style.transition = 'all 0.5 ease'\r\n          recordTimeEle.style.color = 'black';\r\n          recordTimeMsg.style.color = 'black';\r\n        } else {\r\n          recordTimeEle.style.transition = 'all 0.5 ease'\r\n          recordTimeMsg.style.transition = 'all 0.5 ease'\r\n          recordTimeEle.style.color = '#FF1053';\r\n          recordTimeMsg.style.color = '#FF1053';\r\n        }\r\n      } catch (NotYetLoadedException) {\r\n        //\r\n      }\r\n      return (\r\n        <div>\r\n          {displaySentenceToBeRead()}\r\n          <div className='recording_hint'>\r\n          <pre id='record_time_content'>00:00:00</pre>\r\n          <pre id='record_time_msg'>录制中</pre>\r\n            \r\n          </div>\r\n          <button\r\n            id='testerRecordBtn'\r\n            className={\r\n              getRecordState() === 'Done'\r\n                ? 'btn btn-danger'\r\n                : 'btn btn_highlight_green'\r\n            }\r\n            onClick={record}\r\n            disabled={\r\n              !props.recordGreenLight ||\r\n              props.numFilesSaved % props.requiredNumCams !== 0 || \r\n              !props.connectedToServer\r\n            }\r\n          >\r\n            {trans(getRecordState())}\r\n          </button>\r\n          <br />\r\n          <button\r\n            className='btn'\r\n            id='testerPrevBtn'\r\n            onClick={() => updateSentence('$prev')}\r\n            disabled={\r\n              props.curr_sentence_index === 0 ||\r\n              !props.recordGreenLight ||\r\n              props.numFilesSaved % props.requiredNumCams !== 0 ||\r\n              recording\r\n            }\r\n          >\r\n            ⬅上一句\r\n          </button>\r\n          <button\r\n            className='btn'\r\n            id='testerNextBtn'\r\n            onClick={() => updateSentence('$next')}\r\n            disabled={\r\n              props.curr_sentence_index === props.data_length - 1 ||\r\n              !props.recordGreenLight ||\r\n              props.numFilesSaved % props.requiredNumCams !== 0 ||\r\n              recording\r\n            }\r\n          >\r\n            下一句➡\r\n          </button>\r\n          {(props.detectedNumCams === 0) && <p className=\"warning_message\">请加摄像头</p>}\r\n          {(!props.connectedToServer) && <p className=\"warning_message\">请确认您链接到服务器</p>}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='test_container'>\r\n      {getContents()}\r\n    </div>\r\n  );\r\n}\r\n\r\nInProcessScreen.propTypes = {\r\n  curr_sentence_index: PropTypes.number.isRequired,\r\n  curr_sentence: PropTypes.string.isRequired,\r\n  data_length: PropTypes.number.isRequired,\r\n  updateSentence: PropTypes.func.isRequired,\r\n  socket: PropTypes.object.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  updateGreenLightStatus: PropTypes.func.isRequired,\r\n  recordGreenLight: PropTypes.bool.isRequired,\r\n  numFilesSaved: PropTypes.number.isRequired,\r\n  requiredNumCams: PropTypes.number.isRequired,\r\n  stopTimer: PropTypes.func.isRequired,\r\n  startTimer: PropTypes.func.isRequired,\r\n  recordedProgress: PropTypes.number.isRequired,\r\n  updateRecordProgress: PropTypes.func.isRequired,\r\n  showFileSavingLoader: PropTypes.func.isRequired,\r\n  debugMode: PropTypes.bool.isRequired,\r\n  connectedToServer: PropTypes.bool.isRequired,\r\n  detectedNumCams: PropTypes.number.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport './Tester.scss';\r\nimport PropTypes from 'prop-types';\r\nimport InProcessScreen from './InProcessScreen.js';\r\nimport qs from '../../utils/qs'\r\n// import ProgressBar from '../ProgressBar'\r\n\r\nfunction Tester(props) {\r\n  const [intervalID, setIntervalID] = useState(undefined);\r\n\r\n  function comp_inProcessScreen() {\r\n    return (\r\n      <InProcessScreen\r\n        updateSentence={props.updateSentence}\r\n        curr_sentence_index={props.curr_sentence_index}\r\n        data_length={props.data_length}\r\n        socket={props.socket}\r\n        data={props.data}\r\n        curr_sentence={props.curr_sentence}\r\n        recordGreenLight={props.recordGreenLight}\r\n        updateGreenLightStatus={props.updateGreenLightStatus}\r\n        numFilesSaved={props.numFilesSaved}\r\n        requiredNumCams={props.requiredNumCams}\r\n        stopTimer={stopTimer}\r\n        startTimer={startTimer}\r\n        recordedProgress={props.recordedProgress}\r\n        updateRecordProgress={props.updateRecordProgress}\r\n        showFileSavingLoader={props.showFileSavingLoader}\r\n        debugMode={props.debugMode}\r\n        connectedToServer={props.connectedToServer}\r\n        detectedNumCams={props.detectedNumCams}\r\n      />\r\n    );\r\n  }\r\n\r\n  function stopTimer() {\r\n    clearInterval(intervalID);\r\n    document.getElementById('record_time_content').innerHTML = '00:00:00';\r\n  }\r\n\r\n  function startTimer() {\r\n    setIntervalID(createInterval());\r\n  }\r\n\r\n  function createInterval() {\r\n    let time = [0, 0, 0];\r\n    return setInterval(() => {\r\n      let hour = time[0];\r\n      let min = time[1];\r\n      let sec = time[2];\r\n\r\n      if (sec < 60) {\r\n        sec += 1;\r\n      }\r\n      if (sec === 60) {\r\n        min += 1;\r\n        sec = 0;\r\n      }\r\n      if (min === 60) {\r\n        hour += 1;\r\n        min = 0;\r\n      }\r\n      time = [hour, min, sec];\r\n      document.getElementById('record_time_content').innerHTML =\r\n        ('0' + hour).slice(-2) +\r\n        ':' +\r\n        ('0' + min).slice(-2) +\r\n        ':' +\r\n        ('0' + sec).slice(-2);\r\n      }, 10);\r\n  }\r\n\r\n  return (\r\n    <div className='testing_screen'>\r\n      {props.comp_totalProgress(false, 1.5)}\r\n      <div></div>\r\n      {/* <span/> */}\r\n      {props.comp_saveProgress()}\r\n      <div className='middle'>\r\n        <div className='inner'>{comp_inProcessScreen()}</div>\r\n      </div>\r\n      <pre\r\n        hidden={\r\n          props.recordGreenLight ||\r\n          props.curr_sentence_index === 0 ||\r\n          !qs('name')\r\n        }\r\n        className='warning_message'\r\n      >\r\n        如果等保存时间多余10秒钟，通知老师来从设置机器\r\n      </pre>\r\n    </div>\r\n  );\r\n}\r\n\r\nTester.propTypes = {\r\n  updateSentence: PropTypes.func.isRequired,\r\n  curr_sentence_index: PropTypes.number.isRequired,\r\n  curr_sentence: PropTypes.string.isRequired,\r\n  data_length: PropTypes.number.isRequired,\r\n  socket: PropTypes.object.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  recordGreenLight: PropTypes.bool.isRequired,\r\n  updateGreenLightStatus: PropTypes.func.isRequired,\r\n  numFilesSaved: PropTypes.number.isRequired,\r\n  requiredNumCams: PropTypes.number.isRequired,\r\n  recordedProgress: PropTypes.number.isRequired,\r\n  updateRecordProgress: PropTypes.func.isRequired,\r\n  totalTime: PropTypes.array.isRequired,\r\n  updateTotalTime: PropTypes.func.isRequired,\r\n  showFileSavingLoader: PropTypes.func.isRequired,\r\n  debugMode: PropTypes.bool.isRequired,\r\n  connectedToServer: PropTypes.bool.isRequired,\r\n  detectedNumCams: PropTypes.number.isRequired,\r\n  comp_saveProgress: PropTypes.func.isRequired,\r\n  comp_totalProgress: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Tester;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class TableHeader extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='table_header_footer'>\r\n          <h3>Sentence</h3>\r\n          {/* <div>Length</div>\r\n          <div>Actions</div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './TableRow.scss';\r\n// import Actions from './Actions';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class TableRow extends Component {\r\n  getClassOfRowItem = () => {\r\n    let read = this.props.read ? 'read row_item' : 'row_item';\r\n    // let sentence = this.props.sentence;\r\n    let is_current = this.props.curr_sentence_index === this.props.index ? ' curr_sentence' : '';\r\n    return read + is_current;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='table_row'>\r\n          <div className={this.getClassOfRowItem()}>\r\n            {this.props.index + \": \" + this.props.sentence}\r\n          </div>\r\n          {/* <div className='row_item'>00:00 / {this.props.time} </div> */}\r\n          {/* <Actions /> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTableRow.propTypes = {\r\n  sentence: PropTypes.string.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  curr_sentence_index: PropTypes.number.isRequired,\r\n  time: PropTypes.string.isRequired,\r\n  read: PropTypes.bool.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport TableRow from './TableRow.js';\r\nimport PropTypes from 'prop-types';\r\nimport './TableData.scss';\r\n\r\nexport default class TableData extends Component {\r\n  updateDataOnPageChange = () => {};\r\n  render() {\r\n    let data = this.props.data;\r\n    let page = this.props.curr_page;\r\n    let max_per_page = this.props.max_per_page;\r\n    let beg = page * max_per_page - max_per_page;\r\n    let end = beg + max_per_page;\r\n    let small_data = data.slice(beg, end);\r\n    let rowItems = small_data.map((sentence, i) => (\r\n      <TableRow\r\n        curr_sentence_index={this.props.curr_sentence_index}\r\n        sentence={sentence}\r\n        time='00:00'\r\n        read={false}\r\n        key={sentence+\":\"+i}\r\n        index={i + beg}\r\n      />\r\n    ));\r\n\r\n    return <div className='table'>{rowItems}</div>;\r\n  }\r\n}\r\n\r\nTableData.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  curr_sentence_index: PropTypes.number.isRequired,\r\n  curr_page: PropTypes.number.isRequired,\r\n  max_per_page: PropTypes.number.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class PageNum extends Component {\r\n  render() {\r\n    return (\r\n      <div \r\n        className={this.props.selected ? 'page_num' : 'can_click_num page_num'}\r\n        onClick={() => this.props.updatePage(this.props.num)}>\r\n        {this.props.num}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPageNum.propTypes = {\r\n  num: PropTypes.number.isRequired,\r\n  selected: PropTypes.bool.isRequired,\r\n  updatePage: PropTypes.func.isRequired\r\n};\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class PageInput extends Component {\r\n  handleChange = (event) => {\r\n    this.props.updatePage(Number(event.target.value));\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor='page'>Page:</label>\r\n          <input\r\n            type='text'\r\n            value={this.props.curr_page}\r\n            onChange={this.handleChange}\r\n            className = 'debug_text_input'\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPageInput.propTypes = {\r\n  updatePage: PropTypes.func.isRequired,\r\n  curr_page: PropTypes.number.isRequired\r\n}","import React, { Component } from 'react'\r\nimport './TableFooter.scss'\r\nimport PageNum from './PageNum.js'\r\nimport next from '../../assets/svg/collapse-chevron.svg'\r\nimport prev from '../../assets/svg/expand-chevron.svg';\r\nimport PropTypes from 'prop-types';\r\nimport PageInput from './PageInput.js'\r\nimport beg from '../../assets/svg/beg.svg'\r\nimport end from '../../assets/svg/end.svg';\r\n\r\nexport default class TableFooter extends Component {\r\n  updatePage=(page_num) => {\r\n    this.props.updatePage(page_num);\r\n  }\r\n\r\n  render() {\r\n    let curr_page = this.props.curr_page;\r\n    let max_per_page = this.props.max_per_page;\r\n    let mid_point = Math.floor(max_per_page / 2)\r\n    let max_page = Number(((this.props.total_data + 1) / this.props.max_per_page + 1).toFixed(0));\r\n    let page_nums = Array.from(new Array(max_per_page), (x, i) => { \r\n      let min = 0;\r\n      if (curr_page <= mid_point) {\r\n        min = i;\r\n      } else if (curr_page >= max_page - mid_point) {\r\n        min = i + max_page - max_per_page;\r\n      } else {\r\n        min = i + curr_page - mid_point - 1;\r\n      }\r\n      return min;\r\n    });\r\n    let nums_list = page_nums.map((i) => {\r\n      i = i + 1;\r\n      return <PageNum num={i} selected={curr_page === i} key={i} updatePage={this.props.updatePage}/>\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <div className='table_header_footer'>\r\n          <div className='table_footer'>\r\n            <div className='left_footer'>\r\n              <PageInput\r\n                updatePage={this.props.updatePage}\r\n                curr_page={this.props.curr_page}\r\n              />\r\n            </div>\r\n            <div className='right_footer'>\r\n              <img\r\n                src={beg}\r\n                alt=''\r\n                className='small_btn'\r\n                onClick={() => this.props.updatePage(1)}\r\n              />\r\n              <img\r\n                src={prev}\r\n                alt=''\r\n                className='small_btn'\r\n                onClick={() => this.props.updatePage(curr_page - 1)}\r\n              />\r\n              {nums_list}\r\n              <img\r\n                src={next}\r\n                alt=''\r\n                className='small_btn'\r\n                onClick={() => this.props.updatePage(curr_page + 1)}\r\n              />\r\n              <img\r\n                src={end}\r\n                alt=''\r\n                className='small_btn'\r\n                onClick={() => this.props.updatePage(max_page)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTableFooter.propTypes = {\r\n  updatePage: PropTypes.func.isRequired,\r\n  curr_page: PropTypes.number.isRequired,\r\n  total_data: PropTypes.number.isRequired,\r\n  max_per_page: PropTypes.number.isRequired\r\n};","import React, { Component } from 'react'\r\nimport TableHeader from './TableHeader.js'\r\nimport './Table.scss'\r\nimport TableData from './TableData.js'\r\nimport PropTypes from 'prop-types';\r\nimport TableFooter from './TableFooter';\r\nexport default class Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableHeader />\r\n        <TableData\r\n          data={this.props.data}\r\n          curr_page={this.props.curr_page}\r\n          max_per_page={this.props.sentencesPerPageInTable}\r\n          curr_sentence_index={this.props.curr_sentence_index}\r\n        />\r\n        <TableFooter\r\n          total_data={this.props.data.length}\r\n          updatePage={this.props.updatePage}\r\n          curr_page={this.props.curr_page}\r\n          max_per_page={this.props.sentencesPerPageInTable}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTable.propTypes = {\r\n  curr_sentence_index: PropTypes.number.isRequired,\r\n  curr_page: PropTypes.number.isRequired,\r\n  updatePage: PropTypes.func.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  sentencesPerPageInTable: PropTypes.number.isRequired,\r\n};","import React, { Component } from 'react';\r\nimport Table from './Table';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class DataCollection extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='data_table'>\r\n          <Table\r\n            data={this.props.data}\r\n            curr_sentence_index={\r\n              this.props.curr_sentence_index\r\n            }\r\n            curr_page={this.props.curr_page}\r\n            updatePage={this.props.updatePage}\r\n            sentencesPerPageInTable={this.props.sentencesPerPageInTable}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDataCollection.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  curr_sentence_index: PropTypes.number.isRequired,\r\n  socket: PropTypes.object.isRequired,\r\n  updatePage: PropTypes.func.isRequired,\r\n  curr_page: PropTypes.number.isRequired,\r\n  sentencesPerPageInTable: PropTypes.number.isRequired,\r\n};\r\n","import React, { useEffect } from 'react'\r\nimport Modali, { useModali } from 'modali';\r\nimport PropTypes from 'prop-types';\r\nimport cogoToast from 'cogo-toast';\r\n\r\nexport default function Modal(props) {\r\n  const [completeModal, toggleCompleteModal] = useModali({\r\n    animated: true,\r\n    title: props.title,\r\n    message: props.message,\r\n    buttons: [\r\n      <Modali.Button\r\n        label={props.buttonCancel ? props.buttonCancel : ''}\r\n        isStyleCancel\r\n        className={!props.buttonCancel ? 'display_none' : ''}\r\n        key={props.buttonCancel}\r\n        hidden={!props.buttonCancel}\r\n        onClick={() => toggleCompleteModal()}\r\n      />,\r\n      <Modali.Button\r\n        label={props.buttonConfirm}\r\n        isStyleDestructive\r\n        onClick={() => {\r\n          if (props.confirmFunc) props.confirmFunc();\r\n          toggleCompleteModal();\r\n          if (props.toast) cogoToast.info(props.toast, {\r\n            onClick: hide => {\r\n              hide()\r\n            }\r\n          });\r\n        }}\r\n        hidden={!props.buttonConfirm}\r\n        key={props.buttonConfirm}\r\n      />\r\n    ]\r\n  });\r\n  useEffect(() => {\r\n    if (props.onLoadFunc) props.onLoadFunc()\r\n    try {\r\n      if (!props.buttonCancel)\r\n        document.getElementsByClassName(\r\n          'modali-button-cancel'\r\n          )[0].className += ' display_none';\r\n      if (!props.buttonConfirm)\r\n        document.getElementsByClassName(\r\n          'modali-button-destructive'\r\n        )[0].className += ' display_none';\r\n    } catch (NotYetLoadedException) {\r\n      // console.log(NotYetLoadedException);\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div style={{ height: '0px' }}>\r\n      <button\r\n        className=\"hidden_button\"\r\n        id={props.modalID}\r\n        onClick={toggleCompleteModal}\r\n      >\r\n        toggle modal\r\n      </button>\r\n      <Modali.Modal {...completeModal} />\r\n    </div>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  socket: PropTypes.object,\r\n  title: PropTypes.string,\r\n  message: PropTypes.any,\r\n  buttonCancel: PropTypes.string,\r\n  buttonConfirm: PropTypes.string,\r\n  toast: PropTypes.string,\r\n  confirmFunc: PropTypes.func,\r\n  modalID: PropTypes.string,\r\n  onLoadFunc: PropTypes.func,\r\n  buttonConfirmId: PropTypes.string\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Status(props) {\r\n  const [remainingWords, setRemainingWords] = useState(Infinity)\r\n\r\n  let intervalID = undefined\r\n\r\n  useEffect(() => {\r\n    // console.log('status page loaded');\r\n    clearInterval(intervalID);\r\n    props.socket.on('server: response for start time', startTime => {\r\n      try {\r\n        // alert('setting starttime');\r\n        startTime = new Date(startTime);\r\n        const startTimeTotalSecs = getSeconds(startTime);\r\n        const nowSecs = getSeconds(new Date());\r\n        let diffSecs = nowSecs - startTimeTotalSecs;\r\n        // let expectedTime = diffSecs / (props.recordedProgress / props.data_length - 1)\r\n        // console.log(diffSecs);\r\n        const hours = Math.floor(diffSecs / 3600)\r\n        diffSecs -= hours * 3600;\r\n        const mins = Math.floor(diffSecs / 60);\r\n        diffSecs -= mins * 60;\r\n        const secs = diffSecs\r\n        const totalRecordingTime = [hours, mins, secs];\r\n        displayTime(totalRecordingTime);\r\n        intervalID = setInterval(() => tick(totalRecordingTime), 1000);\r\n      } catch (NotYetLoadedException) {\r\n        console.error(NotYetLoadedException);\r\n      }\r\n    });\r\n    showTime();\r\n    setRemainingWords(0);\r\n    console.log(remainingWords);\r\n    // setRemainingWords(totalWords - wordsCompleted)\r\n  }, [])\r\n\r\n  const displayTime = time => {\r\n    try {\r\n      document.getElementById('total_time_elapsed').style.color = 'rgba(255,255,255,0.8';\r\n      document.getElementById('total_time_elapsed').innerText =\r\n        '总记录时间: ' +\r\n        ('0' + time[0]).slice(-2) +\r\n        ':' +\r\n        ('0' + time[1]).slice(-2) +\r\n        ':' +\r\n        ('0' + time[2]).slice(-2);\r\n    } \r\n    catch(NotYetLoadedException) {\r\n      //\r\n    }\r\n  }\r\n\r\n  let time = undefined\r\n  const tick = initTime => {\r\n    if (!time) {\r\n      time = initTime;\r\n    } \r\n    // console.log('ticking')\r\n    let hour = time[0];\r\n    let min = time[1];\r\n    let sec = time[2];\r\n\r\n    if (sec < 60) {\r\n      sec += 1;\r\n    }\r\n    if (sec === 60) {\r\n      min += 1;\r\n      sec = 0;\r\n    }\r\n    if (min === 60) {\r\n      hour += 1;\r\n      min = 0;\r\n    }\r\n    time = [hour, min, sec];\r\n    // console.log(time);\r\n    try {\r\n      displayTime(time);\r\n    } catch (SomeError) {\r\n      console.error(SomeError);\r\n    }\r\n  };\r\n\r\n  const getSeconds = date => \r\n    date.getHours() * 60 * 60 +\r\n    date.getMinutes() * 60 +\r\n    date.getSeconds();\r\n\r\n  const helper_showTime = () => {\r\n    // console.log('asking for start time now');\r\n    props.socket.emit('client: ask for start time');\r\n  };\r\n\r\n  const showTime = () => {\r\n    try {\r\n      document.getElementById('showTimeBtn').click();\r\n      document.getElementById('showTimeBtn').disabled = true;\r\n    } catch (NotYetLoadedException) {\r\n      //\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <pre id='total_time_elapsed' style={{color: 'rgba(255,255,255,0.8'}}>总记录时间: 00:00:00</pre>\r\n      <button\r\n        onClick={helper_showTime}\r\n        id='showTimeBtn'\r\n        className='hidden_button'\r\n      ></button>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatus.propTypes = {\r\n  // recordedProgress: PropTypes.number.isRequired,\r\n  // data_length: PropTypes.number.isRequired,\r\n  // recordGreenLight: PropTypes.bool.isRequired,\r\n  // helper_checkIfMobileView: PropTypes.func.isRequired,\r\n  socket: PropTypes.object.isRequired,\r\n  // totalWords: PropTypes.number.isRequired\r\n\r\n};","/**\r\n * **Based on: http://www.cssscript.com/demo/pure-css-css3-smooth-toggle-switch/**\r\n */\r\n\r\nimport React, { useEffect }from 'react'\r\nimport './toggle.scss'\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * \r\n * @param {*} props \r\n */\r\nexport default function Toggle(props) {\r\n  useEffect(() => {\r\n    const toggle = document.getElementById(props.id);\r\n    try {\r\n      toggle.addEventListener('change', () => {\r\n        props.onChangeFunc(toggle.checked);\r\n      });\r\n      // document.getElementsByClassName('switch-wrapper')[0].addEventListener('mouseover', () => {\r\n      //   document.getElementsByClassName('inset-toggle')[0].classList.add('switch-hover');\r\n      //   console.log('hovered over')\r\n      // });\r\n      // document.getElementsByClassName('switch-wrapper')[0].addEventListener('mouseout', () => {\r\n      //   document.getElementsByClassName('inset-toggle')[0].classList.remove('switch-hover');\r\n      //   console.log('hovered out')\r\n      // })\r\n    } catch (NotYetLoadedException) {\r\n      //\r\n    }\r\n  }, [])\r\n  return (\r\n    <div className=\"switch-wrapper\">\r\n      <div className=\"switch\">\r\n      <div className=\"invisible_pushdown\"></div>\r\n        <input type=\"checkbox\" name=\"toggle\" id={props.id}  checked={props.checked} onChange={props.updateDebugMode}/>\r\n        <label htmlFor=\"toggle\" className=\"inset-toggle\"><i></i></label>\r\n      </div>  \r\n    </div>\r\n  )\r\n}\r\n\r\nToggle.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  onChangeFunc: PropTypes.func.isRequired,\r\n  checked: PropTypes.bool.isRequired,\r\n  updateDebugMode: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport './Checkmark.scss'\r\n\r\n/**\r\n * **Based on: https://codepen.io/ashleygalante/pen/nwoKh**\r\n */\r\nexport default function Checkmark() {\r\n  return (\r\n    <div className=\"checkmark-container\">\r\n      <div className=\"checkmark\">\r\n        <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 161.2 161.2\" enableBackground=\"new 0 0 161.2 161.2\" xmlSpace=\"preserve\">\r\n          <path className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeMiterlimit=\"10\" d=\"M425.9,52.1L425.9,52.1c-2.2-2.6-6-2.6-8.3-0.1l-42.7,46.2l-14.3-16.4\r\n            c-2.3-2.7-6.2-2.7-8.6-0.1c-1.9,2.1-2,5.6-0.1,7.7l17.6,20.3c0.2,0.3,0.4,0.6,0.6,0.9c1.8,2,4.4,2.5,6.6,1.4c0.7-0.3,1.4-0.8,2-1.5\r\n            c0.3-0.3,0.5-0.6,0.7-0.9l46.3-50.1C427.7,57.5,427.7,54.2,425.9,52.1z\"/>\r\n          <circle className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"4\" strokeMiterlimit=\"10\" cx=\"80.6\" cy=\"80.6\" r=\"62.1\"/>\r\n          <polyline className=\"path\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeMiterlimit=\"10\" points=\"113,52.8 \r\n            74.1,108.4 48.2,86.4 \"/>\r\n          <circle className=\"spin\" fill=\"none\" stroke=\"#FFBA49\" strokeWidth=\"4\" strokeMiterlimit=\"10\" strokeDasharray=\"12.2175,12.2175\" cx=\"80.6\" cy=\"80.6\" r=\"73.9\"/>\r\n        </svg>\r\n      </div>\r\n      <p id=\"complete_message\">🔥 恭喜您完成 🔥</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './Fireworks.scss'\r\n\r\nexport default function Fireworks() {\r\n  return (\r\n    <div className=\"pyro\">\r\n      <div className=\"before\"></div>\r\n      <div className=\"after\"></div>\r\n      </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Checkmark from './Checkmark/Checkmark'\r\nimport Fireworks from './Fireworks/Fireworks'\r\nimport './CompleteAnimation.scss'\r\n\r\nexport default function CompleteAnimation() {\r\n  return (\r\n    <div className=\"CompleteAnimationBG\">\r\n      <Fireworks />\r\n      <Checkmark />\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Line, Circle } from 'rc-progress';\r\n\r\nexport default function ProgressBar(props) {\r\n  const percent = ((props.curr ) / (props.total + 1) * 100).toFixed(2);\r\n  const alignmentStyle = props.align === 'left' ? { margin: '0' } : {};\r\n  return (\r\n    <div className=\"progress_bar\" style={alignmentStyle}>\r\n      <pre style={{color: props.strokeColor}}>\r\n        {props.title}: {props.curr} / {props.total + 1} ({percent}%)\r\n      </pre>\r\n      <div style={{height: '7px'}}></div>\r\n      {props.shape === 'line' &&\r\n      <Line\r\n        className=\"line-progress\"\r\n        percent={percent}\r\n        strokeWidth={props.strokeWidth}\r\n        trailWidth={props.strokeWidth}\r\n        strokeColor = {props.strokeColor}\r\n        trailColor='#363732'\r\n      />}\r\n      {props.shape === 'circle' &&\r\n      <Circle \r\n        className=\"circle-progress\"\r\n        percent={percent}\r\n        strokeWidth={props.strokeWidth}\r\n        trailWidth={props.strokeWidth}\r\n        strokeColor = {props.strokeColor}\r\n        trailColor='#363732'\r\n      />}\r\n    </div>\r\n  );\r\n}\r\n\r\nProgressBar.propTypes = {\r\n  curr: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  align: PropTypes.string.isRequired,\r\n  strokeWidth: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  shape: PropTypes.string.isRequired,\r\n  strokeColor: PropTypes.string.isRequired,\r\n};\r\n","/* eslint-disable no-console */\r\nimport React from 'react';\r\nimport { Helmet } from 'react-helmet'\r\nimport update from 'react-addons-update'\r\nimport qs from '../utils/qs'\r\nimport cogoToast from 'cogo-toast';\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport io from 'socket.io-client';\r\nimport { useMediaQuery } from'react-responsive'\r\n// scss\r\nimport './App.scss';\r\n\r\n// components\r\nimport CameraList from '../components/CameraList/CameraList';\r\nimport Tester from '../components/Tester/Tester';\r\nimport DataCollection from '../components/Table/DataCollection';\r\nimport Modal from '../components/Modal'\r\nimport Status from '../components/Status'\r\nimport Toggle from '../components/Toggle/Toggle'\r\nimport CompleteAnimation from '../components/CompleteAnimation/CompleteAnimation'\r\nimport ProgressBar from '../components/ProgressBar'\r\n\r\n// data\r\n//import sentences from '../assets/data/sentences.txt';\r\n//import pinyin from '../assets/data/sentences-pinyin-accent-nospecialchar.txt'\r\n// import sentences from '../assets/data/sentences-english-test.txt';\r\n\r\n// util\r\nimport ip_util from '../utils/ip'\r\n\r\n// chevron\r\nimport up_chevron from '../assets/svg/up-chevron.svg'\r\nimport down_chevron from '../assets/svg/down-chevron.svg'\r\n\r\n\r\nclass App extends React.Component {\r\n  /**\r\n   * **Basic Configuration**\r\n   */\r\n  sentencesPerPageInTable = 4; // sentences per page of Table\r\n  curr_index = qs('sentence_index'); // extracts the curr index from URL\r\n  ip_address = 'http://192.168.0.103:5000'; // default IP address of server\r\n\r\n  /**\r\n   * **CogoToast References to call to hide toasts**\r\n   */\r\n  showNoCamsRef = undefined;\r\n  hideServerOfflineRef = undefined;\r\n\r\n  /**\r\n   * **ReactJS Framework Initializing States onCreate**\r\n   * Constructor for main react App Component\r\n   * @param {object} props\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      addCamState: false,\r\n      connectedOrderMap: {},\r\n      connectedToServer: false,\r\n      computerID: -1,\r\n      computerStatus: {},\r\n      currSentence: '',\r\n      currSentenceIndex: this.curr_index ? Number(this.curr_index) : 0,\r\n      currPageInTable: this.curr_index\r\n        ? Math.floor(Number(this.curr_index) / this.sentencesPerPageInTable) + 1\r\n        : 1,\r\n      data: [],\r\n      detectedNumCams: 0,\r\n      debugMode: false,\r\n      ip: this.ip_address,\r\n      name: '',\r\n      numFilesSavedTotal: 0,\r\n      numFilesSavedInd: 0,\r\n      recordProgress: 0,\r\n      recordGreenLight: false,\r\n      remainingWords: 0,\r\n      requiredNumCams: 8,\r\n      sentencesPerPageInTable: this.sentencesPerPageInTable, // sentences per page\r\n      startTime: undefined,\r\n      socket: io(this.ip_address),\r\n      totalTime: [],\r\n      totalWords: 0\r\n    };\r\n  }\r\n\r\n  Desktop = ({ children }) => {\r\n  const isDesktop = useMediaQuery({ minWidth: 992 });\r\n  // if (isDesktop) {this.setState({viewMode: 'desktop'});}\r\n  // console.log('This is desktop mode');\r\n  return isDesktop ? children : null\r\n  }\r\n\r\n  Tablet = ({ children }) => {\r\n    const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 991 });\r\n    // console.log('isTablet: ', isTablet);\r\n    // if (isTablet) {this.setState({viewMode: 'tablet'})}\r\n    return isTablet ? children : null\r\n  }\r\n  Mobile = ({ children }) => {\r\n    const isMobile = useMediaQuery({ maxWidth: 767 });\r\n    // if (isMobile) {this.setState({viewMode: 'mobile'})}\r\n    return isMobile ? children : null\r\n  }\r\n  Default = ({ children }) => {\r\n    // console.log('This is not mobile mode');\r\n    const isNotMobile = useMediaQuery({ minWidth: 768 });\r\n    // if (isNotMobile) {this.setState({viewMode: 'default'})}\r\n    return isNotMobile ? children : null\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Helmet><title>s3and0s—webcam recorder</title></Helmet>\r\n        {/* <Route path='/' exact component={} /> */}\r\n        <Route path='/admin' exact component={this.main_adminView} />\r\n         <div>\r\n          <this.Desktop>{this.main_userView()}</this.Desktop>\r\n          <this.Tablet>{this.main_userView()}</this.Tablet>\r\n          <this.Mobile>\r\n            {this.main_adminView()}\r\n            <div className='mobileAdminView' style={{textAlign: 'center'}}>\r\n              {/* <hr/> */}\r\n              {/* <p><strong>Sentence: </strong></p> */}\r\n              <p style={{fontSize: '0.8em'}}>句子索引: {this.state.currSentenceIndex}</p>\r\n              {/* <hr/> */}\r\n              {(this.state.pinyin) ? this.state.pinyin[this.state.currSentenceIndex]: ''}\r\n              <br/>\r\n              {this.state.data[this.state.currSentenceIndex]}\r\n              {/* <hr/> */}\r\n              <Status socket={this.state.socket}/>\r\n              {this.comp_totalProgress(true, 4)}\r\n              {/* <hr/> */}\r\n              {this.comp_saveProgress(true)}\r\n              {/* <hr/> */}\r\n              {this.terminal()}\r\n            </div>\r\n\r\n            {this.comp_bottomAdmin()}\r\n            </this.Mobile>\r\n          <this.Default>{null}</this.Default>\r\n        </div>\r\n        {this.comp_modals()}\r\n        {this.comp_completeAnimation()}\r\n      </Router>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.helper_emitInitialSocketMessages();\r\n      ///\r\n      var fileNum = 2000;\r\n      var newsentences = '/webcam-recorder/corpus/'+Math.floor(Math.random() * fileNum)+'.txt'\r\n      console.log(newsentences);\r\n      ///\r\n      //this.readTextFile(sentences, 'data');\r\n      /////\r\n      this.readTextFile(newsentences, 'data');\r\n      /////\r\n      //this.readTextFile(pinyin, 'pinyin');\r\n\r\n      this.initSocketListeners();\r\n      document.getElementById('debug_mode').checked =\r\n        this.state.requiredNumCams === 1;\r\n      window.addEventListener('keydown', this.handler_keydown);\r\n      window.addEventListener('keyup', this.handler_keyup);\r\n      if (useMediaQuery({ minWidth: 768 })) {\r\n        this.showNoCamsRef = this.helper_showNoCamsConnected();\r\n      }\r\n      setTimeout(() => {\r\n        if (\r\n          !document\r\n          .getElementsByClassName('server_status')[0]\r\n          .className.includes('server_online')\r\n        ) {\r\n          this.hideServerOfflineRef = this.helper_showServerNotOnline();\r\n        }\r\n      }, 1000);\r\n    } catch (NotYetLoadedException) {\r\n      // console.error(NotYetLoadedException)\r\n    }\r\n  }\r\n\r\n  terminal = () => {}\r\n\r\n  handler_hoverMouseOutDebug = () => {\r\n    try {\r\n      document.getElementsByClassName('debug-group')[0].className +=\r\n        ' ' + 'hideDebug';\r\n    } catch (NotYetLoadedException) {\r\n      console.error(NotYetLoadedException);\r\n    }\r\n  };\r\n\r\n  handler_hoverMouseOverDebug = () => {\r\n    try {\r\n      document\r\n        .getElementsByClassName('debug-group')[0]\r\n        .classList.remove('hideDebug');\r\n    } catch (NotYetLoadedException) {\r\n      console.error(NotYetLoadedException);\r\n    }\r\n  };\r\n\r\n  handler_hoverMouseOutBottom = () => {\r\n    try {\r\n      document.getElementsByClassName('panel_BG')[0].className +=\r\n        ' ' + 'hideBottom';\r\n    } catch (NotYetLoadedException) {\r\n      console.error(NotYetLoadedException);\r\n    }\r\n  };\r\n\r\n  handler_hoverMouseOverBottom = () => {\r\n    try {\r\n      document\r\n        .getElementsByClassName('panel_BG')[0]\r\n        .classList.remove('hideBottom');\r\n    } catch (NotYetLoadedException) {\r\n      console.error(NotYetLoadedException);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * **ReactJS Framework Method**\r\n   */\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handler_keydown);\r\n  }\r\n\r\n  comp_saveProgress = override => {\r\n    return (qs('name') || override) && this.state.requiredNumCams !==1 ? <ProgressBar\r\n          title=\"视频文件已保存\"\r\n          curr={this.state.numFilesSavedInd}\r\n          total={this.state.requiredNumCams - 1}\r\n          align={'center'}\r\n          strokeWidth={17}\r\n          shape='circle'\r\n          strokeColor='lightgreen'\r\n        /> : <></>\r\n  }\r\n\r\n  /**\r\n   * **Component: User Page**\r\n   * Renders components for desktop view\r\n   */\r\n  main_userView = () => {\r\n    return (\r\n      <div className='container'>\r\n        {/* <span id='debug_hover_area'> */}\r\n          {this.comp_debug()}\r\n        {/* </span> */}\r\n        {this.comp_tester()}\r\n        {/* <span id='bottom_hover_area'> */}\r\n        \r\n        {this.comp_bottomAdmin(true)}\r\n        {/* </span> */}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  comp_totalProgress = (override, strokeWidth) => {\r\n    return (qs('name') || override) ? <ProgressBar\r\n        shape='line'\r\n        title={'读完句子的进度'}\r\n        curr={this.state.recordProgress}\r\n        total={this.state.data.length - 1}\r\n        align={'center'}\r\n        strokeWidth={strokeWidth}\r\n        strokeColor='#3bb8ce'\r\n      /> : <></>\r\n  }\r\n\r\n  comp_bottomAdmin = (isMobile) => {\r\n    return <div className='contents'>\r\n            <div className=\"panel_BG hideBottom\">\r\n              <div style= {{marginTop: '-50px'}}>\r\n                <div style={{ width: '100vw', height: '50px', position: 'relative', top: '50px', left: '0'}} onClick={this.helper_toggleHideBottom}> </div>\r\n                <img style={{ position: 'relative', top: '0', left: '0'}} className='chevron' src={down_chevron}></img>\r\n              </div>\r\n              <div className='panel_container'>\r\n                <div className='left_panel'>{this.comp_dataCollection()}</div>\r\n                {isMobile &&\r\n                <div className='right_panel'>\r\n                  <h3>Cameras</h3>\r\n                  <div className='cameras_container'>\r\n                    {this.comp_cameraList()}\r\n                  </div>\r\n                </div>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n  }\r\n\r\n  /**\r\n   * **Component: Admin Page**\r\n   * Renders components for mobile view\r\n   */\r\n  main_adminView = () => {\r\n    return <div style={{ textAlign: 'center' }}>{this.comp_debug()}</div>;\r\n  };\r\n\r\n  /**\r\n   * **Component: PlaygroundPage**\r\n   * Renders components for experimental purposes\r\n   */\r\n  main_playground = () => {\r\n    return <Toggle />;\r\n  };\r\n\r\n  comp_debugHover = () => {};\r\n\r\n  /**\r\n   * **Component: Animation for Study Completion**\r\n   */\r\n  comp_completeAnimation = () => {\r\n    if (this.state.recordProgress + 1 === this.state.data.length) {\r\n      try {\r\n        document.getElementById('testerNextBtn').disabled = true;\r\n      } catch (NotYetLoadedException) {\r\n        //\r\n      }\r\n      return <CompleteAnimation />;\r\n    }\r\n  };\r\n\r\n  // * COMPONENT * //\r\n  comp_dataCollection = () => {\r\n    return (\r\n      <DataCollection\r\n        data={this.state.data}\r\n        updateName={this.updateName}\r\n        curr_sentence={this.state.currSentence}\r\n        socket={this.state.socket}\r\n        curr_sentence_index={this.state.currSentenceIndex}\r\n        curr_page={this.state.currPageInTable}\r\n        updatePage={this.updatePage}\r\n        sentencesPerPageInTable={this.state.sentencesPerPageInTable}\r\n      />\r\n    );\r\n  };\r\n\r\n  // * COMPONENT * //\r\n  comp_tester = () => {\r\n    return (\r\n      <Tester\r\n        updateSentence={this.updateSentence}\r\n        data={this.state.data}\r\n        curr_sentence_index={this.state.currSentenceIndex}\r\n        data_length={this.state.data.length}\r\n        first_sentence={this.state.data[this.state.currSentenceIndex]}\r\n        curr_sentence={this.state.currSentence}\r\n        socket={this.state.socket}\r\n        recordGreenLight={\r\n          this.state.recordGreenLight &&\r\n          this.state.numFilesSavedTotal % this.state.requiredNumCams === 0\r\n        }\r\n        debugMode={this.state.debugMode}\r\n        numFilesSaved={this.state.numFilesSavedTotal}\r\n        requiredNumCams={this.state.requiredNumCams}\r\n        updateGreenLightStatus={this.updateGreenLightStatus}\r\n        recordedProgress={this.state.recordProgress}\r\n        updateRecordProgress={this.updateRecordProgress}\r\n        totalTime={this.state.totalTime}\r\n        updateTotalTime={this.updateTotalTime}\r\n        showFileSavingLoader={this.disp_showFileSavingLoader}\r\n        connectedToServer={this.state.connectedToServer}\r\n        detectedNumCams={this.state.detectedNumCams}\r\n        comp_saveProgress={this.comp_saveProgress}\r\n        comp_totalProgress={this.comp_totalProgress}\r\n      />\r\n    );\r\n  };\r\n  getSentenceText = (id) => {\r\n    console.log(\"in app.js\"+\"id:\"+id);\r\n    return this.state.data[id];\r\n  }\r\n  getSentenceIndex = () => {\r\n    return this.state.currSentenceIndex - 1;\r\n  }\r\n\r\n  // * COMPONENT * //\r\n  comp_cameraList = () => {\r\n    return (\r\n      <CameraList\r\n        socket={this.state.socket}\r\n        getSentenceText={this.getSentenceText}\r\n        getSentenceIndex={this.getSentenceIndex}\r\n        computerID={this.state.computerID}\r\n        computerStatus={this.state.computerStatus}\r\n        updateConnectionStatus={this.updateConnectionStatus}\r\n        addCamState={this.state.addCamState}\r\n        toggleCamState={this.helper_toggleCamState}\r\n        updateDetectedNumCams={this.updateDetectedNumCams}\r\n        addCam={this.admin_resetCams}\r\n      />\r\n    );\r\n  };\r\n\r\n  // * COMPONENT * //\r\n  comp_status = () => {\r\n    return (\r\n      <Status\r\n        totalWords={this.state.totalWords}\r\n        data_length={this.state.data.length}\r\n        recordedProgress={this.state.recordProgress}\r\n        helper_checkIfMobileView={this.helper_checkIfMobileView}\r\n        recordGreenLight={this.state.recordGreenLight}\r\n        socket={this.state.socket}\r\n      />\r\n    );\r\n  };\r\n\r\n  // * COMPONENT * //\r\n  comp_modals = () => {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          modalID={'resetProgressModal'}\r\n          socket={this.state.socket}\r\n          title={'Are you sure?'}\r\n          message={'Resetting progress will be permanent.'}\r\n          buttonCancel={'Cancel'}\r\n          buttonConfirm={'Reset Progress'}\r\n          buttonConfirmId={'resetProgressBtn'}\r\n          toast={'Progress reset'}\r\n          confirmFunc={this.admin_resetProgress}\r\n        />\r\n        <Modal\r\n          modalID={'overallStatus'}\r\n          socket={this.state.socket}\r\n          title={'Status'}\r\n          onLoadFunc={this.getStatus}\r\n          message={this.comp_status()}\r\n          buttonConfirm={'Hide'}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  updateDebugMode = () => {\r\n    this.setState({ debugMode: !this.state.debugMode });\r\n  };\r\n\r\n  // * COMPONENT * //\r\n  comp_debug = () => {\r\n    return (\r\n      < div className = 'debug-group hideDebug' >\r\n        <label className='debug_label'>Admin: </label>\r\n\r\n        {/* <button\r\n          onClick={() => {\r\n            this.helper_toggleModal('overallStatus');\r\n            this.getStatus();\r\n          }}\r\n          className='debug_button'\r\n        >\r\n          Status\r\n        </button> */}\r\n        <button\r\n          id='resetCamsBtn'\r\n          className='debug_button'\r\n          onClick={this.admin_resetCams}\r\n        >\r\n          Add Webcam\r\n        </button>\r\n        <button\r\n          className='debug_button'\r\n          onClick={() => {\r\n            this.helper_toggleModal('resetProgressModal');\r\n          }}\r\n        >\r\n          Reset Progress\r\n        </button>\r\n\r\n        <div className='debug_inline_group'>\r\n          <label className='debug_label'>Debug: </label>\r\n          <Toggle\r\n            id='debug_mode'\r\n            onChangeFunc={this.handler_debugToggle}\r\n            checked={this.state.debugMode}\r\n            updateDebugMode={this.updateDebugMode}\r\n          />\r\n        </div>\r\n       {/* {(useMediaQuery({ minWidth: 768 })) &&<br/> } */}\r\n        <div className='debug_inline_group'>\r\n          <label htmlFor='' className='debug_label'>\r\n            Cams:{' '}\r\n          </label>\r\n          <input\r\n            id='numCamsInput'\r\n            type='text'\r\n            className='debug_text_input debug_sm_input warning_message'\r\n            value={this.state.detectedNumCams}\r\n            readOnly\r\n          />\r\n        </div>\r\n\r\n        <div className='debug_inline_group'>\r\n            <label htmlFor='' className='debug_label'>\r\n            Server:{' '}\r\n          </label>\r\n          <span className='server_status'></span>\r\n          <input\r\n            id='inputServerIP'\r\n            type='text'\r\n            className='debug_text_input warning_message'\r\n            value={this.state.ip}\r\n            onChange={this.handler_IPOnChange}\r\n          />\r\n          <button\r\n            className='debug_button'\r\n            onClick={this.handler_useThisCompAsServer}\r\n          >\r\n            {' '}\r\n            📡{' '}\r\n          </button>\r\n        </div>\r\n\r\n\r\n        <div\r\n          style={{ width: '100%', height: '100%' }}\r\n          onClick={this.helper_toggleHideDebug}\r\n        >\r\n          <img className='chevron top-chevron' src={up_chevron}></img>\r\n          <div style={{height: '0.3em'}}></div>\r\n        </div>\r\n\r\n        {/* <button className='debug_button' onClick={this.admin_refreshAll}>\r\n          Refresh All\r\n        </button> */}\r\n\r\n        <button\r\n          onClick={this.disp_showFileSavedMessage}\r\n          id='showSavedFilesBtn'\r\n          className='hidden_button'\r\n        ></button>\r\n\r\n        {/* <pre hidden={this.state.numCams === 8}>\r\n          debug mode, remember to change num cams back to 8\r\n        </pre> */}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // * UTILITY * //\r\n  readTextFile(file, stateName) {\r\n    fetch(file)\r\n      .then(response => response.text())\r\n      .then(text => {\r\n        if (stateName === 'data') {\r\n          this.setState({ data: text.split('\\n') }, () => {\r\n            let currSentence = qs('sentence_index')\r\n              ? this.state.data[Number(qs('sentence_index'))]\r\n              : this.state.data[0];\r\n            this.setState({ currSentence }, () => {\r\n              // console.log(this.state.curr_sentence)\r\n            });\r\n            this.setState({\r\n              totalWords: this.state.data.reduce(\r\n                (sum, sentence) => sum + sentence.length,\r\n                0\r\n              )\r\n            });\r\n          });\r\n        } else {\r\n          this.setState({ pinyin: text.split('\\n') })\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * * UPDATE *\r\n   *\r\n   */\r\n  updateFilesSaved = numFiles => {\r\n    const successMessage =\r\n      numFiles % this.state.requiredNumCams === 0\r\n        ? ' (successful)'\r\n        : ' (not all saved)';\r\n    this.setState({\r\n      numFilesSavedTotal: numFiles\r\n    });\r\n    if (successMessage === ' (successful)') {\r\n      this.updateGreenLightStatus(true);\r\n    }\r\n    try {\r\n      document.getElementById('num_files_saved').innerHTML =\r\n        'Total Files Saved: ' + numFiles + successMessage;\r\n    } catch (NotYetLoadedException) {\r\n      // console.error(NotYetLoadedException);\r\n    }\r\n  };\r\n\r\n  handler_useThisCompAsServer = () => {\r\n    ip_util.clientGetIP(ip => {\r\n      console.log(ip);\r\n      if (ip.split('.').length === 4) {\r\n        ip = 'http://' + ip + ':5000';\r\n        cogoToast.loading(ip, {\r\n          position: 'top-right',\r\n          hideAfter: 3,\r\n          onClick: hide => {\r\n            hide();\r\n          }\r\n        });\r\n        this.helper_setServerIP(ip);\r\n        // if (!this.hideServerOfflineRef) {\r\n        //   this.hideServerOfflineRef = this.helper_showServerNotOnline();\r\n        // } else {\r\n        //   this.hideServerOfflineRef();\r\n        // }\r\n      }\r\n    });\r\n    // const [ip_v6, ip_v4] = [temp[0], temp[1]]\r\n    // console.log(ip_v4);\r\n  };\r\n\r\n  handler_IPOnChange = e => {\r\n    this.setState({ ip: e.target.value });\r\n  };\r\n\r\n  debugCogoToastOnRef = undefined;\r\n  debugCogoToastOffRef = undefined;\r\n  \r\n  showDebugOn = () => {\r\n    return cogoToast.success(<p>Debug on. <br/>Required Cams: 1</p>, { hideAfter: 1, onClick: hide => hide() });\r\n  }\r\n\r\n  showDebugOff = () => {\r\n    return cogoToast.warn(<p>Debug off. <br/>Required Cams: 8</p>, { hideAfter: 1, onClick: hide => hide() });\r\n  }\r\n\r\n  handler_debugToggle = debugMode => {\r\n    console.log('toggling debug mode');\r\n    this.setState({ debugMode }, () => {\r\n      if (debugMode) {\r\n        this.setState({ requiredNumCams: 1 });\r\n        this.debugCogoToastOnRef = this.showDebugOn();\r\n        {/* if (this.debugCogoToastOffRef) {this.debugCogoToastOffRef()} */}\r\n        {/* console.log(this.debugCogoToastOffRef); */}\r\n        {/* this.helper_removeHoverEventListeners(); */}\r\n      } else {\r\n        this.setState({ requiredNumCams: 8 });\r\n        this.debugCogoToastOffRef = this.showDebugOff();\r\n        {/* if (this.debugCogoToastOnRef) {this.debugCogoToastOnRef()} */}\r\n        {/* console.log(this.debugCogoToastOnRef); */}\r\n\r\n        // this.helper_addHoverEventListeners();\r\n        this.handler_hoverMouseOutBottom();\r\n      }\r\n    });\r\n  };\r\n\r\n  handler_fileSaveSuccess = numFiles => {\r\n    this.updateFilesSaved(numFiles);\r\n    this.setState(\r\n      {\r\n        numFilesSavedInd: this.state.numFilesSavedInd + 1\r\n      },\r\n      () => {\r\n        {/* console.log('this occured: ' + this.state.numFilesSavedInd + ' times.'); */}\r\n        if (this.state.numFilesSavedInd === this.state.requiredNumCams) {\r\n          {\r\n            /* console.log('correct number of files saved'); */ }\r\n          try {\r\n            document.getElementById('showSavedFilesBtn').click();\r\n            document.getElementById('showSavedFilesBtn').disabled = true;\r\n            this.setState({\r\n                numFilesSavedInd: 0\r\n              },\r\n              () => {\r\n                cogoToast.success(\r\n                  this.style_makeEmojiToastLayout(\r\n                    ['视频已成功保存', '可继续录'],\r\n                    '🔥'\r\n                  ), {\r\n                    hideAfter: 1,\r\n                    onClick: hide => {\r\n                      hide();\r\n                    }\r\n                  }\r\n                );\r\n              }\r\n            );\r\n\r\n            this.updateGreenLightStatus(true);\r\n          } catch (Exception) {\r\n            console.error(Exception);\r\n          }\r\n        }\r\n        try {\r\n          document.getElementById('testerNextBtn').disabled = true;\r\n        } catch (NotYetLoadedException) {\r\n          //\r\n        }\r\n        \r\n      }\r\n    );\r\n  };\r\n\r\n  updateDetectedNumCams = detectedNumCams => {\r\n    this.setState({ detectedNumCams });\r\n    this.state.socket.emit('client: updateTotalCams', () => [this.state.computerID, detectedNumCams]);\r\n    this.updateGreenLightStatus(true);\r\n    if (this.showNoCamsRef) {this.showNoCamsRef();}\r\n    try {\r\n      document.getElementsByClassName('debug_sm_input')[0].className +=\r\n        this.state.detectedNumCams > 0 ? ' serverPlaceholderConnected' : '';\r\n      document\r\n        .getElementById('numCamsInput')\r\n        .classList.remove('warning_message');\r\n    } catch (NotYetLoadedException) {\r\n      //\r\n    }\r\n  };\r\n\r\n  /**\r\n   * * UPDATE *\r\n   * Updates the state computerID with param id\r\n   * @param {string} id\r\n   */\r\n  updateCompID = id => {\r\n    const status = {};\r\n    this.setState({ computerID: id });\r\n    status[this.state.computerID] = [];\r\n    this.setState({ computerStatus: status }, () => {\r\n      // console.log(\"init computer status\", this.state.computerStatus);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * * STYLE *\r\n   * Takes a string and finds a substring and returns a stylized version of it,\r\n   * specifically to add the 🖥 icon in front of the ID.\r\n   * @param {string} str The full string\r\n   * @param {string} find The particular substring to find\r\n   * @returns {string} The stylized string\r\n   */\r\n  style_addThisCpuIcon = (str, find) => {\r\n    var re = new RegExp(find, 'g');\r\n    return str.replace(re, '🖥: ' + find);\r\n  };\r\n\r\n  style_makeEmojiToastLayout = (msg, emoji) => {\r\n    return (\r\n      <div className='cogo-toast'>\r\n        <div className='cogo-toast-emoji-left'> {emoji}</div>\r\n        <div>\r\n          {msg[0]}\r\n          <br />\r\n          {msg[1]}\r\n        </div>\r\n        <div className='cogo-toast-emoji-right'> {emoji}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  ref_hideLoader = undefined;\r\n  disp_showFileSavingLoader = () => {\r\n    this.ref_hideLoader = cogoToast.loading(\r\n      this.style_makeEmojiToastLayout(['视频正在保存', '请耐心等待'], '⌛️'),\r\n      {\r\n        hideAfter: 0,\r\n        onClick: hide => {\r\n          hide();\r\n        }\r\n      }\r\n    );\r\n    // setTimeout(hideLoader, 2000);\r\n    // hideLoader();\r\n    // this.setState({ hideLoader }, () => {\r\n    //   console.log(hideLoader);\r\n    // });\r\n  };\r\n\r\n\r\n  /**\r\n   * Hides file saved loader\r\n   */\r\n  disp_showFileSavedMessage = () => {\r\n    try {\r\n      this.ref_hideLoader();\r\n    } catch (NotOnPageError) {\r\n      //\r\n    }\r\n  };\r\n\r\n  disp_showServerConencted = () => {\r\n    cogoToast.success('Server is online.', {\r\n      position: 'top-right',\r\n      hideAfter: 0,\r\n      onClick: hide => {\r\n        hide();\r\n      }\r\n    });\r\n    if (this.hideServerOfflineRef) this.hideServerOfflineRef();\r\n    try {\r\n      document\r\n        .getElementsByClassName('server_status')[0]\r\n        .classList.add('server_online');\r\n      document\r\n        .getElementById('inputServerIP')\r\n        .classList.add('serverPlaceholderConnected');\r\n      document\r\n        .getElementById('inputServerIP')\r\n        .classList.remove('warning_message');\r\n    } catch (NotYetLoadedException) {\r\n      //\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Socket Listeners — adds socket listeners to the page to respond to \r\n   * messages sent from server\r\n   */\r\n  initSocketListeners = () => {\r\n    this.state.socket.on('server: online', () => {\r\n      {/* console.log('did this happen?') */}\r\n      {/* if (useMediaQuery({ minWidth: 768 })) { */}\r\n        this.disp_showServerConencted();\r\n      {/* } */}\r\n    });\r\n\r\n    this.state.socket.on('server: sync name, sentence index', data => {\r\n      const name = data.name;\r\n      const currSentenceIndex = data.currSentenceIndex;\r\n      {/* if (this.state.currSentenceIndex === 0 ) { */}\r\n      this.setState({name, currSentenceIndex});\r\n      {/* } */}\r\n    })\r\n\r\n    if (!this.hideServerOfflineRef) {\r\n      this.hideServerOfflineRef = this.helper_showServerNotOnline();\r\n    } else {\r\n      this.hideServerOfflineRef();\r\n    }\r\n\r\n    this.state.socket.on('server: disconnected', () => {\r\n      this.setState({ connectedToServer: false }, () => {\r\n        document\r\n          .getElementsByClassName('server_status')[0]\r\n          .classList.remove('server_online');\r\n        document\r\n          .getElementById('inputServerIP')\r\n          .classList.remove('serverPlaceholderConnected');\r\n      });\r\n    });\r\n\r\n    this.state.socket.on('server: connected', computerID => {\r\n      {/* console.log('detected server connected'); */}\r\n      {/* if (useMediaQuery({ minWidth: 768 })) { */}\r\n        this.disp_showServerConencted();\r\n      {/* } */}\r\n      \r\n      this.setState({ connectedToServer: true, computerID }, () => {\r\n        try {\r\n          document\r\n            .getElementById('inputServerIP')\r\n            .classList.add('serverPlaceholderConnected');\r\n        } catch(NotYetLoadedException) {\r\n          //\r\n        }\r\n      });\r\n    });\r\n\r\n    this.state.socket.on('server: connected sync id', id => {\r\n      if (this.updateCompID) this.updateCompID(id);\r\n      this.updateCompID = null;\r\n    });\r\n\r\n    this.state.socket.on('server: reset cams', () => {\r\n      this.updateGreenLightStatus(true);\r\n    });\r\n\r\n    this.state.socket.on('server: response for connection status', status => {\r\n      try {\r\n        document.getElementById(\r\n          'connection_status'\r\n        ).innerHTML = this.style_addThisCpuIcon(\r\n          JSON.stringify(status, null, 2),\r\n          this.state.computerID\r\n        );\r\n      } catch (NotOnPageError) {\r\n        //\r\n      }\r\n    });\r\n\r\n    this.state.socket.on('server: response for progress', progress => {\r\n      this.setState({ recordProgress: progress ? progress : 0 });\r\n    });\r\n\r\n    this.state.socket.on('server: response for numFilesSaved', numFiles => {\r\n      this.updateFilesSaved(numFiles);\r\n    });\r\n\r\n    this.state.socket.on('server: save files successful', numFiles => {\r\n      this.handler_fileSaveSuccess(numFiles);\r\n    });\r\n\r\n    this.state.socket.on('server: computer connected order', connectedOrder => {\r\n      this.setState({\r\n        connectedOrderMap: update(this.state.connectedOrderMap, {\r\n          $merge: connectedOrder\r\n        })\r\n      });\r\n    });\r\n\r\n    const refreshRates = [0, 666, 1332];\r\n    this.state.socket.on('server: refresh all', () => {\r\n      const conectedOrderNum = this.state.connectedOrderMap[\r\n        this.state.computerID\r\n      ];\r\n      const indexRefresh = conectedOrderNum % 3;\r\n      const time = refreshRates[indexRefresh];\r\n      setTimeout(() => {\r\n        window.location.reload(false);\r\n      }, time);\r\n    });\r\n  };\r\n\r\n  async pingServer() {\r\n    try {\r\n      const serverID = this.state.socket.io.opts.hostname;\r\n      const response = await fetch(serverID, { mode: 'no-cors' });\r\n      if (!response.ok) {\r\n        console.error('no response from server');\r\n      } else {\r\n        console.log('connection successful');\r\n      }\r\n    } catch (ServerPingFailedException) {\r\n      console.error(ServerPingFailedException);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * **Update: Sentence**\r\n   * Sent as a prop to components to update app-level state of\r\n   * curr_sentence_index, and updates server with new index. It also updates\r\n   * url query without refreshing to reflect current index.\r\n   * @param {string} curr_sentence\r\n   */\r\n  updateSentence = currSentence => {\r\n    if (currSentence === '$next') {\r\n      this.setState(\r\n        { currSentenceIndex: this.state.currSentenceIndex + 1 },\r\n        () => {\r\n          this.updateSentence(this.state.data[this.state.currSentenceIndex]);\r\n          this.state.socket.emit('client: update sentence_index', {\r\n            name: qs('name'),\r\n            currSentenceIndex: this.state.currSentenceIndex\r\n          });\r\n        }\r\n      );\r\n    } else if (currSentence === '$prev') {\r\n      this.setState(\r\n        {\r\n          currSentenceIndex: Math.max(this.state.currSentenceIndex - 1, 0)\r\n        },\r\n        () => {\r\n          this.updateSentence(this.state.data[this.state.currSentenceIndex]);\r\n          this.state.socket.emit('client: update sentence_index', {\r\n            name: qs('name'),\r\n            currSentenceIndex: this.state.currSentenceIndex\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      window.history.pushState(\r\n        null,\r\n        null,\r\n        '?name=' +\r\n          qs('name') +\r\n          '&sentence_index=' +\r\n          this.state.currSentenceIndex\r\n      );\r\n      // console.log(curr_sentence);\r\n      this.setState({\r\n        currSentence,\r\n        currPageInTable:\r\n          Math.floor(\r\n            Number(this.state.currSentenceIndex) / this.state.sentencesPerPageInTable\r\n          ) + 1\r\n      });\r\n    }\r\n  };\r\n\r\n  updatePage = new_page => {\r\n    if (new_page === 0) {\r\n      // do nothing\r\n    }\r\n    console.log('update page', new_page);\r\n    this.setState({\r\n      currPageInTable: new_page >= 1 ? new_page : 1\r\n    });\r\n  };\r\n\r\n  updateRecordProgress = currSentenceIndex => {\r\n    // { <sentence_index> : <bool: recorded/not> }\r\n    this.setState(\r\n      {\r\n        recordProgress: currSentenceIndex\r\n      },\r\n      () => {\r\n        this.state.socket.emit(\r\n          'client: update recording progress',\r\n          currSentenceIndex\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  updateConnectionStatus = recordingStatus => {\r\n    if (this.state.computerStatus[this.state.computerID]) {\r\n      const status = {};\r\n      status[this.state.computerID] = recordingStatus;\r\n      this.setState({ computerStatus: status }, () => {});\r\n      this.state.socket.emit('client: update recording status', status);\r\n    }\r\n    this.getStatus();\r\n  };\r\n\r\n  updateGreenLightStatus = bool => {\r\n    this.setState({ recordGreenLight: bool });\r\n  };\r\n\r\n  updateTotalTime = time => {\r\n    this.setState({ totalTime: time });\r\n  };\r\n\r\n  getStatus = () => {\r\n    this.state.socket.emit('client: ping for connection status');\r\n    this.state.socket.emit('client: ping for numFilesSaved');\r\n    this.state.socket.emit('client: ping for progress');\r\n  };\r\n\r\n  admin_resetCams = () => {\r\n    // cogoToast.info('Adding Cam', {hideAfter: 1})\r\n    // this.state.socket.emit('client: stop cams');\r\n    // this.updateGreenLightStatus(true);\r\n    this.state.socket.emit('client: reset cams');\r\n    try {\r\n      document.getElementById('addCamBtn').click();\r\n    } catch (NotYetLoadedException) {\r\n      //\r\n    }\r\n    this.state.socket.emit('client: dummy vid, do not save');\r\n    // cogoToast.info('Cams are reset', { hideAfter: 0.3 });\r\n    // setTimeout(() => document.getElementById('resetCamsBtn').classList.remove('btn-active'), 1000);\r\n  };\r\n\r\n  admin_refreshAll = () => {\r\n    this.state.socket.emit('client: refresh all');\r\n  };\r\n\r\n  admin_resetProgress = () => {\r\n    this.state.socket.emit('client: update recording progress', 0);\r\n    this.state.socket.emit('client: delete total time');\r\n    this.state.socket.emit('client: reset total files');\r\n    this.state.socket.emit('client: save total start time', new Date());\r\n    window.location = window.location.origin + window.location.pathname;\r\n    this.state.socket.emit('client: save total time', [0, 0, 0]);\r\n  };\r\n\r\n  helper_emitInitialSocketMessages = () => {\r\n    if (!this.helper_checkIfMobileView) {\r\n      this.state.socket.emit('client: update sentence_index', {\r\n        name: qs('name'),\r\n        currSentenceIndex: this.state.currSentenceIndex\r\n      });\r\n    } else {\r\n      this.state.socket.emit('client: ask for recording status');\r\n    }\r\n    this.state.socket.emit('client: check for progress');\r\n    this.state.socket.emit('client: ask for sync id');\r\n  };\r\n\r\n  helper_toggleModal = id => {\r\n    document.getElementById(id).click();\r\n  };\r\n\r\n  helper_checkIfMobileView = () => {\r\n    return window.location.href.includes('mobile');\r\n  };\r\n\r\n  helper_showNoCamsConnected = () => {\r\n    return cogoToast.warn('No Webcams', {\r\n      hideAfter: 0,\r\n      position: 'top-left',\r\n      onClick: this.admin_resetCams\r\n    });\r\n  };\r\n\r\n  helper_showServerNotOnline = () => {\r\n    {/* console.log('no server'); */}\r\n    return cogoToast.warn('Server is offline', {\r\n      hideAfter: 0,\r\n      position: 'top-right',\r\n      onClick: hide => {\r\n        this.handler_useThisCompAsServer();\r\n        hide();\r\n      }\r\n    });\r\n  };\r\n\r\n  helper_setServerIP = ip => {\r\n    this.state.socket.disconnect();\r\n    try {\r\n      document\r\n        .getElementsByClassName('server_status')[0]\r\n        .classList.remove('server_online');\r\n      document\r\n        .getElementById('inputServerIP')\r\n        .classList.remove('serverPlaceholderConnected');\r\n    } catch (NotYetLoadedException) {\r\n      //\r\n    }\r\n    this.setState({\r\n      socket: io(ip),\r\n      ip: ip\r\n    });\r\n    this.state.socket.emit('client: check server connection');\r\n    // if (hideLoadServer) {hideLoadServer()}\r\n    setTimeout(() => {\r\n      if (\r\n        !document\r\n          .getElementsByClassName('server_status')[0]\r\n          .className.includes('server_online')\r\n      ) {\r\n        this.hideServerOfflineRef = this.helper_showServerNotOnline();\r\n      }\r\n    }, 3000);\r\n    this.initSocketListeners();\r\n  };\r\n\r\n  helper_addHoverEventListeners = () => {\r\n    const debugHoverArea = document.getElementById('debug_hover_area');\r\n    const bottomHoverArea = document.getElementById('bottom_hover_area');\r\n    debugHoverArea.addEventListener(\r\n      'mouseout',\r\n      this.handler_hoverMouseOutDebug\r\n    );\r\n    debugHoverArea.addEventListener(\r\n      'mouseover',\r\n      this.handler_hoverMouseOverDebug\r\n    );\r\n    bottomHoverArea.addEventListener(\r\n      'mouseout',\r\n      this.handler_hoverMouseOutBottom\r\n    );\r\n    bottomHoverArea.addEventListener(\r\n      'mouseover',\r\n      this.handler_hoverMouseOverBottom\r\n    );\r\n  };\r\n\r\n  helper_removeHoverEventListeners = () => {\r\n    const debugHoverArea = document.getElementById('debug_hover_area');\r\n    const bottomHoverArea = document.getElementById('bottom_hover_area');\r\n    debugHoverArea.removeEventListener(\r\n      'mouseout',\r\n      this.handler_hoverMouseOutDebug\r\n    );\r\n    debugHoverArea.removeEventListener(\r\n      'mouseover',\r\n      this.handler_hoverMouseOverDebug\r\n    );\r\n    bottomHoverArea.removeEventListener(\r\n      'mouseout',\r\n      this.handler_hoverMouseOutBottom\r\n    );\r\n    bottomHoverArea.removeEventListener(\r\n      'mouseover',\r\n      this.handler_hoverMouseOverBottom\r\n    );\r\n    this.handler_hoverMouseOverBottom();\r\n  };\r\n\r\n  helper_toggleHideDebug = () => {\r\n    {/* console.log('toggling'); */}\r\n    try {\r\n      if (\r\n        document\r\n          .getElementsByClassName('debug-group')[0]\r\n          .className.includes('hideDebug')\r\n      ) {\r\n        this.handler_hoverMouseOverDebug();\r\n      } else {\r\n        this.handler_hoverMouseOutDebug();\r\n      }\r\n    } catch (NotYetLoadedException) {\r\n      //\r\n    }\r\n  };\r\n\r\n  helper_toggleHideBottom = () => {\r\n    console.log('toggling hide bottom');\r\n    try {\r\n      if (\r\n        document\r\n          .getElementsByClassName('panel_BG')[0]\r\n          .className.includes('hideBottom')\r\n      ) {\r\n        this.handler_hoverMouseOverBottom();\r\n      } else {\r\n        this.handler_hoverMouseOutBottom();\r\n      }\r\n    } catch (NotYetLoadedException) {\r\n      //\r\n    }\r\n  };\r\n\r\n  helper_toggleCamState = () => {\r\n    this.setState({ addCamState: !this.state.addCamState });\r\n  };\r\n\r\n  handler_keyup() {\r\n    for (const btn of document.getElementsByClassName('debug_button')) {\r\n      btn.classList.remove('btn-active');\r\n    }\r\n  }\r\n\r\n  handler_keydown = event => {\r\n    let key = event.key;\r\n    const inputServerIP = document.getElementById('inputServerIP');\r\n\r\n    if (\r\n      [' ', 'ArrowLeft', 'ArrowRight', 'Escape', 'Enter', 's'].includes(key)\r\n    ) {\r\n      try {\r\n        if (key === ' ') {\r\n          document.getElementById('testerRecordBtn').click();\r\n          event.preventDefault();\r\n        } else if (key === 'ArrowLeft') {\r\n          if (document.activeElement !== inputServerIP) {\r\n            document.getElementById('testerPrevBtn').click();\r\n            event.preventDefault();\r\n          }\r\n        } else if (key === 'ArrowRight') {\r\n          if (document.activeElement !== inputServerIP) {\r\n            document.getElementById('testerNextBtn').click();\r\n            event.preventDefault();\r\n          }\r\n        } else if (key === 'Escape') {\r\n          document.getElementById('resetCamsBtn').click();\r\n          event.preventDefault();\r\n        } else if (key === 'Enter') {\r\n          console.log('detected enter key');\r\n          if (document.getElementsByClassName('modali-button-destructive')[0]) {\r\n            document\r\n              .getElementsByClassName('modali-button-destructive')[0]\r\n              .click();\r\n            this.admin_resetProgress();\r\n          }\r\n          if (document.activeElement === inputServerIP) {\r\n            this.helper_setServerIP(inputServerIP.value);\r\n            cogoToast.info('Updated IP: ' + inputServerIP.value, {\r\n              onClick: hide => {\r\n                hide();\r\n              }\r\n            });\r\n            event.preventDefault();\r\n          }\r\n        } else if (key === 's') {\r\n          {/* if (document.activeElement.nodeName.toLowerCase() !== 'input') */}\r\n            {/* this.helper_toggleModal('overallStatus'); */}\r\n        }\r\n      } catch (NotYetLoadedException) {\r\n        // console.error(NotYetLoadedException);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App.js';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/collapse-chevron.f7659f72.svg\";","module.exports = __webpack_public_path__ + \"static/media/expand-chevron.bab69e8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/beg.26ab4fd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/end.782b7486.svg\";","const os = require('os');\r\nconst ifaces = os.networkInterfaces();\r\n\r\nconst nodeGetIP = () => {\r\n  let address = undefined;\r\n  Object.keys(ifaces).forEach(function (ifname) {\r\n    ifaces[ifname].forEach(function (iface) {\r\n      if ('IPv4' !== iface.family || iface.internal !== false) {\r\n        // skip over internal (i.e. 127.0.0.1) and non-ipv4 addresses\r\n        return;\r\n      }\r\n      if (ifname === 'en0') {\r\n        address = iface.address;\r\n      }\r\n    });\r\n  });\r\n  console.log(address);\r\n  return address;\r\n}\r\n\r\nconst clientGetIP = onNewIP => { //  onNewIp - your listener function for new IPs\r\n  var myPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection; //compatibility for firefox and chrome\r\n  var pc = new myPeerConnection({\r\n      iceServers: []\r\n    }),\r\n    noop = function () {},\r\n    localIPs = {},\r\n    ipRegex = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/g;\r\n\r\n  function ipIterate(ip) {\r\n    if (!localIPs[ip]) onNewIP(ip);\r\n    localIPs[ip] = true;\r\n  }\r\n  pc.createDataChannel(\"\"); //create a bogus data channel\r\n  pc.createOffer(function (sdp) {\r\n    sdp.sdp.split('\\n').forEach(function (line) {\r\n      if (line.indexOf('candidate') < 0) return;\r\n      line.match(ipRegex).forEach(ipIterate);\r\n    });\r\n    pc.setLocalDescription(sdp, noop, noop);\r\n  }, noop); // create offer and set local description\r\n  pc.onicecandidate = function (ice) { //listen for candidate events\r\n    if (!ice || !ice.candidate || !ice.candidate.candidate || !ice.candidate.candidate.match(ipRegex)) return;\r\n    ice.candidate.candidate.match(ipRegex).forEach(ipIterate);\r\n  };\r\n}\r\n\r\nmodule.exports = {\r\n  nodeGetIP,\r\n  clientGetIP\r\n}","module.exports = __webpack_public_path__ + \"static/media/up-chevron.2c8a940e.svg\";","module.exports = __webpack_public_path__ + \"static/media/down-chevron.8bbb95c1.svg\";"],"sourceRoot":""}